{"version":3,"file":"worker.nodom.js","sources":["../../../output/worker-thread/strings.js","../../../output/worker-thread/MutationTransfer.js","../../../output/worker-thread/nodes.js","../../../output/worker-thread/Storage.js","../../../output/worker-thread/index.nodom.amp.js","../../../output/worker-thread/phase.js","../../../output/worker-thread/amp/amp.js","../../../output/worker-thread/function.js","../../../output/worker-thread/dom/DocumentStub.js","../../../output/worker-thread/amp/delete-globals.js","../../../output/worker-thread/initialize-storage.js"],"sourcesContent":["/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    if (mapping.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return mapping.get(value);\n    }\n    mapping.set(value, count);\n    transfer.push(value);\n    return count++;\n}\n/**\n * Retrieve the index for a string (mostly used for tests).\n * @param value string value we need to know the index of\n * @returns index in the map for the string\n */\nexport function getForTesting(value) {\n    return mapping.get(value);\n}\nexport function getForTestingPartial(value) {\n    const found = Array.from(mapping.keys()).find((str) => str.includes(value));\n    if (found) {\n        return mapping.get(found);\n    }\n}\n/**\n * Returns strings registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const strings = transfer;\n    transfer = [];\n    return strings;\n}\n//# sourceMappingURL=strings.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { consume as consumeNodes } from './nodes';\nimport { consume as consumeStrings } from './strings';\nimport { phase, set as setPhase } from './phase';\nlet pending = false;\nlet pendingMutations = [];\n// TODO(choumx): Change `mutation` to Array<Uint16> to prevent casting errors e.g. integer underflow, precision loss.\nexport function transfer(document, mutation) {\n    if (phase > 0 /* Initializing */ && document[58 /* allowTransfer */]) {\n        pending = true;\n        pendingMutations = pendingMutations.concat(mutation);\n        Promise.resolve().then((_) => {\n            if (pending) {\n                const nodes = new Uint16Array(consumeNodes().reduce((acc, node) => acc.concat(node[8 /* creationFormat */]), [])).buffer;\n                const mutations = new Uint16Array(pendingMutations).buffer;\n                document.postMessage({\n                    [54 /* phase */]: phase,\n                    [12 /* type */]: phase === 2 /* Mutating */ ? 3 /* MUTATE */ : 2 /* HYDRATE */,\n                    [37 /* nodes */]: nodes,\n                    [41 /* strings */]: consumeStrings(),\n                    [36 /* mutations */]: mutations,\n                }, [nodes, mutations]);\n                pendingMutations = [];\n                pending = false;\n                setPhase(2 /* Mutating */);\n            }\n        });\n    }\n}\n//# sourceMappingURL=MutationTransfer.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { phase } from './phase';\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Override the store for a node during the initialization phase.\n * @param node Node to store and modify with index\n * @param override Override number to use as the identifier.\n *\n * NOTE: THIS IS ONLY TO BE USED DURING INITIALIZATION.\n */\nexport function storeOverride(node, override) {\n    if (phase === 0 /* Initializing */) {\n        mapping.set((node[7 /* index */] = override), node);\n        count = Math.max(count, override);\n    }\n    return override;\n}\n/**\n * Stores a node in mapping, and makes the index available on the Node directly.\n * @param node Node to store and modify with index\n * @return index Node was stored with in mapping\n */\nexport function store(node) {\n    if (node[7 /* index */] !== undefined) {\n        return node[7 /* index */];\n    }\n    mapping.set((node[7 /* index */] = ++count), node);\n    if (phase > 0 /* Initializing */) {\n        // After Initialization, include all future dom node creation into the list for next transfer.\n        transfer.push(node);\n    }\n    return count;\n}\n/**\n * Retrieves a node based on an index.\n * @param index location in map to retrieve a Node for\n * @return either the Node represented in index position, or null if not available.\n */\nexport function get(index) {\n    // mapping has a 1 based index, since on first store we ++count before storing.\n    return (!!index && mapping.get(index)) || null;\n}\n/**\n * Returns nodes registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const copy = transfer;\n    transfer = [];\n    return copy;\n}\n//# sourceMappingURL=nodes.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { store } from './strings';\nimport { transfer } from './MutationTransfer';\n/**\n * @param document\n * @param location\n * @param data\n */\nexport function createStorage(document, location, data) {\n    const storage = Object.assign(Object.create(null), data);\n    // Define properties on a prototype-less object instead of a class so that\n    // it behaves more like normal objects, e.g. bracket notation and JSON.stringify.\n    const define = Object.defineProperty;\n    define(storage, 'length', {\n        get() {\n            return Object.keys(this).length;\n        },\n    });\n    define(storage, 'key', {\n        value(n) {\n            const keys = Object.keys(this);\n            return n >= 0 && n < keys.length ? keys[n] : null;\n        },\n    });\n    define(storage, 'getItem', {\n        value(key) {\n            const value = this[key];\n            return value ? value : null;\n        },\n    });\n    define(storage, 'setItem', {\n        value(key, value) {\n            const stringValue = String(value);\n            this[key] = stringValue;\n            transfer(document, [12 /* STORAGE */, 2 /* SET */, location, store(key), store(stringValue)]);\n        },\n    });\n    define(storage, 'removeItem', {\n        value(key) {\n            delete this[key];\n            transfer(document, [\n                12 /* STORAGE */,\n                2 /* SET */,\n                location,\n                store(key),\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    define(storage, 'clear', {\n        value() {\n            Object.keys(this).forEach((key) => {\n                delete this[key];\n            });\n            transfer(document, [\n                12 /* STORAGE */,\n                2 /* SET */,\n                location,\n                0,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    return storage;\n}\n//# sourceMappingURL=Storage.js.map","/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AMP } from './amp/amp';\nimport { callFunctionMessageHandler, exportFunction } from './function';\nimport { DocumentStub } from './dom/DocumentStub';\nimport { deleteGlobals } from './amp/delete-globals';\nimport { initializeStorage } from './initialize-storage';\nconst noop = () => void 0;\nexport const workerDOM = (function (postMessage, addEventListener, removeEventListener) {\n    const document = new DocumentStub();\n    // TODO(choumx): Avoid polluting Document's public API.\n    document.postMessage = postMessage;\n    document.addGlobalEventListener = addEventListener;\n    document.removeGlobalEventListener = removeEventListener;\n    return document.defaultView;\n})(postMessage.bind(self) || noop, addEventListener.bind(self) || noop, removeEventListener.bind(self) || noop);\n// Modify global scope by removing disallowed properties.\ndeleteGlobals(self);\n// Offer APIs like AMP.setState() on the global scope.\nself.AMP = new AMP(workerDOM.document);\n// Allows for function invocation\nself.exportFunction = exportFunction;\naddEventListener('message', (evt) => callFunctionMessageHandler(evt, workerDOM.document));\nexport const hydrate = (document, strings, hydrateableNode, cssKeys, globalEventHandlerKeys, size, localStorageInit, sessionStorageInit) => {\n    initializeStorage(document, localStorageInit, sessionStorageInit);\n};\n//# sourceMappingURL=index.nodom.amp.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport let phase = 0 /* Initializing */;\nexport const set = (newPhase) => (phase = newPhase);\n//# sourceMappingURL=phase.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { store } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class AMP {\n    document;\n    constructor(document) {\n        this.document = document;\n    }\n    /**\n     * Returns a promise that resolves with the value of `key`.\n     * @param key\n     */\n    getState(key = '') {\n        return new Promise((resolve) => {\n            const messageHandler = (event) => {\n                const message = event.data;\n                if (message[12 /* type */] !== 11 /* GET_STORAGE */) {\n                    return;\n                }\n                // TODO: There is a race condition here if there are multiple concurrent\n                // getState(k) messages in flight, where k is the same value.\n                const storageMessage = message;\n                if (storageMessage[74 /* storageKey */] !== key) {\n                    return;\n                }\n                this.document.removeGlobalEventListener('message', messageHandler);\n                const value = storageMessage[21 /* value */];\n                resolve(value);\n            };\n            this.document.addGlobalEventListener('message', messageHandler);\n            transfer(this.document, [12 /* STORAGE */, 1 /* GET */, 2 /* AmpState */, /* key */ store(key), /* value */ 0]);\n            setTimeout(resolve, 500, null); // TODO: Why a magical constant, define and explain.\n        });\n    }\n    /**\n     * Deep-merges `state` into the existing state.\n     * @param state\n     */\n    setState(state) {\n        // Stringify `state` so it can be post-messaged as a transferrable.\n        let stringified;\n        try {\n            stringified = JSON.stringify(state);\n        }\n        catch (e) {\n            throw new Error(`AMP.setState only accepts valid JSON as input.`);\n        }\n        transfer(this.document, [12 /* STORAGE */, 2 /* SET */, 2 /* AmpState */, /* key */ 0, /* value */ store(stringified)]);\n    }\n}\n//# sourceMappingURL=amp.js.map","/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { transfer } from './MutationTransfer';\nimport { store } from './strings';\nconst exportedFunctions = {};\nexport function callFunctionMessageHandler(event, document) {\n    const msg = event.data;\n    if (msg[12 /* type */] !== 12 /* FUNCTION */) {\n        return;\n    }\n    const functionMessage = msg;\n    const fnIdentifier = functionMessage[77 /* functionIdentifier */];\n    const fnArguments = JSON.parse(functionMessage[78 /* functionArguments */]);\n    const index = functionMessage[7 /* index */];\n    const fn = exportedFunctions[fnIdentifier];\n    if (!fn) {\n        transfer(document, [\n            13 /* FUNCTION_CALL */,\n            2 /* REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Exported function \"${fnIdentifier}\" could not be found.`)),\n        ]);\n        return;\n    }\n    Promise.resolve(fn) // Forcing promise flows allows us to skip a try/catch block.\n        .then((f) => f.apply(null, fnArguments))\n        .then((value) => {\n        transfer(document, [13 /* FUNCTION_CALL */, 1 /* RESOLVE */, index, store(JSON.stringify(value))]);\n    }, (err) => {\n        const errorMessage = JSON.stringify(err.message || err);\n        transfer(document, [\n            13 /* FUNCTION_CALL */,\n            2 /* REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Function \"${fnIdentifier}\" threw: \"${errorMessage}\"`)),\n        ]);\n    });\n}\nexport function exportFunction(name, fn) {\n    if (!name || name === '') {\n        throw new Error(`[worker-dom]: Attempt to export function was missing an identifier.`);\n    }\n    if (typeof fn !== 'function') {\n        throw new Error(`[worker-dom]: Attempt to export non-function failed: (\"${name}\", ${typeof fn}).`);\n    }\n    if (name in exportedFunctions) {\n        throw new Error(`[worker-dom]: Attempt to re-export function failed: \"${name}\".`);\n    }\n    exportedFunctions[name] = fn;\n}\nexport function resetForTesting() {\n    for (const key of Object.keys(exportedFunctions)) {\n        delete exportedFunctions[key];\n    }\n}\n//# sourceMappingURL=function.js.map","/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { set as setPhase } from '../phase';\n/**\n * A lightweight Document stub for the no-dom amp binary.\n */\nexport class DocumentStub {\n    // Internal variables.\n    defaultView;\n    postMessage;\n    addGlobalEventListener;\n    removeGlobalEventListener;\n    [58 /* allowTransfer */] = true;\n    [7 /* index */] = -1;\n    constructor() {\n        this.defaultView = { document: this };\n    }\n    [59 /* observe */]() {\n        setPhase(2 /* Mutating */);\n    }\n}\n//# sourceMappingURL=DocumentStub.js.map","/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ALLOWLISTED_GLOBALS = {\n    Array: true,\n    ArrayBuffer: true,\n    BigInt: true,\n    BigInt64Array: true,\n    BigUint64Array: true,\n    Boolean: true,\n    Cache: true,\n    CustomEvent: true,\n    DataView: true,\n    Date: true,\n    Error: true,\n    EvalError: true,\n    Event: true,\n    EventTarget: true,\n    Float32Array: true,\n    Float64Array: true,\n    Function: true,\n    Infinity: true,\n    Int16Array: true,\n    Int32Array: true,\n    Int8Array: true,\n    Intl: true,\n    JSON: true,\n    Map: true,\n    Math: true,\n    NaN: true,\n    Number: true,\n    Object: true,\n    Promise: true,\n    Proxy: true,\n    RangeError: true,\n    ReferenceError: true,\n    Reflect: true,\n    RegExp: true,\n    Set: true,\n    String: true,\n    Symbol: true,\n    SyntaxError: true,\n    TextDecoder: true,\n    TextEncoder: true,\n    TypeError: true,\n    URIError: true,\n    URL: true,\n    Uint16Array: true,\n    Uint32Array: true,\n    Uint8Array: true,\n    Uint8ClampedArray: true,\n    WeakMap: true,\n    WeakSet: true,\n    WebAssembly: true,\n    WebSocket: true,\n    XMLHttpRequest: true,\n    atob: true,\n    addEventListener: true,\n    removeEventListener: true,\n    btoa: true,\n    caches: true,\n    clearInterval: true,\n    clearTimeout: true,\n    console: true,\n    decodeURI: true,\n    decodeURIComponent: true,\n    document: true,\n    encodeURI: true,\n    encodeURIComponent: true,\n    escape: true,\n    fetch: true,\n    indexedDB: true,\n    isFinite: true,\n    isNaN: true,\n    location: true,\n    navigator: true,\n    onerror: true,\n    onrejectionhandled: true,\n    onunhandledrejection: true,\n    parseFloat: true,\n    parseInt: true,\n    performance: true,\n    requestAnimationFrame: true,\n    cancelAnimationFrame: true,\n    self: true,\n    setTimeout: true,\n    setInterval: true,\n    unescape: true,\n};\n// Modify global scope by removing disallowed properties.\nexport function deleteGlobals(global) {\n    /**\n     * @param object\n     * @param property\n     * @return True if property was deleted from object. Otherwise, false.\n     */\n    const deleteUnsafe = (object, property) => {\n        if (!ALLOWLISTED_GLOBALS.hasOwnProperty(property)) {\n            try {\n                delete object[property];\n                return true;\n            }\n            catch (e) { }\n        }\n        return false;\n    };\n    // Walk up global's prototype chain and dereference non-allowlisted properties\n    // until EventTarget is reached.\n    let current = global;\n    while (current && current.constructor !== EventTarget) {\n        const deleted = [];\n        const failedToDelete = [];\n        Object.getOwnPropertyNames(current).forEach((prop) => {\n            if (deleteUnsafe(current, prop)) {\n                deleted.push(prop);\n            }\n            else {\n                failedToDelete.push(prop);\n            }\n        });\n        console.info(`Removed ${deleted.length} references from`, current, ':', deleted);\n        if (failedToDelete.length) {\n            console.info(`Failed to remove ${failedToDelete.length} references from`, current, ':', failedToDelete);\n        }\n        current = Object.getPrototypeOf(current);\n    }\n}\n//# sourceMappingURL=delete-globals.js.map","/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createStorage } from './Storage';\nexport function initializeStorage(document, localStorageInit, sessionStorageInit) {\n    const window = document.defaultView;\n    if (localStorageInit.storage) {\n        window.localStorage = createStorage(document, 0 /* Local */, localStorageInit.storage);\n    }\n    else {\n        console.warn(localStorageInit.errorMsg);\n    }\n    if (sessionStorageInit.storage) {\n        window.sessionStorage = createStorage(document, 1 /* Session */, sessionStorageInit.storage);\n    }\n    else {\n        console.warn(sessionStorageInit.errorMsg);\n    }\n}\n//# sourceMappingURL=initialize-storage.js.map"],"names":["store","value","mapping","has","get","set","count","push","transfer","document","mutation","phase","pending","pendingMutations","concat","Promise","resolve","then","_","buffer","Uint16Array","consume","copy","consumeNodes","reduce","acc","node","mutations","postMessage","nodes","consume$1","strings","consumeStrings","newPhase","createStorage","location","data","storage","Object","assign","create","define","defineProperty","keys","this","length","n","key","_value","stringValue","String","forEach","_this","addEventListener","removeEventListener","Map","AMP","getState","addGlobalEventListener","messageHandler","event","message","removeGlobalEventListener","setState","state","stringified","JSON","stringify","e","exportedFunctions","DocumentStub","defaultView","ALLOWLISTED_GLOBALS","Array","ArrayBuffer","BigInt","BigInt64Array","BigUint64Array","Boolean","Cache","CustomEvent","DataView","Date","Error","EvalError","Event","EventTarget","Float32Array","Float64Array","Function","Infinity","Int16Array","Int32Array","Int8Array","Intl","Math","NaN","Number","Proxy","RangeError","ReferenceError","Reflect","RegExp","Set","Symbol","SyntaxError","TextDecoder","TextEncoder","TypeError","URIError","URL","Uint32Array","Uint8Array","Uint8ClampedArray","WeakMap","WeakSet","WebAssembly","WebSocket","XMLHttpRequest","atob","btoa","caches","clearInterval","clearTimeout","console","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","fetch","indexedDB","isFinite","isNaN","navigator","onerror","onrejectionhandled","onunhandledrejection","parseFloat","parseInt","performance","requestAnimationFrame","cancelAnimationFrame","self","setTimeout","setInterval","unescape","noop","workerDOM","bind","global","current","getOwnPropertyNames","prop","hasOwnProperty","object","getPrototypeOf","constructor","exportFunction","name","fn","evt","callFunctionMessageHandler","msg","fnIdentifier","fnArguments","parse","index","f","apply","err","errorMessage","hydrate","hydrateableNode","cssKeys","globalEventHandlerKeys","size","localStorageInit","sessionStorageInit","window","localStorage","sessionStorage"],"mappings":"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"}