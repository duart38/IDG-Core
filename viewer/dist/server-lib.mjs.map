{"version":3,"file":"server-lib.mjs","sources":["../output/worker-thread/dom/matchElements.js","../output/worker-thread/phase.js","../output/worker-thread/nodes.js","../output/worker-thread/strings.js","../output/worker-thread/MutationTransfer.js","../output/worker-thread/MutationObserver.js","../output/worker-thread/dom/Node.js","../output/worker-thread/dom/ParentNode.js","../output/worker-thread/dom/DOMTokenList.js","../output/worker-thread/dom/Attr.js","../output/worker-thread/css/CSSStyleDeclaration.js","../output/worker-thread/dom/enhanceElement.js","../output/third_party/html-parser/html-parser.js","../output/worker-thread/Event.js","../output/worker-thread/dom/Element.js","../output/worker-thread/dom/HTMLElement.js","../output/worker-thread/dom/HTMLAnchorElement.js","../output/worker-thread/dom/HTMLButtonElement.js","../output/worker-thread/serializeTransferrableObject.js","../output/worker-thread/canvas/CanvasGradient.js","../output/worker-thread/canvas/CanvasPattern.js","../output/worker-thread/canvas/OffscreenCanvasPolyfill.js","../output/worker-thread/canvas/canvas-utils.js","../output/worker-thread/canvas/FakeNativeCanvasPattern.js","../output/worker-thread/canvas/CanvasRenderingContext2D.js","../output/worker-thread/dom/HTMLCanvasElement.js","../output/worker-thread/dom/HTMLDataElement.js","../output/worker-thread/dom/HTMLDataListElement.js","../output/worker-thread/dom/HTMLEmbedElement.js","../output/worker-thread/dom/HTMLFormControlsMixin.js","../output/worker-thread/dom/HTMLFieldSetElement.js","../output/worker-thread/dom/HTMLFormElement.js","../output/worker-thread/dom/HTMLIFrameElement.js","../output/worker-thread/dom/HTMLImageElement.js","../output/worker-thread/dom/HTMLInputLabelsMixin.js","../output/worker-thread/dom/HTMLInputElement.js","../output/worker-thread/dom/HTMLLabelElement.js","../output/worker-thread/dom/HTMLLinkElement.js","../output/worker-thread/dom/HTMLMapElement.js","../output/worker-thread/dom/HTMLMeterElement.js","../output/worker-thread/dom/HTMLModElement.js","../output/worker-thread/dom/HTMLOListElement.js","../output/worker-thread/dom/HTMLOptionElement.js","../output/worker-thread/dom/HTMLProgressElement.js","../output/worker-thread/dom/HTMLQuoteElement.js","../output/worker-thread/dom/HTMLScriptElement.js","../output/worker-thread/dom/HTMLSelectElement.js","../output/worker-thread/dom/HTMLSourceElement.js","../output/worker-thread/dom/HTMLStyleElement.js","../output/worker-thread/dom/HTMLTableCellElement.js","../output/worker-thread/dom/HTMLTableColElement.js","../output/worker-thread/dom/HTMLTableElement.js","../output/worker-thread/dom/HTMLTableRowElement.js","../output/worker-thread/dom/HTMLTableSectionElement.js","../output/worker-thread/dom/HTMLTimeElement.js","../output/worker-thread/dom/CharacterData.js","../output/worker-thread/dom/Text.js","../output/worker-thread/dom/Comment.js","../output/worker-thread/dom/DocumentFragment.js","../output/worker-thread/dom/Document.js","../output/worker-thread/SyncValuePropagation.js","../output/worker-thread/ResizePropagation.js","../output/worker-thread/server-lib.js"],"sourcesContent":["/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { toLower, toUpper } from '../../utils';\n// To future authors: It would be great if we could enforce that elements are not modified by a ConditionPredicate.\nexport const tagNameConditionPredicate = (tagNames) => (element) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    return tagNames.includes(element.tagName);\n};\nexport const elementPredicate = (node) => node.nodeType === 1 /* ELEMENT_NODE */;\nexport const matchChildrenElements = (node, conditionPredicate) => {\n    const matchingElements = [];\n    node.childNodes.forEach((child) => {\n        if (elementPredicate(child)) {\n            if (conditionPredicate(child)) {\n                matchingElements.push(child);\n            }\n            matchingElements.push(...matchChildrenElements(child, conditionPredicate));\n        }\n    });\n    return matchingElements;\n};\nexport const matchChildElement = (element, conditionPredicate) => {\n    let returnValue = null;\n    element.children.some((child) => {\n        if (conditionPredicate(child)) {\n            returnValue = child;\n            return true;\n        }\n        const grandChildMatch = matchChildElement(child, conditionPredicate);\n        if (grandChildMatch !== null) {\n            returnValue = grandChildMatch;\n            return true;\n        }\n        return false;\n    });\n    return returnValue;\n};\nexport const matchNearestParent = (element, conditionPredicate) => {\n    while ((element = element.parentNode)) {\n        if (conditionPredicate(element)) {\n            return element;\n        }\n    }\n    return null;\n};\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\n * @param attrSelector the selector we are trying to match for.\n * @param element the element being tested.\n * @return boolean for whether we match the condition\n */\nexport const matchAttrReference = (attrSelector, element) => {\n    if (!attrSelector) {\n        return false;\n    }\n    const equalPos = attrSelector.indexOf('=');\n    const selectorLength = attrSelector.length;\n    const caseInsensitive = attrSelector.charAt(selectorLength - 2) === 'i';\n    const endPos = caseInsensitive ? selectorLength - 3 : selectorLength - 1;\n    if (equalPos !== -1) {\n        const equalSuffix = attrSelector.charAt(equalPos - 1);\n        const possibleSuffixes = ['~', '|', '$', '^', '*'];\n        const attrString = possibleSuffixes.includes(equalSuffix) ? attrSelector.substring(1, equalPos - 1) : attrSelector.substring(1, equalPos);\n        const rawValue = attrSelector.substring(equalPos + 1, endPos);\n        const rawAttrValue = element.getAttribute(attrString);\n        if (rawAttrValue) {\n            const casedValue = caseInsensitive ? toLower(rawValue) : rawValue;\n            const casedAttrValue = caseInsensitive ? toLower(rawAttrValue) : rawAttrValue;\n            switch (equalSuffix) {\n                case '~':\n                    return casedAttrValue.split(' ').indexOf(casedValue) !== -1;\n                case '|':\n                    return casedAttrValue === casedValue || casedAttrValue === `${casedValue}-`;\n                case '^':\n                    return casedAttrValue.startsWith(casedValue);\n                case '$':\n                    return casedAttrValue.endsWith(casedValue);\n                case '*':\n                    return casedAttrValue.indexOf(casedValue) !== -1;\n                default:\n                    return casedAttrValue === casedValue;\n            }\n        }\n        return false;\n    }\n    else {\n        return element.hasAttribute(attrSelector.substring(1, endPos));\n    }\n};\n//# sourceMappingURL=matchElements.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport let phase = 0 /* Initializing */;\nexport const set = (newPhase) => (phase = newPhase);\n//# sourceMappingURL=phase.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { phase } from './phase';\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Override the store for a node during the initialization phase.\n * @param node Node to store and modify with index\n * @param override Override number to use as the identifier.\n *\n * NOTE: THIS IS ONLY TO BE USED DURING INITIALIZATION.\n */\nexport function storeOverride(node, override) {\n    if (phase === 0 /* Initializing */) {\n        mapping.set((node[7 /* index */] = override), node);\n        count = Math.max(count, override);\n    }\n    return override;\n}\n/**\n * Stores a node in mapping, and makes the index available on the Node directly.\n * @param node Node to store and modify with index\n * @return index Node was stored with in mapping\n */\nexport function store(node) {\n    if (node[7 /* index */] !== undefined) {\n        return node[7 /* index */];\n    }\n    mapping.set((node[7 /* index */] = ++count), node);\n    if (phase > 0 /* Initializing */) {\n        // After Initialization, include all future dom node creation into the list for next transfer.\n        transfer.push(node);\n    }\n    return count;\n}\n/**\n * Retrieves a node based on an index.\n * @param index location in map to retrieve a Node for\n * @return either the Node represented in index position, or null if not available.\n */\nexport function get(index) {\n    // mapping has a 1 based index, since on first store we ++count before storing.\n    return (!!index && mapping.get(index)) || null;\n}\n/**\n * Returns nodes registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const copy = transfer;\n    transfer = [];\n    return copy;\n}\n//# sourceMappingURL=nodes.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    if (mapping.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return mapping.get(value);\n    }\n    mapping.set(value, count);\n    transfer.push(value);\n    return count++;\n}\n/**\n * Retrieve the index for a string (mostly used for tests).\n * @param value string value we need to know the index of\n * @returns index in the map for the string\n */\nexport function getForTesting(value) {\n    return mapping.get(value);\n}\nexport function getForTestingPartial(value) {\n    const found = Array.from(mapping.keys()).find((str) => str.includes(value));\n    if (found) {\n        return mapping.get(found);\n    }\n}\n/**\n * Returns strings registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const strings = transfer;\n    transfer = [];\n    return strings;\n}\n//# sourceMappingURL=strings.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { consume as consumeNodes } from './nodes';\nimport { consume as consumeStrings } from './strings';\nimport { phase, set as setPhase } from './phase';\nlet pending = false;\nlet pendingMutations = [];\n// TODO(choumx): Change `mutation` to Array<Uint16> to prevent casting errors e.g. integer underflow, precision loss.\nexport function transfer(document, mutation) {\n    if (phase > 0 /* Initializing */ && document[58 /* allowTransfer */]) {\n        pending = true;\n        pendingMutations = pendingMutations.concat(mutation);\n        Promise.resolve().then((_) => {\n            if (pending) {\n                const nodes = new Uint16Array(consumeNodes().reduce((acc, node) => acc.concat(node[8 /* creationFormat */]), [])).buffer;\n                const mutations = new Uint16Array(pendingMutations).buffer;\n                document.postMessage({\n                    [54 /* phase */]: phase,\n                    [12 /* type */]: phase === 2 /* Mutating */ ? 3 /* MUTATE */ : 2 /* HYDRATE */,\n                    [37 /* nodes */]: nodes,\n                    [41 /* strings */]: consumeStrings(),\n                    [36 /* mutations */]: mutations,\n                }, [nodes, mutations]);\n                pendingMutations = [];\n                pending = false;\n                setPhase(2 /* Mutating */);\n            }\n        });\n    }\n}\n//# sourceMappingURL=MutationTransfer.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { transfer } from './MutationTransfer';\nconst observers = [];\nlet pendingMutations = false;\n/**\n * @param observerTarget\n * @param target\n */\nconst matchesIndex = (observerTarget, target) => {\n    return !!observerTarget && observerTarget[7 /* index */] === target[7 /* index */];\n};\n/**\n * @param observer\n * @param record\n */\nconst pushMutation = (observer, record) => {\n    observer.pushRecord(record);\n    if (!pendingMutations) {\n        pendingMutations = true;\n        Promise.resolve().then(() => {\n            pendingMutations = false;\n            observers.forEach((observer) => observer.callback(observer.takeRecords()));\n        });\n    }\n};\n/**\n * @param document\n * @param record\n * @param transferable\n */\nexport function mutate(document, record, transferable) {\n    // Post-message `transferable` to the main thread to apply mutations.\n    transfer(document, transferable);\n    // The MutationRecord is only used for external callers of MutationObserver.\n    observers.forEach((observer) => {\n        for (let t = record.target; t; t = t.parentNode) {\n            if (matchesIndex(observer.target, t)) {\n                pushMutation(observer, record);\n                break;\n            }\n        }\n    });\n}\nexport class MutationObserver {\n    callback;\n    [42 /* records */] = [];\n    target;\n    options;\n    constructor(callback) {\n        this.callback = callback;\n    }\n    /**\n     * Register the MutationObserver instance to observe a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @param target Node to observe DOM mutations\n     */\n    observe(target, options) {\n        this.disconnect();\n        this.target = target;\n        this.options = options || {};\n        observers.push(this);\n    }\n    /**\n     * Stop the MutationObserver instance from observing a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     */\n    disconnect() {\n        this.target = null;\n        const index = observers.indexOf(this);\n        if (index >= 0) {\n            observers.splice(index, 1);\n        }\n    }\n    /**\n     * Empties the MutationObserver instance's record queue and returns what was in there.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @return Mutation Records stored on this MutationObserver instance.\n     */\n    takeRecords() {\n        const records = this[42 /* records */];\n        return records.splice(0, records.length);\n    }\n    /**\n     * NOTE: This method doesn't exist on native MutationObserver.\n     * @param record MutationRecord to store for this instance.\n     */\n    pushRecord(record) {\n        this[42 /* records */].push(record);\n    }\n}\n//# sourceMappingURL=MutationObserver.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { store as storeNodeMapping, storeOverride as storeOverrideNodeMapping } from '../nodes';\nimport { toLower } from '../../utils';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\n/**\n * Propagates a property change for a Node to itself and all childNodes.\n * @param node Node to start applying change to\n * @param property Property to modify\n * @param value New value to apply\n */\nexport const propagate = (node, property, value) => {\n    node[property] = value;\n    node.childNodes.forEach((child) => propagate(child, property, value));\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/Node\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n//\n// Please note, in this implmentation Node doesn't extend EventTarget.\n// This is intentional to reduce the number of classes.\nexport class Node {\n    ownerDocument; // TODO(choumx): Should be a Document.\n    // https://drafts.csswg.org/selectors-4/#scoping-root\n    [45 /* scopingRoot */];\n    nodeType;\n    nodeName;\n    childNodes = [];\n    parentNode = null;\n    isConnected = false;\n    [7 /* index */];\n    [9 /* transferredFormat */];\n    [8 /* creationFormat */];\n    [10 /* handlers */] = {};\n    constructor(nodeType, nodeName, ownerDocument, overrideIndex) {\n        this.nodeType = nodeType;\n        this.nodeName = nodeName;\n        this.ownerDocument = ownerDocument || this;\n        this[45 /* scopingRoot */] = this;\n        this[7 /* index */] = overrideIndex ? storeOverrideNodeMapping(this, overrideIndex) : storeNodeMapping(this);\n        this[9 /* transferredFormat */] = [this[7 /* index */]];\n    }\n    // Unimplemented Properties\n    // Node.baseURI – https://developer.mozilla.org/en-US/docs/Web/API/Node/baseURI\n    // Unimplemented Methods\n    // Node.compareDocumentPosition() – https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n    // Node.getRootNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode\n    // Node.isDefaultNamespace() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isDefaultNamespace\n    // Node.isEqualNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isEqualNode\n    // Node.isSameNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isSameNode\n    // Node.lookupPrefix() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupPrefix\n    // Node.lookupNamespaceURI() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupNamespaceURI\n    // Node.normalize() – https://developer.mozilla.org/en-US/docs/Web/API/Node/normalize\n    // Implemented at Element/Text layer\n    // Node.nodeValue – https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeValue\n    // Node.cloneNode – https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * Use `this.getTextContent()` instead of `super.textContent` to avoid incorrect or expensive ES5 transpilation.\n     */\n    getTextContent() {\n        let textContent = '';\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            childNodes.forEach((childNode) => (textContent += childNode.textContent));\n            return textContent;\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/firstChild\n     * @return Node's first child in the tree, or null if the node has no children.\n     */\n    get firstChild() {\n        return this.childNodes[0] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/lastChild\n     * @return The last child of a node, or null if there are no child elements.\n     */\n    get lastChild() {\n        return this.childNodes[this.childNodes.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/nextSibling\n     * @return node immediately following the specified one in it's parent's childNodes, or null if one doesn't exist.\n     */\n    get nextSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) + 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/previousSibling\n     * @return node immediately preceding the specified one in its parent's childNodes, or null if the specified node is the first in that list.\n     */\n    get previousSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/hasChildNodes\n     * @return boolean if the Node has childNodes.\n     */\n    hasChildNodes() {\n        return this.childNodes.length > 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n     * @param otherNode\n     * @return whether a Node is a descendant of a given Node\n     */\n    contains(otherNode) {\n        if (otherNode === this) {\n            return true;\n        }\n        if (this.childNodes.length > 0) {\n            if (this.childNodes.includes(this)) {\n                return true;\n            }\n            return this.childNodes.some((child) => child.contains(otherNode));\n        }\n        return false;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore\n     * @param child\n     * @param referenceNode\n     * @return child after it has been inserted.\n     */\n    insertBefore(child, referenceNode) {\n        if (child === null || child === this) {\n            // The new child cannot contain the parent.\n            return child;\n        }\n        if (child.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach((node) => this.insertBefore(node, referenceNode));\n        }\n        else if (referenceNode == null) {\n            // When a referenceNode is not valid, appendChild(child).\n            return this.appendChild(child);\n        }\n        else if (this.childNodes.indexOf(referenceNode) >= 0) {\n            // Should only insertBefore direct children of this Node.\n            child.remove();\n            // Removing a child can cause this.childNodes to change, meaning we need to splice from its updated location.\n            this.childNodes.splice(this.childNodes.indexOf(referenceNode), 0, child);\n            this[56 /* insertedNode */](child);\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                nextSibling: referenceNode,\n                type: 2 /* CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* CHILD_LIST */,\n                this[7 /* index */],\n                referenceNode[7 /* index */],\n                0,\n                1,\n                0,\n                child[7 /* index */],\n            ]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * When a Node is inserted, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [56 /* insertedNode */](child) {\n        child.parentNode = this;\n        propagate(child, 'isConnected', this.isConnected);\n        propagate(child, 45 /* scopingRoot */, this[45 /* scopingRoot */]);\n    }\n    /**\n     * When a node is removed, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [57 /* removedNode */](child) {\n        child.parentNode = null;\n        propagate(child, 'isConnected', false);\n        propagate(child, 45 /* scopingRoot */, child);\n    }\n    /**\n     * Adds the specified childNode argument as the last child to the current node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild\n     * @param child Child Node to append to this Node.\n     * @return Node the appended node.\n     */\n    appendChild(child) {\n        if (child.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach(this.appendChild, this);\n        }\n        else {\n            child.remove();\n            this.childNodes.push(child);\n            this[56 /* insertedNode */](child);\n            const previousSibling = this.childNodes[this.childNodes.length - 2];\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                previousSibling,\n                type: 2 /* CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* CHILD_LIST */,\n                this[7 /* index */],\n                0,\n                previousSibling ? previousSibling[7 /* index */] : 0,\n                1,\n                0,\n                child[7 /* index */],\n            ]);\n        }\n        return child;\n    }\n    /**\n     * Removes a child node from the current element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild\n     * @param child Child Node to remove from this Node.\n     * @return Node removed from the tree or null if the node wasn't attached to this tree.\n     */\n    removeChild(child) {\n        const index = this.childNodes.indexOf(child);\n        const exists = index >= 0;\n        if (exists) {\n            this.childNodes.splice(index, 1);\n            this[57 /* removedNode */](child);\n            mutate(this.ownerDocument, {\n                removedNodes: [child],\n                type: 2 /* CHILD_LIST */,\n                target: this,\n            }, [2 /* CHILD_LIST */, this[7 /* index */], 0, 0, 0, 1, child[7 /* index */]]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * @param newChild\n     * @param oldChild\n     * @return child that was replaced.\n     * @note `HierarchyRequestError` not handled e.g. newChild is an ancestor of current node.\n     * @see https://dom.spec.whatwg.org/#concept-node-replace\n     */\n    replaceChild(newChild, oldChild) {\n        if (newChild === oldChild ||\n            // In DOM, this throws DOMException: \"The node to be replaced is not a child of this node.\"\n            oldChild.parentNode !== this ||\n            // In DOM, this throws DOMException: \"The new child element contains the parent.\"\n            newChild.contains(this)) {\n            return oldChild;\n        }\n        // If newChild already exists in the DOM, it is first removed.\n        // TODO: Consider using a mutation-free API here to avoid two mutations\n        // per replaceChild() call.\n        newChild.remove();\n        const index = this.childNodes.indexOf(oldChild);\n        this.childNodes.splice(index, 1, newChild);\n        this[57 /* removedNode */](oldChild);\n        this[56 /* insertedNode */](newChild);\n        mutate(this.ownerDocument, {\n            addedNodes: [newChild],\n            removedNodes: [oldChild],\n            type: 2 /* CHILD_LIST */,\n            nextSibling: this.childNodes[index + 1],\n            target: this,\n        }, [\n            2 /* CHILD_LIST */,\n            this[7 /* index */],\n            this.childNodes[index + 1] ? this.childNodes[index + 1][7 /* index */] : 0,\n            0,\n            1,\n            1,\n            newChild[7 /* index */],\n            oldChild[7 /* index */],\n        ]);\n        return oldChild;\n    }\n    /**\n     * Replaces the current node with the provided Array<node|string>.\n     * @param nodes\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/replaceWith\n     */\n    replaceWith(...nodes) {\n        const parent = this.parentNode;\n        let nodeIterator = nodes.length;\n        let currentNode;\n        if (!parent) {\n            return;\n        }\n        if (!nodeIterator) {\n            parent.removeChild(this);\n        }\n        while (nodeIterator--) {\n            currentNode = nodes[nodeIterator];\n            if (typeof currentNode !== 'object') {\n                currentNode = this.ownerDocument.createTextNode(currentNode);\n            }\n            // TODO: Investigate inserting all new nodes in a single operation.\n            if (!nodeIterator) {\n                // currentNode is the first argument (currentNode === arguments[0])\n                parent.replaceChild(currentNode, this);\n            }\n            else {\n                parent.insertBefore(currentNode, this.nextSibling);\n            }\n        }\n    }\n    /**\n     * Removes this Node from the tree it belogs too.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove\n     */\n    remove() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n    }\n    /**\n     * Add an event listener to callback when a specific event type is dispatched.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function called when event is dispatched.\n     */\n    addEventListener(type, handler, options = {}) {\n        const lowerType = toLower(type);\n        const storedType = storeString(lowerType);\n        const handlers = this[10 /* handlers */][lowerType];\n        let index = 0;\n        if (handlers) {\n            index = handlers.push(handler);\n        }\n        else {\n            this[10 /* handlers */][lowerType] = [handler];\n        }\n        transfer(this.ownerDocument, [\n            4 /* EVENT_SUBSCRIPTION */,\n            this[7 /* index */],\n            0,\n            1,\n            storedType,\n            index,\n            Number(Boolean(options.capture)),\n            Number(Boolean(options.once)),\n            Number(Boolean(options.passive)),\n            Number(Boolean(options.workerDOMPreventDefault)),\n        ]);\n    }\n    /**\n     * Remove a registered event listener for a specific event type.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function to stop calling when event is dispatched.\n     */\n    removeEventListener(type, handler) {\n        const lowerType = toLower(type);\n        const handlers = this[10 /* handlers */][lowerType];\n        const index = !!handlers ? handlers.indexOf(handler) : -1;\n        if (index >= 0) {\n            handlers.splice(index, 1);\n            transfer(this.ownerDocument, [\n                4 /* EVENT_SUBSCRIPTION */,\n                this[7 /* index */],\n                1,\n                0,\n                storeString(lowerType),\n                index,\n            ]);\n        }\n    }\n    /**\n     * Dispatch an event for this Node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n     * @param event Event to dispatch to this node and potentially cascade to parents.\n     */\n    dispatchEvent(event) {\n        let target = (event.currentTarget = this);\n        let handlers;\n        let iterator;\n        do {\n            handlers = target && target[10 /* handlers */] && target[10 /* handlers */][toLower(event.type)];\n            if (handlers) {\n                for (iterator = handlers.length; iterator--;) {\n                    if ((handlers[iterator].call(target, event) === false || event[51 /* end */]) && event.cancelable) {\n                        break;\n                    }\n                }\n            }\n        } while (event.bubbles && !(event.cancelable && event[50 /* stop */]) && (target = target && target.parentNode));\n        return !event.defaultPrevented;\n    }\n}\n//# sourceMappingURL=Node.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { elementPredicate, matchAttrReference, matchChildrenElements } from './matchElements';\nimport { Node } from './Node';\nimport { containsIndexOf, toLower } from '../../utils';\n/*\nNormally ParentNode is implemented as a mixin, but since the Node class is an abstract\nthis makes it hard to build a mixin that recieves a base of the representations of Node needing\nthe mixed in functionality.\n\n// Partially implemented Mixin Methods\n// Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n// - Element selectors\n// - ID selectors\n// - Class selectors\n// - Attribute selectors\n// Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n// Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n*/\nexport class ParentNode extends Node {\n    /**\n     * Getter returning children of an Element that are Elements themselves.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/children\n     * @return Element objects that are children of this ParentNode, omitting all of its non-element nodes.\n     */\n    get children() {\n        return this.childNodes.filter(elementPredicate);\n    }\n    /**\n     * Getter returning the number of child elements of a Element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/childElementCount\n     * @return number of child elements of the given Element.\n     */\n    get childElementCount() {\n        return this.children.length;\n    }\n    /**\n     * Getter returning the first Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/firstElementChild\n     * @return first childNode that is also an element.\n     */\n    get firstElementChild() {\n        return this.childNodes.find(elementPredicate) || null;\n    }\n    /**\n     * Getter returning the last Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/lastElementChild\n     * @return first childNode that is also an element.\n     */\n    get lastElementChild() {\n        const children = this.children;\n        return children[children.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n     * @param selector the selector we are trying to match for.\n     * @return Element with matching selector.\n     */\n    querySelector(selector) {\n        const matches = querySelectorAll(this, selector);\n        return matches ? matches[0] : null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n     * @param selector the selector we are trying to match for.\n     * @return Elements with matching selector.\n     */\n    querySelectorAll(selector) {\n        return querySelectorAll(this, selector);\n    }\n}\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n * @param node the node to filter results under.\n * @param selector the selector we are trying to match for.\n * @return Element with matching selector.\n */\nfunction querySelectorAll(node, selector) {\n    // As per spec: https://dom.spec.whatwg.org/#scope-match-a-selectors-string\n    // First, parse the selector\n    const selectorBracketIndexes = [selector.indexOf('['), selector.indexOf(']')];\n    const selectorHasAttr = containsIndexOf(selectorBracketIndexes[0]) && containsIndexOf(selectorBracketIndexes[1]);\n    const elementSelector = selectorHasAttr ? selector.substring(0, selectorBracketIndexes[0]) : selector;\n    const attrSelector = selectorHasAttr ? selector.substring(selectorBracketIndexes[0], selectorBracketIndexes[1] + 1) : null;\n    // TODO(nainar): Parsing selectors is needed when we add in more complex selectors.\n    // Second, find all the matching elements on the Document\n    let matcher;\n    if (selector[0] === '[') {\n        matcher = (element) => matchAttrReference(selector, element);\n    }\n    else if (elementSelector[0] === '#') {\n        matcher = selectorHasAttr\n            ? (element) => element.id === elementSelector.substr(1) && matchAttrReference(attrSelector, element)\n            : (element) => element.id === elementSelector.substr(1);\n    }\n    else if (elementSelector[0] === '.') {\n        matcher = selectorHasAttr\n            ? (element) => element.classList.contains(elementSelector.substr(1)) && matchAttrReference(attrSelector, element)\n            : (element) => element.classList.contains(elementSelector.substr(1));\n    }\n    else {\n        matcher = selectorHasAttr\n            ? (element) => element.localName === toLower(elementSelector) && matchAttrReference(attrSelector, element)\n            : (element) => element.localName === toLower(elementSelector);\n    }\n    // Third, filter to return elements that exist within the querying element's descendants.\n    return matcher\n        ? matchChildrenElements(node[45 /* scopingRoot */], matcher).filter((element) => node !== element && node.contains(element))\n        : [];\n}\n//# sourceMappingURL=ParentNode.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nconst WHITESPACE_REGEX = /\\s/;\n/**\n * Synchronizes the string getter/setter with the actual DOMTokenList instance.\n * @param defineOn Element or class extension to define getter/setter pair for token list access.\n * @param accessorKey Key used to access DOMTokenList directly from specific element.\n * @param propertyName Key used to access DOMTokenList as string getter/setter.\n */\nexport function synchronizedAccessor(defineOn, accessorKey, propertyName) {\n    Object.defineProperty(defineOn.prototype, propertyName, {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this[accessorKey].value;\n        },\n        set(value) {\n            this[accessorKey].value = value;\n        },\n    });\n}\nexport class DOMTokenList {\n    [43 /* tokens */] = [];\n    [13 /* target */];\n    [18 /* attributeName */];\n    [44 /* storeAttribute */];\n    /**\n     * The DOMTokenList interface represents a set of space-separated tokens.\n     * It is indexed beginning with 0 as with JavaScript Array objects and is case-sensitive.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList\n     * @param target Specific Element instance to modify when value is changed.\n     * @param attributeName Name of the attribute used by Element to access DOMTokenList.\n     */\n    constructor(target, attributeName) {\n        this[13 /* target */] = target;\n        this[18 /* attributeName */] = attributeName;\n        this[44 /* storeAttribute */] = target[44 /* storeAttribute */].bind(target);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @return string representation of tokens (space delimitted).\n     */\n    get value() {\n        return this[43 /* tokens */].join(' ');\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/length\n     * @return integer representing the number of objects stored in the object.\n     */\n    get length() {\n        return this[43 /* tokens */].length;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @param collection String of values space delimited to replace the current DOMTokenList with.\n     */\n    set value(collection) {\n        const oldValue = this.value;\n        const newValue = collection.trim();\n        // Replace current tokens with new tokens.\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...(newValue !== '' ? newValue.split(/\\s+/) : ''));\n        this[67 /* mutated */](oldValue, newValue);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/item\n     * @param index number from DOMTokenList entities to retrieve value of\n     * @return value stored at the index requested, or undefined if beyond known range.\n     */\n    item(index) {\n        return this[43 /* tokens */][index];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/contains\n     * @param token value the DOMTokenList is tested for.\n     * @return boolean indicating if the token is contained by the DOMTokenList.\n     */\n    contains(token) {\n        return this[43 /* tokens */].includes(token);\n    }\n    /**\n     * Add a token or tokens to the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/add\n     * @param tokens each token is a string to add to a TokenList.\n     */\n    add(...tokens) {\n        const oldValue = this.value;\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...new Set(this[43 /* tokens */].concat(tokens)));\n        this[67 /* mutated */](oldValue, this.value);\n    }\n    /**\n     * Remove a token or tokens from the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/remove\n     * @param tokens each token is a string to remove from a TokenList.\n     */\n    remove(...tokens) {\n        const oldValue = this.value;\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...new Set(this[43 /* tokens */].filter((token) => !tokens.includes(token))));\n        this[67 /* mutated */](oldValue, this.value);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace\n     * @param token\n     * @param newToken\n     */\n    replace(token, newToken) {\n        if (!this[43 /* tokens */].includes(token)) {\n            return;\n        }\n        const oldValue = this.value;\n        const set = new Set(this[43 /* tokens */]);\n        if (token !== newToken) {\n            set.delete(token);\n            if (newToken !== '') {\n                set.add(newToken);\n            }\n        }\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...set);\n        this[67 /* mutated */](oldValue, this.value);\n    }\n    /**\n     * Adds or removes a token based on its presence in the token list.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle\n     * @param token string to add or remove from the token list\n     * @param force changes toggle into a one way-only operation. true => token added. false => token removed.\n     * @return true if the token is in the list following mutation, false if not.\n     */\n    toggle(token, force) {\n        if (WHITESPACE_REGEX.test(token)) {\n            throw new TypeError('Uncaught DOMException');\n        }\n        if (!this[43 /* tokens */].includes(token)) {\n            if (force === undefined || !!force) {\n                // Note, this will add the token if force is undefined (not passed into the method), or truthy.\n                this.add(token);\n            }\n            return true;\n        }\n        else if (!force) {\n            // Note, this will remove the token if force is undefined (not passed into the method), or falsey.\n            this.remove(token);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Report tokenList mutations to MutationObserver.\n     * @param oldValue value before mutation\n     * @param value value after mutation\n     * @private\n     */\n    [67 /* mutated */](oldValue, value) {\n        this[44 /* storeAttribute */](this[13 /* target */].namespaceURI, this[18 /* attributeName */], value);\n        mutate(this[13 /* target */].ownerDocument, {\n            type: 0 /* ATTRIBUTES */,\n            target: this[13 /* target */],\n            attributeName: this[18 /* attributeName */],\n            value,\n            oldValue,\n        }, [\n            0 /* ATTRIBUTES */,\n            this[13 /* target */][7 /* index */],\n            storeString(this[18 /* attributeName */]),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=DOMTokenList.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { keyValueString } from '../../utils';\nexport const toString = (attributes) => attributes.map((attr) => keyValueString(attr.name, attr.value)).join(' ');\nexport const matchPredicate = (namespaceURI, name) => (attr) => attr.namespaceURI === namespaceURI && attr.name === name;\n//# sourceMappingURL=Attr.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { mutate } from '../MutationObserver';\nimport { toLower } from '../../utils';\nimport { store as storeString } from '../strings';\nconst hyphenateKey = (key) => toLower(key.replace(/(webkit|ms|moz|khtml)/g, '-$1').replace(/([a-zA-Z])(?=[A-Z])/g, '$1-'));\nexport const appendKeys = (keys) => {\n    const keysToAppend = keys.filter((key) => isNaN(key) && !CSSStyleDeclaration.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    const previousPrototypeLength = (CSSStyleDeclaration.prototype.length || 0);\n    if (previousPrototypeLength !== 0) {\n        CSSStyleDeclaration.prototype.length = previousPrototypeLength + keysToAppend.length;\n    }\n    else {\n        Object.defineProperty(CSSStyleDeclaration.prototype, 'length', {\n            configurable: true,\n            writable: true,\n            value: keysToAppend.length,\n        });\n    }\n    keysToAppend.forEach((key, index) => {\n        const hyphenatedKey = hyphenateKey(key);\n        CSSStyleDeclaration.prototype[index + previousPrototypeLength] = hyphenatedKey;\n        Object.defineProperties(CSSStyleDeclaration.prototype, {\n            [key]: {\n                get() {\n                    return this.getPropertyValue(hyphenatedKey);\n                },\n                set(value) {\n                    this.setProperty(hyphenatedKey, value);\n                },\n            },\n        });\n    });\n};\nexport class CSSStyleDeclaration {\n    [3 /* properties */] = {};\n    [44 /* storeAttribute */];\n    [13 /* target */];\n    constructor(target) {\n        this[44 /* storeAttribute */] = target[44 /* storeAttribute */].bind(target);\n        this[13 /* target */] = target;\n    }\n    /**\n     * Retrieve the value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyValue\n     * @param key the name of the property to retrieve the value for.\n     * @return value stored for the provided key.\n     */\n    getPropertyValue(key) {\n        return this[3 /* properties */][key] || '';\n    }\n    /**\n     * Remove a value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/removeProperty\n     * @param key the name of the property to retrieve the value for.\n     * @return previously stored value for the provided key.\n     */\n    removeProperty(key) {\n        const oldValue = this.getPropertyValue(key);\n        this[3 /* properties */][key] = null;\n        this.mutated(this.cssText);\n        return oldValue;\n    }\n    /**\n     * Stores a given value for the provided key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty\n     * @param key modify this key\n     * @param value store this value\n     */\n    setProperty(key, value) {\n        this[3 /* properties */][key] = value;\n        this.mutated(this.cssText);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @return css text string representing known and valid style declarations.\n     */\n    get cssText() {\n        let value;\n        let returnValue = '';\n        for (const key in this[3 /* properties */]) {\n            if ((value = this.getPropertyValue(key)) !== '') {\n                returnValue += `${key}: ${value}; `;\n            }\n        }\n        return returnValue.trim();\n    }\n    /**\n     * Replace all style declarations with new values parsed from a cssText string.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @param value css text string to parse and store\n     */\n    set cssText(value) {\n        // value should have an \"unknown\" type but get/set can't have different types.\n        // https://github.com/Microsoft/TypeScript/issues/2521\n        const stringValue = typeof value === 'string' ? value : '';\n        this[3 /* properties */] = {};\n        const values = stringValue.split(/[:;]/);\n        const length = values.length;\n        for (let index = 0; index + 1 < length; index += 2) {\n            this[3 /* properties */][toLower(values[index].trim())] = values[index + 1].trim();\n        }\n        this.mutated(this.cssText);\n    }\n    /**\n     * Report CSSStyleDeclaration mutations to MutationObserver.\n     * @param value value after mutation\n     * @private\n     * // TODO(KB): Write a test to ensure mutations are fired for CSSStyleDeclaration changes.\n     */\n    mutated(value) {\n        const oldValue = this[44 /* storeAttribute */](this[13 /* target */].namespaceURI, 'style', value);\n        mutate(this[13 /* target */].ownerDocument, {\n            type: 0 /* ATTRIBUTES */,\n            target: this[13 /* target */],\n            attributeName: 'style',\n            value,\n            oldValue,\n        }, [\n            0 /* ATTRIBUTES */,\n            this[13 /* target */][7 /* index */],\n            storeString('style'),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=CSSStyleDeclaration.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { toLower } from '../../utils';\n// TODO: Do all boolean attributes have boolean properties?\n// TODO: Do enumerated attributes with non-boolean properties exist?\nexport const reflectProperties = (properties, defineOn) => {\n    properties.forEach((pair) => {\n        for (const property in pair) {\n            const { 0: defaultValue, 1: attributeName = toLower(property), 2: keywords } = pair[property];\n            // Boolean attributes only care about presence, not attribute value.\n            // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n            const isBooleanAttribute = typeof defaultValue === 'boolean';\n            Object.defineProperty(defineOn.prototype, property, {\n                enumerable: true,\n                get() {\n                    const element = this;\n                    const attributeValue = element.getAttribute(attributeName);\n                    if (keywords) {\n                        return element.hasAttribute(attributeName) ? attributeValue === keywords[0] : defaultValue;\n                    }\n                    if (isBooleanAttribute) {\n                        return element.hasAttribute(attributeName);\n                    }\n                    const castableValue = attributeValue || defaultValue;\n                    return typeof defaultValue === 'number' ? Number(castableValue) : String(castableValue);\n                },\n                set(value) {\n                    const element = this;\n                    if (keywords) {\n                        element.setAttribute(attributeName, value ? keywords[0] : keywords[1]);\n                    }\n                    else if (isBooleanAttribute) {\n                        value ? element.setAttribute(attributeName, '') : element.removeAttribute(attributeName);\n                    }\n                    else {\n                        element.setAttribute(attributeName, String(value));\n                    }\n                },\n            });\n        }\n    });\n};\n//# sourceMappingURL=enhanceElement.js.map","import { SVG_NAMESPACE, HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { toLower, toUpper } from '../../utils';\nfunction arr_back(arr) {\n    return arr[arr.length - 1];\n}\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nconst kMarkupPattern = /<!--([^]*)-->|<(\\/?)([a-z][-.0-9_a-z]*)([^>]*?)(\\/?)>/gi;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\nconst kAttributePattern = /(^|\\s)([^\\s\"'>\\/=]+)\\s*=\\s*(\"([^\"]+)\"|'([^']+)'|(\\S+))/gi;\nconst kSelfClosingElements = {\n    AREA: true,\n    BASE: true,\n    BR: true,\n    COL: true,\n    HR: true,\n    IMG: true,\n    INPUT: true,\n    LINK: true,\n    META: true,\n    PARAM: true,\n    SOURCE: true,\n    TRACK: true,\n    WBR: true,\n};\nconst kElementsClosedByOpening = {\n    LI: { LI: true },\n    DT: { DT: true, DD: true },\n    DD: { DD: true, DT: true },\n    P: {\n        ADDRESS: true,\n        ARTICLE: true,\n        ASIDE: true,\n        BLOCKQUOTE: true,\n        DETAILS: true,\n        DIV: true,\n        DL: true,\n        FIELDSET: true,\n        FIGCAPTION: true,\n        FIGURE: true,\n        FOOTER: true,\n        FORM: true,\n        H1: true,\n        H2: true,\n        H3: true,\n        H4: true,\n        H5: true,\n        H6: true,\n        HEADER: true,\n        HR: true,\n        MAIN: true,\n        NAV: true,\n        OL: true,\n        P: true,\n        PRE: true,\n        SECTION: true,\n        TABLE: true,\n        UL: true,\n    },\n    RT: { RT: true, RP: true },\n    RP: { RT: true, RP: true },\n    OPTGROUP: { OPTGROUP: true },\n    OPTION: { OPTION: true, OPTGROUP: true },\n    THEAD: { TBODY: true, TFOOT: true },\n    TBODY: { TBODY: true, TFOOT: true },\n    TR: { TR: true },\n    TD: { TD: true, TH: true },\n    TH: { TD: true, TH: true },\n};\nconst kElementsClosedByClosing = {\n    LI: { UL: true, OL: true },\n    A: { DIV: true },\n    B: { DIV: true },\n    I: { DIV: true },\n    P: { DIV: true },\n    TD: { TR: true, TABLE: true },\n    TH: { TR: true, TABLE: true },\n};\nconst kBlockTextElements = {\n    SCRIPT: true,\n    NOSCRIPT: true,\n    STYLE: true,\n    PRE: true,\n};\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n * @param  {string} data HTML in string format.\n * @param {!Element} root The element to use as root.\n * @return {Element}      root element\n */\nexport function parse(data, rootElement) {\n    const ownerDocument = rootElement.ownerDocument;\n    const root = ownerDocument.createElementNS(rootElement.namespaceURI, rootElement.localName);\n    let currentParent = root;\n    let currentNamespace = root.namespaceURI;\n    const stack = [root];\n    let lastTextPos = 0;\n    let match;\n    data = '<q>' + data + '</q>';\n    const tagsClosed = [];\n    if (currentNamespace !== SVG_NAMESPACE && currentNamespace !== HTML_NAMESPACE) {\n        throw new Error('Namespace not supported: ' + currentNamespace);\n    }\n    while ((match = kMarkupPattern.exec(data))) {\n        const commentContents = match[1]; // <!--contents-->\n        const beginningSlash = match[2]; // ... </ ...\n        const tagName = match[3];\n        const matchAttributes = match[4];\n        const endSlash = match[5]; // ... /> ...\n        if (lastTextPos < match.index) {\n            // if has content\n            const text = data.slice(lastTextPos, match.index);\n            currentParent.appendChild(ownerDocument.createTextNode(decodeEntities(text)));\n        }\n        lastTextPos = kMarkupPattern.lastIndex;\n        if (commentContents !== undefined) {\n            // this is a comment\n            currentParent.appendChild(ownerDocument.createComment(commentContents));\n            continue;\n        }\n        const normalizedTagName = toUpper(tagName);\n        if (normalizedTagName === 'SVG') {\n            currentNamespace = beginningSlash ? HTML_NAMESPACE : SVG_NAMESPACE;\n        }\n        if (!beginningSlash) {\n            // not </ tags\n            if (!endSlash && kElementsClosedByOpening[currentParent.tagName]) {\n                if (kElementsClosedByOpening[currentParent.tagName][normalizedTagName]) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                }\n            }\n            const childToAppend = ownerDocument.createElementNS(currentNamespace, currentNamespace === HTML_NAMESPACE ? toLower(tagName) : tagName);\n            for (let attMatch; (attMatch = kAttributePattern.exec(matchAttributes));) {\n                const attrName = attMatch[2];\n                const attrValue = attMatch[4] || attMatch[5] || attMatch[6];\n                childToAppend.setAttribute(attrName, attrValue);\n            }\n            currentParent = currentParent.appendChild(childToAppend);\n            stack.push(currentParent);\n            if (kBlockTextElements[normalizedTagName]) {\n                // a little test to find next </script> or </style> ...\n                const closeMarkup = '</' + toLower(normalizedTagName) + '>';\n                const index = data.indexOf(closeMarkup, kMarkupPattern.lastIndex);\n                if (index == -1) {\n                    throw new Error('Close markup not found.');\n                }\n                else {\n                    kMarkupPattern.lastIndex = index;\n                }\n            }\n        }\n        if (tagName === 'foreignObject') {\n            currentNamespace = beginningSlash ? SVG_NAMESPACE : HTML_NAMESPACE;\n        }\n        if (beginningSlash || endSlash || kSelfClosingElements[normalizedTagName]) {\n            // </ or /> or <br> etc.\n            while (true) {\n                if (stack.length <= 1) {\n                    break;\n                }\n                if (toUpper(currentParent.nodeName) == normalizedTagName) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                    break;\n                }\n                else {\n                    // Trying to close current tag, and move on\n                    if (kElementsClosedByClosing[currentParent.tagName]) {\n                        if (kElementsClosedByClosing[currentParent.tagName][normalizedTagName]) {\n                            stack.pop();\n                            currentParent = arr_back(stack);\n                            continue;\n                        }\n                    }\n                    // Use aggressive strategy to handle unmatching markups.\n                    break;\n                }\n            }\n        }\n    }\n    for (const node of stack) {\n        if (tagsClosed[tagsClosed.length - 1] == node.nodeName) {\n            stack.pop();\n            tagsClosed.pop();\n            currentParent = arr_back(stack);\n        }\n        else\n            break;\n    }\n    const valid = stack.length === 1;\n    if (!valid) {\n        throw new Error('Attempting to parse invalid HTML content.');\n    }\n    const wrapper = root.firstChild;\n    if (wrapper) {\n        wrapper.parentNode = null;\n        wrapper.childNodes.forEach((node) => {\n            node.parentNode = null;\n        });\n        return wrapper;\n    }\n    throw new Error('Attempting to parse invalid HTML.');\n}\n/**\n * Decodes HTML Entities.\n * Currently only works for numeric entities, as well as the 4 named entities\n * required for encoding HTML: &, \", <, >.\n * See https://developer.mozilla.org/en-US/docs/Glossary/Entity.\n *\n * TODO: create solution for other named entities.\n */\nconst RESERVED_CHARACTERS = {\n    __proto__: null,\n    amp: '&',\n    lt: '<',\n    gt: '>',\n    quot: '\"',\n};\nfunction decodeEntities(html) {\n    return html.replace(/&(?:(#x?[\\da-f]+)|([\\w]+));?/gi, function (s, numericEntity, namedEntity) {\n        // Numeric entity\n        if (numericEntity) {\n            let code = numericEntity.charAt(1).toLowerCase() === 'x' ? parseInt(numericEntity.substr(2), 16) : parseInt(numericEntity.substr(1), 10);\n            // 1114111 is the largest valid unicode codepoint.\n            if (isNaN(code) || code > 1114111) {\n                return s;\n            }\n            return String.fromCodePoint(code) || s;\n        }\n        // Named entity. Only HTML reserved entities are currently supported.\n        if (namedEntity) {\n            return RESERVED_CHARACTERS[namedEntity.toLowerCase()] || s;\n        }\n        return s;\n    });\n}\n//# sourceMappingURL=html-parser.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { get } from './nodes';\nexport class Event {\n    bubbles;\n    cancelable;\n    cancelBubble;\n    currentTarget;\n    defaultPrevented;\n    eventPhase;\n    isTrusted;\n    returnValue;\n    // public srcElement: Element | null;\n    // TODO(KB): Restore srcElement.\n    target;\n    timeStamp;\n    type;\n    scoped;\n    [50 /* stop */] = false;\n    [51 /* end */] = false;\n    pageX;\n    pageY;\n    offsetX;\n    offsetY;\n    touches;\n    changedTouches;\n    constructor(type, opts) {\n        this.type = type;\n        this.bubbles = !!opts.bubbles;\n        this.cancelable = !!opts.cancelable;\n    }\n    stopPropagation() {\n        this[50 /* stop */] = true;\n    }\n    stopImmediatePropagation() {\n        this[51 /* end */] = this[50 /* stop */] = true;\n    }\n    preventDefault() {\n        this.defaultPrevented = true;\n    }\n    /** Event.initEvent() is deprecated but supported here for legacy usage.  */\n    initEvent(type, bubbles, cancelable) {\n        this.type = type;\n        this.bubbles = bubbles;\n        this.cancelable = cancelable;\n    }\n}\n/**\n * Determine the target for a TransferrableEvent.\n * @param document Event intended within the scope of this document.\n * @param event\n */\nconst targetFromTransfer = (document, event) => {\n    if (event[13 /* target */] !== null) {\n        const index = event[13 /* target */][0];\n        // If the target was sent as index 0, use the current document.\n        return get(index !== 0 ? index : document[7 /* index */]);\n    }\n    return null;\n};\n/**\n *\n * @param document\n * @param event\n */\nconst touchListFromTransfer = (document, event, key) => {\n    if (event[key] !== undefined) {\n        const touchListKeys = Object.keys(event[key]);\n        const list = {\n            length: touchListKeys.length,\n            item(index) {\n                return this[index] || null;\n            },\n        };\n        touchListKeys.forEach((touchListKey) => {\n            const numericKey = Number(touchListKey);\n            const transferredTouch = event[key][numericKey];\n            list[numericKey] = {\n                identifier: transferredTouch[0],\n                screenX: transferredTouch[1],\n                screenY: transferredTouch[2],\n                clientX: transferredTouch[3],\n                clientY: transferredTouch[4],\n                pageX: transferredTouch[5],\n                pageY: transferredTouch[6],\n                target: get(transferredTouch[7] !== 0 ? transferredTouch[7] : document[7 /* index */]),\n            };\n        });\n        return list;\n    }\n    return undefined;\n};\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* type */] !== 1 /* EVENT */) {\n            return;\n        }\n        const event = data[39 /* event */];\n        const node = get(event[7 /* index */]);\n        if (node !== null) {\n            node.dispatchEvent(Object.assign(new Event(event[12 /* type */], {\n                bubbles: event[25 /* bubbles */],\n                cancelable: event[26 /* cancelable */],\n            }), {\n                cancelBubble: event[27 /* cancelBubble */],\n                defaultPrevented: event[29 /* defaultPrevented */],\n                eventPhase: event[30 /* eventPhase */],\n                isTrusted: event[31 /* isTrusted */],\n                returnValue: event[32 /* returnValue */],\n                target: targetFromTransfer(global.document, event),\n                timeStamp: event[33 /* timeStamp */],\n                scoped: event[34 /* scoped */],\n                keyCode: event[35 /* keyCode */],\n                pageX: event[60 /* pageX */],\n                pageY: event[61 /* pageY */],\n                offsetX: event[65 /* offsetX */],\n                offsetY: event[66 /* offsetY */],\n                touches: touchListFromTransfer(global.document, event, 62 /* touches */),\n                changedTouches: touchListFromTransfer(global.document, event, 63 /* changedTouches */),\n            }));\n        }\n    });\n}\n//# sourceMappingURL=Event.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ParentNode } from './ParentNode';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { toString as attrsToString, matchPredicate as matchAttrPredicate } from './Attr';\nimport { mutate } from '../MutationObserver';\nimport { toLower, toUpper } from '../../utils';\nimport { CSSStyleDeclaration } from '../css/CSSStyleDeclaration';\nimport { matchChildrenElements } from './matchElements';\nimport { reflectProperties } from './enhanceElement';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { parse } from '../../third_party/html-parser/html-parser';\nimport { propagate } from './Node';\nimport { Event } from '../Event';\nexport const NS_NAME_TO_CLASS = {};\nexport const registerSubclass = (localName, subclass, namespace = HTML_NAMESPACE) => (NS_NAME_TO_CLASS[`${namespace}:${localName}`] = subclass);\nexport function definePropertyBackedAttributes(defineOn, attributes) {\n    const sub = Object.create(defineOn[46 /* propertyBackedAttributes */]);\n    defineOn[46 /* propertyBackedAttributes */] = Object.assign(sub, attributes);\n}\n/**\n * There are six kinds of elements, each having different start/close tag semantics.\n * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n */\nvar ElementKind;\n(function (ElementKind) {\n    ElementKind[ElementKind[\"NORMAL\"] = 0] = \"NORMAL\";\n    ElementKind[ElementKind[\"VOID\"] = 1] = \"VOID\";\n    // The following element kinds have no special handling in worker-dom yet\n    // and are lumped into the NORMAL kind.\n    /*\n    FOREIGN,\n    TEMPLATE,\n    RAW_TEXT,\n    ESCAPABLE_RAW,\n    */\n})(ElementKind || (ElementKind = {}));\n/**\n * @see https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n */\nconst VOID_ELEMENTS = ['AREA', 'BASE', 'BR', 'COL', 'EMBED', 'HR', 'IMG', 'INPUT', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'];\nexport class Element extends ParentNode {\n    _classList;\n    static [46 /* propertyBackedAttributes */] = {\n        class: [(el) => el.classList.value, (el, value) => (el.classList.value = value)],\n        style: [(el) => el.cssText, (el, value) => (el.cssText = value)],\n    };\n    localName;\n    attributes = [];\n    style = new CSSStyleDeclaration(this);\n    namespaceURI;\n    /**\n     * Element \"kind\" dictates certain behaviors e.g. start/end tag semantics.\n     * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n     */\n    kind;\n    constructor(nodeType, localName, namespaceURI, ownerDocument, overrideIndex) {\n        super(nodeType, toUpper(localName), ownerDocument, overrideIndex);\n        this.namespaceURI = namespaceURI || HTML_NAMESPACE;\n        this.localName = localName;\n        this.kind = VOID_ELEMENTS.includes(this.tagName) ? ElementKind.VOID : ElementKind.NORMAL;\n        this[8 /* creationFormat */] = [\n            this[7 /* index */],\n            this.nodeType,\n            storeString(this.localName),\n            0,\n            this.namespaceURI === null ? 0 : storeString(this.namespaceURI),\n        ];\n    }\n    // Unimplemented properties\n    // Element.clientHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\n    // Element.clientLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientLeft\n    // Element.clientTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientTop\n    // Element.clientWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n    // set Element.innerHTML – https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n    // NonDocumentTypeChildNode.nextElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling\n    // Element.prefix – https://developer.mozilla.org/en-US/docs/Web/API/Element/prefix\n    // NonDocummentTypeChildNode.previousElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling\n    // Element.scrollHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\n    // Element.scrollLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n    // Element.scrollLeftMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeftMax\n    // Element.scrollTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop\n    // Element.scrollTopMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTopMax\n    // Element.scrollWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth\n    // Element.shadowRoot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/shadowRoot\n    // Element.slot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/slot\n    // Element.tabStop – https://developer.mozilla.org/en-US/docs/Web/API/Element/tabStop\n    // Element.undoManager – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoManager\n    // Element.undoScope – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoScope\n    // Unimplemented Methods\n    // Element.attachShadow() – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\n    // Element.animate() – https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\n    // Element.closest() – https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    // Element.getAttributeNames() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNames\n    // Element.getBoundingClientRect() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    // Element.getClientRects() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getClientRects\n    // Element.getElementsByTagNameNS() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagNameNS\n    // Element.insertAdjacentElement() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentElement\n    // Element.insertAdjacentHTML() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\n    // Element.insertAdjacentText() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentText\n    // Element.matches() – https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n    // Element.releasePointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/releasePointerCapture\n    // Element.requestFullscreen() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n    // Element.requestPointerLock() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestPointerLock\n    // Element.scrollIntoView() – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    // Element.setCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setCapture\n    // Element.setPointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setPointerCapture\n    // Partially implemented Mixin Methods\n    // Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n    // - Element selectors\n    // - ID selectors\n    // - Class selectors\n    // - Attribute selectors\n    // Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n    // Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n    // Mixins not implemented\n    // Slotable.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Slotable/assignedSlot\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML\n     * @return string representation of serialized HTML describing the Element and its descendants.\n     */\n    get outerHTML() {\n        const tag = this.localName || this.tagName;\n        const start = `<${[tag, attrsToString(this.attributes)].join(' ').trim()}>`;\n        const contents = this.innerHTML;\n        if (!contents) {\n            if (this.kind === ElementKind.VOID) {\n                // Void elements e.g. <input> only have a start tag (unless children are added programmatically).\n                // https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n                return start;\n            }\n        }\n        return start + contents + `</${tag}>`;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @return string representation of serialized HTML describing the Element's descendants.\n     */\n    get innerHTML() {\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            return childNodes\n                .map((child) => {\n                switch (child.nodeType) {\n                    case 3 /* TEXT_NODE */:\n                        return child.textContent;\n                    case 8 /* COMMENT_NODE */:\n                        return `<!--${child.textContent}-->`;\n                    default:\n                        return child.outerHTML;\n                }\n            })\n                .join('');\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @param html The raw html string to parse.\n     */\n    set innerHTML(html) {\n        const root = parse(html, this);\n        // remove previous children\n        this.childNodes.forEach((n) => {\n            propagate(n, 'isConnected', false);\n            propagate(n, 45 /* scopingRoot */, n);\n        });\n        mutate(this.ownerDocument, {\n            removedNodes: this.childNodes,\n            type: 2 /* CHILD_LIST */,\n            target: this,\n        }, [\n            2 /* CHILD_LIST */,\n            this[7 /* index */],\n            0,\n            0,\n            0,\n            this.childNodes.length,\n            ...this.childNodes.map((node) => node[7 /* index */]),\n        ]);\n        this.childNodes = [];\n        // add new children\n        root.childNodes.forEach((child) => this.appendChild(child));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @param text new text replacing all childNodes content.\n     */\n    set textContent(text) {\n        // TODO(KB): Investigate removing all children in a single .splice to childNodes.\n        this.childNodes.slice().forEach((child) => child.remove());\n        this.appendChild(this.ownerDocument.createTextNode(text));\n    }\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName\n     * @return string tag name (i.e 'div')\n     */\n    get tagName() {\n        return this.nodeName;\n    }\n    /**\n     * Sets the value of an attribute on this element using a null namespace.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttribute(name, value) {\n        this.setAttributeNS(HTML_NAMESPACE, name, value);\n    }\n    /**\n     * Get the value of an attribute on this Element with the null namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttribute(name) {\n        return this.getAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * Remove an attribute from this element in the null namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param name attribute name\n     */\n    removeAttribute(name) {\n        this.removeAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttribute\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttribute(name) {\n        return this.hasAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributes\n     * @return Boolean indicating if the element has any attributes.\n     */\n    hasAttributes() {\n        return this.attributes.length > 0;\n    }\n    /**\n     * Sets the value of an attribute on this Element with the provided namespace.\n     *\n     * If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttributeNS\n     * @param namespaceURI\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttributeNS(namespaceURI, name, value) {\n        const valueAsString = String(value);\n        const propertyBacked = this.constructor[46 /* propertyBackedAttributes */][name];\n        if (propertyBacked !== undefined) {\n            if (!this.attributes.find(matchAttrPredicate(namespaceURI, name))) {\n                this.attributes.push({\n                    namespaceURI,\n                    name,\n                    value: valueAsString,\n                });\n            }\n            propertyBacked[1](this, valueAsString);\n            return;\n        }\n        const oldValue = this[44 /* storeAttribute */](namespaceURI, name, valueAsString);\n        mutate(this.ownerDocument, {\n            type: 0 /* ATTRIBUTES */,\n            target: this,\n            attributeName: name,\n            attributeNamespace: namespaceURI,\n            value: valueAsString,\n            oldValue,\n        }, [\n            0 /* ATTRIBUTES */,\n            this[7 /* index */],\n            storeString(name),\n            storeString(namespaceURI),\n            value !== null ? storeString(valueAsString) + 1 : 0,\n        ]);\n    }\n    [44 /* storeAttribute */](namespaceURI, name, value) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        const oldValue = (attr && attr.value) || '';\n        if (attr) {\n            attr.value = value;\n        }\n        else {\n            this.attributes.push({\n                namespaceURI,\n                name,\n                value,\n            });\n        }\n        return oldValue;\n    }\n    /**\n     * Get the value of an attribute on this Element with the specified namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttributeNS(namespaceURI, name) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        if (attr) {\n            const propertyBacked = this.constructor[46 /* propertyBackedAttributes */][name];\n            return propertyBacked !== undefined ? propertyBacked[0](this) : attr.value;\n        }\n        return null;\n    }\n    /**\n     * Remove an attribute from this element in the specified namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     */\n    removeAttributeNS(namespaceURI, name) {\n        const index = this.attributes.findIndex(matchAttrPredicate(namespaceURI, name));\n        if (index >= 0) {\n            const oldValue = this.attributes[index].value;\n            this.attributes.splice(index, 1);\n            mutate(this.ownerDocument, {\n                type: 0 /* ATTRIBUTES */,\n                target: this,\n                attributeName: name,\n                attributeNamespace: namespaceURI,\n                oldValue,\n            }, [\n                0 /* ATTRIBUTES */,\n                this[7 /* index */],\n                storeString(name),\n                storeString(namespaceURI),\n                0, // 0 means no value\n            ]);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttributeNS(namespaceURI, name) {\n        return this.attributes.some(matchAttrPredicate(namespaceURI, name));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n     * @param names contains one more more classnames to match on. Multiples are space seperated, indicating an AND operation.\n     * @return Element array with matching classnames\n     */\n    getElementsByClassName(names) {\n        const inputClassList = names.split(' ');\n        // TODO(KB) – Compare performance of [].some(value => DOMTokenList.contains(value)) and regex.\n        // const classRegex = new RegExp(classNames.split(' ').map(name => `(?=.*${name})`).join(''));\n        return matchChildrenElements(this, (element) => inputClassList.some((inputClassName) => element.classList.contains(inputClassName)));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n     * @param tagName the qualified name to look for. The special string \"*\" represents all elements.\n     * @return Element array with matching tagnames\n     */\n    getElementsByTagName(tagName) {\n        const lowerTagName = toLower(tagName);\n        return matchChildrenElements(this, tagName === '*'\n            ? (_) => true\n            : (element) => (element.namespaceURI === HTML_NAMESPACE ? element.localName === lowerTagName : element.tagName === tagName));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByName\n     * @param name value of name attribute elements must have to be returned\n     * @return Element array with matching name attributes\n     */\n    getElementsByName(name) {\n        const stringName = '' + name;\n        return matchChildrenElements(this, (element) => element.getAttribute('name') === stringName);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return Element containing all current attributes and potentially childNode clones of the Element requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createElementNS(this.namespaceURI, this.namespaceURI === HTML_NAMESPACE ? toLower(this.tagName) : this.tagName);\n        this.attributes.forEach((attr) => clone.setAttribute(attr.name, attr.value));\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n    /**\n     * Return the ClientRect for an Element once determined by the main thread.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n     * @return Promise<ClientRect>\n     *\n     * Note: Edge and IE11 do not return the x/y value, but top/left are equivalent. Normalize the values here.\n     */\n    getBoundingClientRectAsync() {\n        const defaultValue = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0,\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n        return new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* type */] === 6 /* GET_BOUNDING_CLIENT_RECT */ &&\n                    data[13 /* target */][0] === this[7 /* index */]) {\n                    this.ownerDocument.removeGlobalEventListener('message', messageHandler);\n                    const transferredBoundingClientRect = data[38 /* data */];\n                    resolve({\n                        top: transferredBoundingClientRect[0],\n                        right: transferredBoundingClientRect[1],\n                        bottom: transferredBoundingClientRect[2],\n                        left: transferredBoundingClientRect[3],\n                        width: transferredBoundingClientRect[4],\n                        height: transferredBoundingClientRect[5],\n                        x: transferredBoundingClientRect[0],\n                        y: transferredBoundingClientRect[3],\n                    });\n                }\n            };\n            if (!this.ownerDocument.addGlobalEventListener || !this.isConnected) {\n                // Elements run within Node runtimes are missing addEventListener as a global.\n                // In this case, treat the return value the same as a disconnected node.\n                resolve(defaultValue);\n            }\n            else {\n                this.ownerDocument.addGlobalEventListener('message', messageHandler);\n                transfer(this.ownerDocument, [5 /* GET_BOUNDING_CLIENT_RECT */, this[7 /* index */]]);\n                setTimeout(resolve, 500, defaultValue); // TODO: Why a magical constant, define and explain.\n            }\n        });\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\n    click() {\n        const event = new Event('click', {});\n        event.target = this;\n        this.dispatchEvent(event);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    scrollIntoView() {\n        if (this.isConnected) {\n            transfer(this.ownerDocument, [14 /* SCROLL_INTO_VIEW */, this[7 /* index */]]);\n        }\n    }\n    get classList() {\n        return this._classList || (this._classList = new DOMTokenList(this, 'class'));\n    }\n}\nsynchronizedAccessor(Element, 'classList', 'className');\nreflectProperties([{ id: [''] }], Element);\n//# sourceMappingURL=Element.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Element } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { matchNearestParent, tagNameConditionPredicate } from './matchElements';\nexport const appendGlobalEventProperties = (keys) => {\n    const keysToAppend = keys.filter((key) => !HTMLElement.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    keysToAppend.forEach((key) => {\n        const normalizedKey = key.replace(/on/, '');\n        Object.defineProperty(HTMLElement.prototype, key, {\n            enumerable: true,\n            get() {\n                return this[76 /* propertyEventHandlers */][normalizedKey] || null;\n            },\n            set(value) {\n                const stored = this[76 /* propertyEventHandlers */][normalizedKey];\n                if (stored) {\n                    this.removeEventListener(normalizedKey, stored);\n                }\n                this.addEventListener(normalizedKey, value);\n                this[76 /* propertyEventHandlers */][normalizedKey] = value;\n            },\n        });\n    });\n};\nexport class HTMLElement extends Element {\n    [76 /* propertyEventHandlers */] = {};\n    /**\n     * Find the nearest parent form element.\n     * Implemented in HTMLElement since so many extensions of HTMLElement repeat this functionality. This is not to spec.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return nearest parent form element.\n     */\n    get form() {\n        return matchNearestParent(this, tagNameConditionPredicate(['FORM']));\n    }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [7 /* HTMLElement */, this[7 /* index */]];\n    }\n}\n// Reflected properties\n// HTMLElement.accessKey => string, reflected attribute\n// HTMLElement.contentEditable => string, reflected attribute\n// HTMLElement.dir => string, reflected attribute\n// HTMLElement.lang => string, reflected attribute\n// HTMLElement.title => string, reflected attribute\n// HTMLElement.draggable => boolean, reflected attribute\n// HTMLElement.hidden => boolean, reflected attribute\n// HTMLElement.noModule => boolean, reflected attribute\n// HTMLElement.spellcheck => boolean, reflected attribute\n// HTMLElement.translate => boolean, reflected attribute\nreflectProperties([\n    { accessKey: [''] },\n    { contentEditable: ['inherit'] },\n    { dir: [''] },\n    { lang: [''] },\n    { title: [''] },\n    {\n        draggable: [false, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { hidden: [false, /* attr */ undefined] },\n    { noModule: [false] },\n    {\n        spellcheck: [true, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { translate: [true, /* attr */ undefined, /* keywords */ ['yes', 'no']] },\n], HTMLElement);\n// Properties\n// HTMLElement.accessKeyLabel => string, readonly value of \"accessKey\"\n// HTMLElement.isContentEditable => boolean, readonly value of contentEditable\n// HTMLElement.nonce => string, NOT REFLECTED\n// HTMLElement.tabIndex => number, reflected attribute\n// Layout Properties (TBD)\n// HTMLElement.offsetHeight => double, readonly\n// HTMLElement.offsetLeft => double, readonly\n// HTMLElement.offsetParent => Element\n// HTMLElement.offsetTop => double, readonly\n// HTMLElement.offsetWidth => double, readonly\n// Unimplemented Properties\n// HTMLElement.contextMenu => HTMLElement\n// HTMLElement.dataset => Map<string (get/set), string>\n// HTMLElement.dropzone => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.inert => boolean, reflected\n// HTMLElement.itemScope => boolean\n// HTMLElement.itemType => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemId => string\n// HTMLElement.itemRef => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemProp => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemValue => object\n// HTMLElement.properties => HTMLPropertiesCollection, readonly\n//# sourceMappingURL=HTMLElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLAnchorElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n    /**\n     * Returns the href property/attribute value\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString\n     * @return string href attached to HTMLAnchorElement\n     */\n    toString() {\n        return this.href;\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * A Synonym for the Node.textContent property setter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @param text replacement for all current childNodes.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('a', HTMLAnchorElement);\ndefinePropertyBackedAttributes(HTMLAnchorElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLAnchorElement, 'relList', 'rel');\n// Reflected properties, strings.\n// HTMLAnchorElement.href => string, reflected attribute\n// HTMLAnchorElement.hreflang => string, reflected attribute\n// HTMLAnchorElement.media => string, reflected attribute\n// HTMLAnchorElement.target => string, reflected attribute\n// HTMLAnchorElement.type => string, reflected attribute\nreflectProperties([{ href: [''] }, { hreflang: [''] }, { media: [''] }, { target: [''] }, { type: [''] }], HTMLAnchorElement);\n// Unimplemented\n// HTMLAnchorElement.download => string, reflected attribute\n// HTMLAnchorElement.type => Is a DOMString that reflects the type HTML attribute, indicating the MIME type of the linked resource.\n// Unimplemented URL parse of href attribute due to IE11 compatibility and low usage.\n// Note: Implementation doable using a private url property\n/*\n  class {\n    private url: URL | null = null;\n\n    constructor(...) {\n      // Element.getAttribute('href') => Element.href.\n      Object.assign(this[TransferrableKeys.propertyBackedAttributes], {\n        href: this.href,\n      });\n    }\n\n    get href(): string {\n      return this.url ? this.url.href : '';\n    }\n    set href(url: string) {\n      this.url = new URL(url);\n      this.setAttribute('href', this.url.href);\n    }\n  }\n*/\n// HTMLAnchorElement.host => string\n// HTMLAnchorElement.hostname => string\n// HTMLAnchorElement.protocol => string\n// HTMLAnchorElement.pathname => string\n// HTMLAnchorElement.search => string\n// HTMLAnchorElement.hash => string\n// HTMLAnchorElement.username => string\n// HTMLAnchorElement.password => string\n// HTMLAnchorElement.origin => string, readonly (getter no setter)\n//# sourceMappingURL=HTMLAnchorElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLButtonElement extends HTMLElement {\n}\nregisterSubclass('button', HTMLButtonElement);\n// Reflected properties, strings.\n// HTMLButtonElement.formAction => string, reflected attribute\n// HTMLButtonElement.formEnctype => string, reflected attribute\n// HTMLButtonElement.formMethod => string, reflected attribute\n// HTMLButtonElement.formTarget => string, reflected attribute\n// HTMLButtonElement.name => string, reflected attribute\n// HTMLButtonElement.type => string, reflected attribute (default submit)\n// HTMLButtonElement.value => string, reflected attribute\n// HTMLButtonElement.autofocus => boolean, reflected attribute\n// HTMLButtonElement.disabled => boolean, reflected attribute\nreflectProperties([\n    { formAction: [''] },\n    { formEnctype: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { name: [''] },\n    { type: ['submit'] },\n    { value: [''] },\n    { autofocus: [false] },\n    { disabled: [false] },\n], HTMLButtonElement);\n// Not reflected\n// HTMLButtonElement.formNoValidate => boolean\n// HTMLButtonElement.validity => ValidityState, readonly\n// Unimplemented\n// HTMLButtonElement.form => HTMLFormElement | null, readonly\n// HTMLButtonElement.labels => Array<HTMLLabelElement>, readonly\n// HTMLButtonElement.menu => HTMLMenuElement\n// HTMLButtonElement.willValidate => boolean, readonly\n// HTMLButtonElement.validationMessage => string, readonly\n//# sourceMappingURL=HTMLButtonElement.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { store } from './strings';\nconst f32 = new Float32Array(1);\nconst u16 = new Uint16Array(f32.buffer);\nfunction isSmallInt(num) {\n    u16[0] = num;\n    // If the Uint16Array doesn't coerce it to another value, that means it fits\n    // into a Uint16Array.\n    return u16[0] === num;\n}\n/**\n * Serializes arguments into a Uint16 compatible format.\n *\n * The serialization format uses a variable length tuple, with the first item\n * being the encoded representation's type and any number of values afterwards.\n *\n * @param args The arguments to serialize\n */\nexport function serializeTransferrableObject(args) {\n    const serialized = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (typeof arg === 'number') {\n            if (isSmallInt(arg)) {\n                serialized.push(1 /* SmallInt */, arg);\n            }\n            else {\n                f32[0] = arg;\n                serialized.push(2 /* Float */, u16[0], u16[1]);\n            }\n            continue;\n        }\n        if (typeof arg === 'string') {\n            serialized.push(3 /* String */, store(arg));\n            continue;\n        }\n        if (Array.isArray(arg)) {\n            serialized.push(4 /* Array */, arg.length);\n            const serializedArray = serializeTransferrableObject(arg);\n            for (let i = 0; i < serializedArray.length; i++) {\n                serialized.push(serializedArray[i]);\n            }\n            continue;\n        }\n        if (typeof arg === 'object') {\n            const serializedObject = arg[68 /* serializeAsTransferrableObject */]();\n            for (let i = 0; i < serializedObject.length; i++) {\n                serialized.push(serializedObject[i]);\n            }\n            continue;\n        }\n        throw new Error('Cannot serialize argument.');\n    }\n    return serialized;\n}\n//# sourceMappingURL=serializeTransferrableObject.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { transfer } from '../MutationTransfer';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { store } from '../strings';\n/**\n * Wrapper class for CanvasGradient. The user will be able to manipulate as a regular CanvasGradient object.\n */\nexport class CanvasGradient {\n    id;\n    document;\n    constructor(id, document) {\n        this.document = document;\n        this.id = id;\n    }\n    addColorStop(offset, color) {\n        transfer(this.document, [\n            9 /* OBJECT_MUTATION */,\n            store('addColorStop'),\n            2,\n            ...this[68 /* serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject([...arguments]),\n        ]);\n    }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [5 /* TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasGradient.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Wrapper class for CanvasPattern. The user will be able to manipulate as a regular CanvasPattern object.\n * This class will be used when the CanvasRenderingContext is using an OffscreenCanvas polyfill.\n */\nexport class CanvasPattern {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    /**\n     * This is an experimental method.\n     */\n    setTransform() { }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [5 /* TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasPattern.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { transfer } from '../MutationTransfer';\nimport { toLower } from '../../utils';\nimport { store } from '../strings';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { CanvasGradient } from './CanvasGradient';\nimport { CanvasPattern } from './CanvasPattern';\n/**\n * Handles calls to a CanvasRenderingContext2D object in cases where the user's environment does not\n * support native OffscreenCanvas.\n */\nexport class OffscreenCanvasPolyfill {\n    canvas;\n    context;\n    constructor(canvas) {\n        this.canvas = canvas;\n    }\n    getContext(contextType) {\n        if (!this.context) {\n            if (toLower(contextType) === '2d') {\n                this.context = new OffscreenCanvasRenderingContext2DPolyfill(this.canvas);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nclass OffscreenCanvasRenderingContext2DPolyfill {\n    canvasElement;\n    lineDash;\n    objectIndex = 0;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        this.lineDash = [];\n    }\n    [67 /* mutated */](fnName, args) {\n        transfer(this.canvasElement.ownerDocument, [\n            9 /* OBJECT_MUTATION */,\n            store(fnName),\n            args.length,\n            ...this[68 /* serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(args),\n        ]);\n    }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [6 /* CanvasRenderingContext2D */, this.canvasElement[7 /* index */]];\n    }\n    /**\n     * Creates object in the main thread, and associates it with the id provided.\n     * @param objectId ID to associate the created object with.\n     * @param creationMethod Method to use for object creation.\n     * @param creationArgs Arguments to pass into the creation method.\n     */\n    createObjectReference(objectId, creationMethod, creationArgs) {\n        transfer(this.canvasElement.ownerDocument, [\n            10 /* OBJECT_CREATION */,\n            store(creationMethod),\n            objectId,\n            creationArgs.length,\n            ...this[68 /* serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(creationArgs),\n        ]);\n    }\n    get canvas() {\n        return this.canvasElement;\n    }\n    clearRect(x, y, w, h) {\n        this[67 /* mutated */]('clearRect', [...arguments]);\n    }\n    fillRect(x, y, w, h) {\n        this[67 /* mutated */]('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, w, h) {\n        this[67 /* mutated */]('strokeRect', [...arguments]);\n    }\n    set lineWidth(value) {\n        this[67 /* mutated */]('lineWidth', [...arguments]);\n    }\n    fillText(text, x, y, maxWidth) {\n        this[67 /* mutated */]('fillText', [...arguments]);\n    }\n    moveTo(x, y) {\n        this[67 /* mutated */]('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this[67 /* mutated */]('lineTo', [...arguments]);\n    }\n    closePath() {\n        this[67 /* mutated */]('closePath', []);\n    }\n    stroke() {\n        this[67 /* mutated */]('stroke', []);\n    }\n    restore() {\n        this[67 /* mutated */]('restore', []);\n    }\n    save() {\n        this[67 /* mutated */]('save', []);\n    }\n    resetTransform() {\n        this[67 /* mutated */]('resetTransform', []);\n    }\n    rotate(angle) {\n        this[67 /* mutated */]('rotate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this[67 /* mutated */]('transform', [...arguments]);\n    }\n    translate(x, y) {\n        this[67 /* mutated */]('translate', [...arguments]);\n    }\n    scale(x, y) {\n        this[67 /* mutated */]('scale', [...arguments]);\n    }\n    set globalAlpha(value) {\n        this[67 /* mutated */]('globalAlpha', [...arguments]);\n    }\n    set globalCompositeOperation(value) {\n        this[67 /* mutated */]('globalCompositeOperation', [...arguments]);\n    }\n    set imageSmoothingQuality(value) {\n        this[67 /* mutated */]('imageSmoothingQuality', [...arguments]);\n    }\n    set fillStyle(value) {\n        this[67 /* mutated */]('fillStyle', [...arguments]);\n    }\n    set strokeStyle(value) {\n        this[67 /* mutated */]('strokeStyle', [...arguments]);\n    }\n    set shadowBlur(value) {\n        this[67 /* mutated */]('shadowBlur', [...arguments]);\n    }\n    set shadowColor(value) {\n        this[67 /* mutated */]('shadowColor', [...arguments]);\n    }\n    set shadowOffsetX(value) {\n        this[67 /* mutated */]('shadowOffsetX', [...arguments]);\n    }\n    set shadowOffsetY(value) {\n        this[67 /* mutated */]('shadowOffsetY', [...arguments]);\n    }\n    set filter(value) {\n        this[67 /* mutated */]('filter', [...arguments]);\n    }\n    beginPath() {\n        this[67 /* mutated */]('beginPath', []);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this[67 /* mutated */]('strokeText', [...arguments]);\n    }\n    set textAlign(value) {\n        this[67 /* mutated */]('textAlign', [...arguments]);\n    }\n    set textBaseline(value) {\n        this[67 /* mutated */]('textBaseline', [...arguments]);\n    }\n    set lineCap(value) {\n        this[67 /* mutated */]('lineCap', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this[67 /* mutated */]('lineDashOffset', [...arguments]);\n    }\n    set lineJoin(value) {\n        this[67 /* mutated */]('lineJoin', [...arguments]);\n    }\n    set miterLimit(value) {\n        this[67 /* mutated */]('miterLimit', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n        this[67 /* mutated */]('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this[67 /* mutated */]('arcTo', [...arguments]);\n    }\n    set direction(value) {\n        this[67 /* mutated */]('direction', [...arguments]);\n    }\n    set font(value) {\n        this[67 /* mutated */]('font', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n        this[67 /* mutated */]('ellipse', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this[67 /* mutated */]('bezierCurveTo', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this[67 /* mutated */]('rect', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this[67 /* mutated */]('quadraticCurveTo', [...arguments]);\n    }\n    set imageSmoothingEnabled(value) {\n        this[67 /* mutated */]('imageSmoothingEnabled', [...arguments]);\n    }\n    setLineDash(lineDash) {\n        lineDash = [...lineDash];\n        if (lineDash.length % 2 !== 0) {\n            lineDash = lineDash.concat(lineDash);\n        }\n        this.lineDash = lineDash;\n        this[67 /* mutated */]('setLineDash', [...arguments]);\n    }\n    getLineDash() {\n        return [...this.lineDash];\n    }\n    clip(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('clip(Path2D) is currently not supported!');\n        }\n        this[67 /* mutated */]('clip', [...arguments]);\n    }\n    fill(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('fill(Path2D) is currently not supported!');\n        }\n        this[67 /* mutated */]('fill', [...arguments]);\n    }\n    // Method has a different signature in MDN than it does in HTML spec\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        if (typeof transformOrA === 'object') {\n            throw new Error('setTransform(DOMMatrix2DInit) is currently not supported!');\n        }\n        this[67 /* mutated */]('setTransform', [...arguments]);\n    }\n    createLinearGradient(x0, y0, x1, y1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createLinearGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createRadialGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createPattern(image, repetition) {\n        const patternId = this.objectIndex++;\n        this.createObjectReference(patternId, 'createPattern', [...arguments]);\n        return new CanvasPattern(patternId);\n    }\n    drawImage(image, dx, dy) {\n        this[67 /* mutated */]('drawImage', [...arguments]);\n    }\n    createImageData() {\n        return {};\n    }\n    getImageData() {\n        return {};\n    }\n    putImageData() { }\n    isPointInPath() {\n        throw new Error('isPointInPath is not implemented.');\n    }\n    isPointInStroke() {\n        throw new Error('isPointInStroke is not implemented.');\n    }\n    measureText() {\n        throw new Error('measureText is not implemented.');\n    }\n}\n//# sourceMappingURL=OffscreenCanvasPolyfill.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { transfer } from '../MutationTransfer';\nlet indexTracker = 0;\nexport function retrieveImageBitmap(image, canvas) {\n    const callIndex = indexTracker++;\n    const document = canvas.ownerDocument;\n    return new Promise((resolve) => {\n        const messageHandler = ({ data }) => {\n            if (data[12 /* type */] === 10 /* IMAGE_BITMAP_INSTANCE */ && data[73 /* callIndex */] === callIndex) {\n                document.removeGlobalEventListener('message', messageHandler);\n                const transferredImageBitmap = data[38 /* data */];\n                resolve(transferredImageBitmap);\n            }\n        };\n        if (!document.addGlobalEventListener) {\n            throw new Error('addGlobalEventListener is not defined.');\n        }\n        else {\n            document.addGlobalEventListener('message', messageHandler);\n            transfer(canvas.ownerDocument, [11 /* IMAGE_BITMAP_INSTANCE */, image[7 /* index */], callIndex]);\n        }\n    });\n}\n//# sourceMappingURL=canvas-utils.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { retrieveImageBitmap } from './canvas-utils';\n/**\n * Wraps CanvasPattern for usage in a native OffscreenCanvas case.\n */\nexport class FakeNativeCanvasPattern {\n    [70 /* patternImplementation */] = {};\n    [71 /* patternUpgraded */] = false;\n    [72 /* patternUpgradePromise */];\n    /**\n     * Retrieves ImageBitmap object from main-thread, which replicates the input image. Upon\n     * retrieval, uses it to create a real CanvasPattern and upgrade the implementation property.\n     * @param canvas Canvas element used to create the pattern.\n     * @param image Image to be used as the pattern's image\n     * @param repetition DOMStrings indicating how to repeat the pattern's image.\n     */\n    [69 /* retrieveCanvasPattern */](canvas, image, repetition) {\n        this[72 /* patternUpgradePromise */] = retrieveImageBitmap(image, canvas)\n            // Create new pattern with retrieved ImageBitmap\n            .then((instance) => {\n            const pattern = canvas.getContext('2d').createPattern(instance, repetition);\n            if (!pattern) {\n                throw new Error('Pattern is null!');\n            }\n            this[70 /* patternImplementation */] = pattern;\n            this[71 /* patternUpgraded */] = true;\n        });\n        return this[72 /* patternUpgradePromise */];\n    }\n    // This method is experimental.\n    // Takes an SVGMatrix as an argument, which is a deprecated API.\n    setTransform() { }\n}\n//# sourceMappingURL=FakeNativeCanvasPattern.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { transfer } from '../MutationTransfer';\nimport { OffscreenCanvasPolyfill } from './OffscreenCanvasPolyfill';\nimport { FakeNativeCanvasPattern } from './FakeNativeCanvasPattern';\nimport { retrieveImageBitmap } from './canvas-utils';\nexport const deferredUpgrades = new WeakMap();\n/**\n * Delegates all CanvasRenderingContext2D calls, either to an OffscreenCanvas or a polyfill\n * (depending on whether it is supported).\n */\nexport class CanvasRenderingContext2DShim {\n    queue = [];\n    implementation;\n    upgraded = false;\n    canvasElement;\n    polyfillUsed;\n    // createPattern calls need to retrieve an ImageBitmap from the main-thread. Since those can\n    // happen subsequently, we must keep track of these to avoid reentrancy problems.\n    unresolvedCalls = 0;\n    goodImplementation;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        const OffscreenCanvas = canvas.ownerDocument.defaultView.OffscreenCanvas;\n        // If the browser does not support OffscreenCanvas, use polyfill\n        if (typeof OffscreenCanvas === 'undefined') {\n            this.implementation = new OffscreenCanvasPolyfill(canvas).getContext('2d');\n            this.upgraded = true;\n            this.polyfillUsed = true;\n        }\n        // If the browser supports OffscreenCanvas:\n        // 1. Use un-upgraded (not auto-synchronized) version for all calls performed immediately after\n        // creation. All calls will be queued to call on upgraded version after.\n        // 2. Retrieve an auto-synchronized OffscreenCanvas from the main-thread and call all methods\n        // in the queue.\n        else {\n            this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n            this.getOffscreenCanvasAsync(this.canvasElement);\n            this.polyfillUsed = false;\n        }\n    }\n    /**\n     * Retrieves auto-synchronized version of an OffscreenCanvas from the main-thread.\n     * @param canvas HTMLCanvasElement associated with this context.\n     */\n    getOffscreenCanvasAsync(canvas) {\n        this.unresolvedCalls++;\n        const deferred = {};\n        const document = this.canvasElement.ownerDocument;\n        const isTestMode = !document.addGlobalEventListener;\n        const upgradePromise = new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* type */] === 9 /* OFFSCREEN_CANVAS_INSTANCE */ &&\n                    data[13 /* target */][0] === canvas[7 /* index */]) {\n                    document.removeGlobalEventListener('message', messageHandler);\n                    const transferredOffscreenCanvas = data[38 /* data */];\n                    resolve(transferredOffscreenCanvas);\n                }\n            };\n            if (!document.addGlobalEventListener) {\n                if (isTestMode) {\n                    deferred.resolve = resolve;\n                }\n                else {\n                    throw new Error('addGlobalEventListener is not defined.');\n                }\n            }\n            else {\n                document.addGlobalEventListener('message', messageHandler);\n                transfer(canvas.ownerDocument, [8 /* OFFSCREEN_CANVAS_INSTANCE */, canvas[7 /* index */]]);\n            }\n        }).then((instance) => {\n            this.goodImplementation = instance.getContext('2d');\n            this.maybeUpgradeImplementation();\n        });\n        if (isTestMode) {\n            deferred.upgradePromise = upgradePromise;\n            deferredUpgrades.set(canvas, deferred);\n        }\n        return upgradePromise;\n    }\n    /**\n     * Degrades the underlying context implementation and adds to the unresolved call count.\n     */\n    degradeImplementation() {\n        this.upgraded = false;\n        const OffscreenCanvas = this.canvasElement.ownerDocument.defaultView.OffscreenCanvas;\n        this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n        this.unresolvedCalls++;\n    }\n    /**\n     * Will upgrade the underlying context implementation if no more unresolved calls remain.\n     */\n    maybeUpgradeImplementation() {\n        this.unresolvedCalls--;\n        if (this.unresolvedCalls === 0) {\n            this.implementation = this.goodImplementation;\n            this.upgraded = true;\n            this.flushQueue();\n        }\n    }\n    flushQueue() {\n        for (const call of this.queue) {\n            if (call.isSetter) {\n                this[call.fnName] = call.args[0];\n            }\n            else {\n                this[call.fnName](...call.args);\n            }\n        }\n        this.queue.length = 0;\n    }\n    delegateFunc(name, args) {\n        const returnValue = this.implementation[name](...args);\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: false });\n        }\n        return returnValue;\n    }\n    delegateSetter(name, args) {\n        this.implementation[name] = args[0];\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: true });\n        }\n    }\n    delegateGetter(name) {\n        return this.implementation[name];\n    }\n    /* DRAWING RECTANGLES */\n    clearRect(x, y, width, height) {\n        this.delegateFunc('clearRect', [...arguments]);\n    }\n    fillRect(x, y, width, height) {\n        this.delegateFunc('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, width, height) {\n        this.delegateFunc('strokeRect', [...arguments]);\n    }\n    /* DRAWING TEXT */\n    fillText(text, x, y, maxWidth) {\n        this.delegateFunc('fillText', [...arguments]);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this.delegateFunc('strokeText', [...arguments]);\n    }\n    measureText(text) {\n        return this.delegateFunc('measureText', [...arguments]);\n    }\n    /* LINE STYLES */\n    set lineWidth(value) {\n        this.delegateSetter('lineWidth', [...arguments]);\n    }\n    get lineWidth() {\n        return this.delegateGetter('lineWidth');\n    }\n    set lineCap(value) {\n        this.delegateSetter('lineCap', [...arguments]);\n    }\n    get lineCap() {\n        return this.delegateGetter('lineCap');\n    }\n    set lineJoin(value) {\n        this.delegateSetter('lineJoin', [...arguments]);\n    }\n    get lineJoin() {\n        return this.delegateGetter('lineJoin');\n    }\n    set miterLimit(value) {\n        this.delegateSetter('miterLimit', [...arguments]);\n    }\n    get miterLimit() {\n        return this.delegateGetter('miterLimit');\n    }\n    getLineDash() {\n        return this.delegateFunc('getLineDash', [...arguments]);\n    }\n    setLineDash(segments) {\n        this.delegateFunc('setLineDash', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this.delegateSetter('lineDashOffset', [...arguments]);\n    }\n    get lineDashOffset() {\n        return this.delegateGetter('lineDashOffset');\n    }\n    /* TEXT STYLES */\n    set font(value) {\n        this.delegateSetter('font', [...arguments]);\n    }\n    get font() {\n        return this.delegateGetter('font');\n    }\n    set textAlign(value) {\n        this.delegateSetter('textAlign', [...arguments]);\n    }\n    get textAlign() {\n        return this.delegateGetter('textAlign');\n    }\n    set textBaseline(value) {\n        this.delegateSetter('textBaseline', [...arguments]);\n    }\n    get textBaseline() {\n        return this.delegateGetter('textBaseline');\n    }\n    set direction(value) {\n        this.delegateSetter('direction', [...arguments]);\n    }\n    get direction() {\n        return this.delegateGetter('direction');\n    }\n    /* FILL AND STROKE STYLES */\n    set fillStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' will be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* patternUpgraded */]) {\n                this.queue.push({ fnName: 'fillStyle', args: [value], isSetter: true });\n                this.degradeImplementation();\n                value[72 /* patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('fillStyle', [value[70 /* patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('fillStyle', [...arguments]);\n        }\n    }\n    get fillStyle() {\n        return this.delegateGetter('fillStyle');\n    }\n    set strokeStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' could be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* patternUpgraded */]) {\n                this.queue.push({\n                    fnName: 'strokeStyle',\n                    args: [value],\n                    isSetter: true,\n                });\n                this.degradeImplementation();\n                value[72 /* patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('strokeStyle', [value[70 /* patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('strokeStyle', [...arguments]);\n        }\n    }\n    get strokeStyle() {\n        return this.delegateGetter('strokeStyle');\n    }\n    /* GRADIENTS AND PATTERNS */\n    createLinearGradient(x0, y0, x1, y1) {\n        return this.delegateFunc('createLinearGradient', [...arguments]);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        return this.delegateFunc('createRadialGradient', [...arguments]);\n    }\n    createPattern(image, repetition) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            return this.delegateFunc('createPattern', [...arguments]);\n        }\n        else {\n            // Degrade the underlying implementation because we don't want calls on the real one until\n            // after pattern is retrieved\n            this.degradeImplementation();\n            const fakePattern = new FakeNativeCanvasPattern();\n            fakePattern[69 /* retrieveCanvasPattern */](this.canvas, image, repetition).then(() => {\n                this.maybeUpgradeImplementation();\n            });\n            return fakePattern;\n        }\n    }\n    /* DRAWING IMAGES */\n    drawImage(image, dx, dy) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            this.delegateFunc('drawImage', [...arguments]);\n        }\n        else {\n            // Queue the drawImage call to make sure it gets called in correct order\n            const args = [];\n            this.queue.push({ fnName: 'drawImage', args, isSetter: false });\n            // Degrade the underlying implementation because we don't want calls on the real one\n            // until after the ImageBitmap is received.\n            this.degradeImplementation();\n            // Retrieve an ImageBitmap from the main-thread with the same image as the input image\n            retrieveImageBitmap(image, this.canvas)\n                // Then call the actual method with the retrieved ImageBitmap\n                .then((instance) => {\n                args.push(instance, dx, dy);\n                this.maybeUpgradeImplementation();\n            });\n        }\n    }\n    /* SHADOWS */\n    set shadowBlur(value) {\n        this.delegateSetter('shadowBlur', [...arguments]);\n    }\n    get shadowBlur() {\n        return this.delegateGetter('shadowBlur');\n    }\n    set shadowColor(value) {\n        this.delegateSetter('shadowColor', [...arguments]);\n    }\n    get shadowColor() {\n        return this.delegateGetter('shadowColor');\n    }\n    set shadowOffsetX(value) {\n        this.delegateSetter('shadowOffsetX', [...arguments]);\n    }\n    get shadowOffsetX() {\n        return this.delegateGetter('shadowOffsetX');\n    }\n    set shadowOffsetY(value) {\n        this.delegateSetter('shadowOffsetY', [...arguments]);\n    }\n    get shadowOffsetY() {\n        return this.delegateGetter('shadowOffsetY');\n    }\n    /* PATHS */\n    beginPath() {\n        this.delegateFunc('beginPath', [...arguments]);\n    }\n    closePath() {\n        this.delegateFunc('closePath', [...arguments]);\n    }\n    moveTo(x, y) {\n        this.delegateFunc('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this.delegateFunc('lineTo', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.delegateFunc('bezierCurveTo', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.delegateFunc('quadraticCurveTo', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this.delegateFunc('arcTo', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('ellipse', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this.delegateFunc('rect', [...arguments]);\n    }\n    /* DRAWING PATHS */\n    fill(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('fill', args);\n    }\n    stroke(path) {\n        const args = [...arguments];\n        this.delegateFunc('stroke', args);\n    }\n    clip(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('clip', args);\n    }\n    isPointInPath(pathOrX, xOrY, yOrFillRule, fillRule) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInPath', args);\n    }\n    isPointInStroke(pathOrX, xOrY, y) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInStroke', args);\n    }\n    /* TRANSFORMATIONS */\n    rotate(angle) {\n        this.delegateFunc('rotate', [...arguments]);\n    }\n    scale(x, y) {\n        this.delegateFunc('scale', [...arguments]);\n    }\n    translate(x, y) {\n        this.delegateFunc('translate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this.delegateFunc('transform', [...arguments]);\n    }\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        const args = [...arguments];\n        this.delegateFunc('setTransform', args);\n    }\n    /* experimental */ resetTransform() {\n        this.delegateFunc('resetTransform', [...arguments]);\n    }\n    /* COMPOSITING */\n    set globalAlpha(value) {\n        this.delegateSetter('globalAlpha', [...arguments]);\n    }\n    get globalAlpha() {\n        return this.delegateGetter('globalAlpha');\n    }\n    set globalCompositeOperation(value) {\n        this.delegateSetter('globalCompositeOperation', [...arguments]);\n    }\n    get globalCompositeOperation() {\n        return this.delegateGetter('globalCompositeOperation');\n    }\n    /* PIXEL MANIPULATION */\n    createImageData(imagedataOrWidth, height) {\n        const args = [...arguments];\n        return this.delegateFunc('createImageData', args);\n    }\n    getImageData(sx, sy, sw, sh) {\n        return this.delegateFunc('getImageData', [...arguments]);\n    }\n    putImageData(imageData, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\n        this.delegateFunc('putImageData', [...arguments]);\n    }\n    /* IMAGE SMOOTHING */\n    /* experimental */ set imageSmoothingEnabled(value) {\n        this.delegateSetter('imageSmoothingEnabled', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingEnabled() {\n        return this.delegateGetter('imageSmoothingEnabled');\n    }\n    /* experimental */ set imageSmoothingQuality(value) {\n        this.delegateSetter('imageSmoothingQuality', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingQuality() {\n        return this.delegateGetter('imageSmoothingQuality');\n    }\n    /* THE CANVAS STATE */\n    save() {\n        this.delegateFunc('save', [...arguments]);\n    }\n    restore() {\n        this.delegateFunc('restore', [...arguments]);\n    }\n    // canvas property is readonly. We don't want to implement getters, but this must be here\n    // in order for TypeScript to not complain (for now)\n    get canvas() {\n        return this.canvasElement;\n    }\n    /* FILTERS */\n    /* experimental */ set filter(value) {\n        this.delegateSetter('filter', [...arguments]);\n    }\n    /* experimental */ get filter() {\n        return this.delegateGetter('filter');\n    }\n}\n//# sourceMappingURL=CanvasRenderingContext2D.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { HTMLElement } from './HTMLElement';\nimport { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { CanvasRenderingContext2DShim } from '../canvas/CanvasRenderingContext2D';\nexport class HTMLCanvasElement extends HTMLElement {\n    context;\n    getContext(contextType) {\n        if (!this.context) {\n            if (contextType === '2D' || contextType === '2d') {\n                this.context = new CanvasRenderingContext2DShim(this);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nregisterSubclass('canvas', HTMLCanvasElement);\n// Reflected Properties\n// HTMLCanvasElement.height => number, reflected attribute\n// HTMLCanvasElement.width => number, reflected attribute\nreflectProperties([{ height: [0] }, { width: [0] }], HTMLCanvasElement);\n// Unimplemented Properties\n// HTMLCanvasElement.mozOpaque => boolean\n// HTMLCanvasElement.mozPrintCallback => function\n// Unimplemented Methods\n// HTMLCanvasElement.captureStream()\n// HTMLCanvasElement.toDataURL()\n// HTMLCanvasElement.toBlob()\n// HTMLCanvasElement.transferControlToOffscreen()\n// HTMLCanvasElement.mozGetAsFile()\n//# sourceMappingURL=HTMLCanvasElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLDataElement extends HTMLElement {\n}\nregisterSubclass('data', HTMLDataElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.value => string, reflected attribute\nreflectProperties([{ value: [''] }], HTMLDataElement);\n//# sourceMappingURL=HTMLDataElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nexport class HTMLDataListElement extends HTMLElement {\n    /**\n     * Getter returning option elements that are direct children of a HTMLDataListElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.childNodes.filter((node) => node.nodeName === 'OPTION');\n    }\n}\nregisterSubclass('datalist', HTMLDataListElement);\n/**\n * HTMLDataListElement.options Read only\n * Is a HTMLCollection representing a collection of the contained option elements.\n */\n/**\n * <label for=\"myBrowser\">Choose a browser from this list:</label>\n * <input list=\"browsers\" id=\"myBrowser\" name=\"myBrowser\" />\n * <datalist id=\"browsers\">\n *   <option value=\"Chrome\">\n *   <option value=\"Firefox\">\n *   <option value=\"Internet Explorer\">\n *   <option value=\"Opera\">\n *   <option value=\"Safari\">\n *   <option value=\"Microsoft Edge\">\n * </datalist>\n */\n//# sourceMappingURL=HTMLDataListElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLEmbedElement extends HTMLElement {\n}\nregisterSubclass('embed', HTMLEmbedElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.height => string, reflected attribute\n// HTMLEmbedElement.src => string, reflected attribute\n// HTMLEmbedElement.type => string, reflected attribute\n// HTMLEmbedElement.width => string, reflected attribute\nreflectProperties([{ height: [''] }, { src: [''] }, { type: [''] }, { width: [''] }], HTMLEmbedElement);\n// Unimplemented\n// HTMLEmbedElement.align => string, not reflected\n// HTMLEmbedElement.name => string, not reflected\n//# sourceMappingURL=HTMLEmbedElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nconst MATCHING_CHILD_ELEMENT_TAGNAMES = 'BUTTON FIELDSET INPUT OBJECT OUTPUT SELECT TEXTAREA'.split(' ');\n/**\n * The HTMLFormControlsCollection interface represents a collection of HTML form control elements.\n * It is mixedin to both HTMLFormElement and HTMLFieldSetElement.\n */\nexport const HTMLFormControlsCollectionMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'elements', {\n        /**\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormControlsCollection\n         * @return Element array matching children of specific tagnames.\n         */\n        get() {\n            return matchChildrenElements(this, tagNameConditionPredicate(MATCHING_CHILD_ELEMENT_TAGNAMES));\n        },\n    });\n};\n//# sourceMappingURL=HTMLFormControlsMixin.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { HTMLElement } from './HTMLElement';\nimport { toLower } from '../../utils';\nexport class HTMLFieldSetElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return hardcoded string 'fieldset'\n     */\n    get type() {\n        return toLower(this.tagName);\n    }\n}\nregisterSubclass('fieldset', HTMLFieldSetElement);\nHTMLFormControlsCollectionMixin(HTMLFieldSetElement);\n// Reflected properties\n// HTMLFieldSetElement.name => string, reflected attribute\n// HTMLFieldSetElement.disabled => boolean, reflected attribute\nreflectProperties([{ name: [''] }, { disabled: [false] }], HTMLFieldSetElement);\n// Unimplemented properties\n// HTMLFieldSetElement.validity\n// HTMLFieldSetElement.willValidate\n// HTMLFieldSetElement.validationMessage\n//# sourceMappingURL=HTMLFieldSetElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLFormElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.elements.length;\n    }\n}\nregisterSubclass('form', HTMLFormElement);\nHTMLFormControlsCollectionMixin(HTMLFormElement);\n// Reflected properties\n// HTMLFormElement.name => string, reflected attribute\n// HTMLFormElement.method => string, reflected attribute\n// HTMLFormElement.target => string, reflected attribute\n// HTMLFormElement.action => string, reflected attribute\n// HTMLFormElement.enctype => string, reflected attribute\n// HTMLFormElement.acceptCharset => string, reflected attribute\n// HTMLFormElement.autocomplete => string, reflected attribute\n// HTMLFormElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { name: [''] },\n    { method: ['get'] },\n    { target: [''] },\n    { action: [''] },\n    { enctype: ['application/x-www-form-urlencoded'] },\n    { acceptCharset: ['', /* attr */ 'accept-charset'] },\n    { autocomplete: ['on'] },\n    { autocapitalize: ['sentences'] },\n], HTMLFormElement);\n// Unimplemented properties\n// HTMLFormElement.encoding => string, reflected attribute\n// HTMLFormElement.noValidate => boolean, reflected attribute\n/*\nUnimplemented, TBD:\n\nNamed inputs are added to their owner form instance as properties, and can overwrite native properties\nif they share the same name (eg a form with an input named action will have its action property return\nthat input instead of the form's action HTML attribute).\n*/\n//# sourceMappingURL=HTMLFormElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nexport class HTMLIFrameElement extends HTMLElement {\n    _sandbox;\n    // HTMLIFrameElement.sandbox, DOMTokenList, reflected attribute\n    get sandbox() {\n        return this._sandbox || (this._sandbox = new DOMTokenList(this, 'sandbox'));\n    }\n}\nregisterSubclass('iframe', HTMLIFrameElement);\ndefinePropertyBackedAttributes(HTMLIFrameElement, {\n    sandbox: [(el) => el.sandbox.value, (el, value) => (el.sandbox.value = value)],\n});\n// Reflected properties\n// HTMLIFrameElement.allow => string, reflected attribute\n// HTMLIFrameElement.allowFullscreen => boolean, reflected attribute\n// HTMLIFrameElement.csp => string, reflected attribute\n// HTMLIFrameElement.height => string, reflected attribute\n// HTMLIFrameElement.name => string, reflected attribute\n// HTMLIFrameElement.referrerPolicy => string, reflected attribute\n// HTMLIFrameElement.src => string, reflected attribute\n// HTMLIFrameElement.srcdoc => string, reflected attribute\n// HTMLIFrameElement.width => string, reflected attribute\nreflectProperties([\n    { allow: [''] },\n    { allowFullscreen: [false] },\n    { csp: [''] },\n    { height: [''] },\n    { name: [''] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { srcdoc: [''] },\n    { width: [''] },\n], HTMLIFrameElement);\n// Unimplemented Properties\n// HTMLIFrameElement.allowPaymentRequest => boolean, reflected attribute\n// HTMLIFrameElement.contentDocument => Document, read only (active document in the inline frame's nested browsing context)\n// HTMLIFrameElement.contentWindow => WindowProxy, read only (window proxy for the nested browsing context)\n//# sourceMappingURL=HTMLIFrameElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLImageElement extends HTMLElement {\n}\nregisterSubclass('img', HTMLImageElement);\n// Reflected Properties\n// HTMLImageElement.alt => string, reflected attribute\n// HTMLImageElement.crossOrigin => string, reflected attribute\n// HTMLImageElement.height => number, reflected attribute\n// HTMLImageElement.isMap => boolean, reflected attribute\n// HTMLImageElement.referrerPolicy => string, reflected attribute\n// HTMLImageElement.src => string, reflected attribute\n// HTMLImageElement.sizes => string, reflected attribute\n// HTMLImageElement.srcset => string, reflected attribute\n// HTMLImageElement.useMap => string, reflected attribute\n// HTMLImageElement.width => number, reflected attribute\nreflectProperties([\n    { alt: [''] },\n    { crossOrigin: [''] },\n    { height: [0] },\n    { isMap: [false] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { sizes: [''] },\n    { srcset: [''] },\n    { useMap: [''] },\n    { width: [0] },\n], HTMLImageElement);\n// Unimplmented Properties\n// HTMLImageElement.complete Read only\n// Returns a Boolean that is true if the browser has finished fetching the image, whether successful or not. It also shows true, if the image has no src value.\n// HTMLImageElement.currentSrc Read only\n// Returns a DOMString representing the URL to the currently displayed image (which may change, for example in response to media queries).\n// HTMLImageElement.naturalHeight Read only\n// Returns a unsigned long representing the intrinsic height of the image in CSS pixels, if it is available; else, it shows 0.\n// HTMLImageElement.naturalWidth Read only\n// Returns a unsigned long representing the intrinsic width of the image in CSS pixels, if it is available; otherwise, it will show 0.\n//# sourceMappingURL=HTMLImageElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { matchChildrenElements } from './matchElements';\n/**\n * The HTMLInputLabels interface represents a collection of input getters for their related label Elements.\n * It is mixedin to both HTMLInputElement, HTMLMeterElement, and HTMLProgressElement.\n */\nexport const HTMLInputLabelsMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'labels', {\n        /**\n         * Getter returning label elements associated to this meter.\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement/labels\n         * @return label elements associated to this meter.\n         */\n        get() {\n            return matchChildrenElements(this.ownerDocument || this, (element) => element.tagName === 'LABEL' && element.for && element.for === this.id);\n        },\n    });\n};\n//# sourceMappingURL=HTMLInputLabelsMixin.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { reflectProperties } from './enhanceElement';\nimport { registerSubclass } from './Element';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class HTMLInputElement extends HTMLElement {\n    // Per spec, some attributes like 'value' and 'checked' change behavior based on dirty flags.\n    // Since these flags can only be changed on interaction (outside of worker), we can ignore them here.\n    // Tradeoffs: Consequent attribute changes are missing, HTMLFormElement.reset() doesn't work, etc.\n    // Alternative: Implement dirty flag checking in worker-dom, which would require listening for\n    //     and forwarding interaction events to flag \"dirtiness\".\n    // https://html.spec.whatwg.org/multipage/input.html#common-input-element-apis\n    [21 /* value */] = '';\n    dirtyValue = false;\n    [47 /* checked */] = false;\n    // TODO(willchou): There are a few interrelated issues with `value` property.\n    //   1. \"Dirtiness\" caveat above.\n    //   2. Duplicate SYNC events. Sent by every event fired from elements with a `value`, plus the default 'change' listener.\n    //   3. Duplicate MUTATE events. Caused by stale `value` in worker due to no default 'input' listener (see below).\n    get value() {\n        return !this.dirtyValue ? this.getAttribute('value') || '' : this[21 /* value */];\n    }\n    set value(value) {\n        // Don't early-out if value doesn't appear to have changed.\n        // The worker may have a stale value since 'input' events aren't being forwarded.\n        this[21 /* value */] = String(value);\n        this.dirtyValue = true;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('value'),\n            0 /* FALSE */,\n            storeString(value),\n        ]);\n    }\n    get valueAsDate() {\n        // Don't use Date constructor or Date.parse() since ISO 8601 (yyyy-mm-dd) parsing is inconsistent.\n        const date = this.stringToDate(this.value);\n        const invalid = !date || isNaN(date.getTime());\n        return invalid ? null : date;\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support dates. */\n    set valueAsDate(value) {\n        if (!(value instanceof Date)) {\n            throw new TypeError('The provided value is not a Date.');\n        }\n        this.value = this.dateToString(value);\n    }\n    get valueAsNumber() {\n        if (this.value.length === 0) {\n            return NaN;\n        }\n        return Number(this.value);\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support numbers. */\n    set valueAsNumber(value) {\n        if (typeof value === 'number') {\n            this.value = String(value);\n        }\n        else {\n            this.value = '';\n        }\n    }\n    get checked() {\n        return this[47 /* checked */];\n    }\n    set checked(value) {\n        if (this[47 /* checked */] === value) {\n            return;\n        }\n        this[47 /* checked */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('checked'),\n            1 /* TRUE */,\n            value === true ? 1 /* TRUE */ : 0 /* FALSE */,\n        ]);\n    }\n    /**\n     * Returns a date in 'yyyy-mm-dd' format.\n     * @param date\n     */\n    dateToString(date) {\n        const y = date.getFullYear();\n        const m = date.getMonth() + 1; // getMonth() is 0-index.\n        const d = date.getDate();\n        return `${y}-${m > 9 ? '' : '0'}${m}-${d > 9 ? '' : '0'}${d}`;\n    }\n    /**\n     * Returns a Date from a 'yyyy-mm-dd' format.\n     * @param s\n     */\n    stringToDate(str) {\n        const components = str.split('-');\n        if (components.length !== 3) {\n            return null;\n        }\n        const [y, m, d] = components;\n        // Month is 0-index.\n        return new Date(parseInt(y, 10), parseInt(m, 10) - 1, parseInt(d, 10));\n    }\n}\nregisterSubclass('input', HTMLInputElement);\nHTMLInputLabelsMixin(HTMLInputElement);\n// Reflected Properties\n// HTMLInputElement.formAction => string, reflected attribute\n// HTMLInputElement.formEncType\t=> string, reflected attribute\n// HTMLInputElement.formMethod => string, reflected attribute\n// HTMLInputElement.formTarget => string, reflected attribute\n// HTMLInputElement.name => string, reflected attribute\n// HTMLInputElement.type => string, reflected attribute\n// HTMLInputElement.disabled => boolean, reflected attribute\n// HTMLInputElement.autofocus => boolean, reflected attribute\n// HTMLInputElement.required => boolean, reflected attribute\n// HTMLInputElement.defaultChecked => boolean, reflected attribute (\"checked\")\n// HTMLInputElement.alt => string, reflected attribute\n// HTMLInputElement.height => number, reflected attribute\n// HTMLInputElement.src => string, reflected attribute\n// HTMLInputElement.width => number, reflected attribute\n// HTMLInputElement.accept => string, reflected attribute\n// HTMLInputElement.autocomplete => string, reflected attribute\n// HTMLInputElement.maxLength => number, reflected attribute\n// HTMLInputElement.size => number, reflected attribute\n// HTMLInputElement.pattern => string, reflected attribute\n// HTMLInputElement.placeholder => string, reflected attribute\n// HTMLInputElement.readOnly => boolean, reflected attribute\n// HTMLInputElement.min => string, reflected attribute\n// HTMLInputElement.max => string, reflected attribute\n// HTMLInputElement.defaultValue => string, reflected attribute\n// HTMLInputElement.dirname => string, reflected attribute\n// HTMLInputElement.multiple => boolean, reflected attribute\n// HTMLInputElement.step => string, reflected attribute\n// HTMLInputElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { accept: [''] },\n    { alt: [''] },\n    { autocapitalize: [''] },\n    { autocomplete: [''] },\n    { autofocus: [false] },\n    { defaultChecked: [false, /* attr */ 'checked'] },\n    { defaultValue: ['', /* attr */ 'value'] },\n    { dirName: [''] },\n    { disabled: [false] },\n    { formAction: [''] },\n    { formEncType: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { height: [0] },\n    { max: [''] },\n    { maxLength: [0] },\n    { min: [''] },\n    { multiple: [false] },\n    { name: [''] },\n    { pattern: [''] },\n    { placeholder: [''] },\n    { readOnly: [false] },\n    { required: [false] },\n    { size: [0] },\n    { src: [''] },\n    { step: [''] },\n    { type: ['text'] },\n    { width: [0] },\n], HTMLInputElement);\n// TODO(KB) Not Reflected Properties\n// HTMLInputElement.indeterminate => boolean\n// Unimplemented Properties\n// HTMLInputElement.formNoValidate => string, reflected attribute\n// HTMLInputElement.validity => ValidityState, readonly\n// HTMLInputElement.validationMessage => string, readonly\n// HTMLInputElement.willValidate => boolean, readonly\n// HTMLInputElement.allowdirs => boolean\n// HTMLInputElement.files\t=> Array<File>\n// HTMLInputElement.webkitdirectory\t=> boolean, reflected attribute\n// HTMLInputElement.webkitEntries => Array<FileSystemEntry>\n// HTMLInputElement.selectionStart => number\n// HTMLInputElement.selectionEnd => number\n// HTMLInputElement.selectionDirection => string\n// HTMLInputElement.list => Element, read only (element pointed by list attribute)\n// Unimplemented Methods\n// HTMLInputElement.setSelectionRange()\n// HTMLInputElement.setRangeText()\n// HTMLInputElement.setCustomValidity()\n// HTMLInputElement.checkValidity()\n// HTMLInputElement.stepDown()\n// HTMLInputElement.stepUp()\n//# sourceMappingURL=HTMLInputElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildElement, tagNameConditionPredicate } from './matchElements';\nexport class HTMLLabelElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control\n     * @return input element\n     */\n    get control() {\n        const htmlFor = this.getAttribute('for');\n        if (htmlFor !== null) {\n            return this.ownerDocument && this.ownerDocument.getElementById(htmlFor);\n        }\n        return matchChildElement(this, tagNameConditionPredicate(['INPUT']));\n    }\n}\nregisterSubclass('label', HTMLLabelElement);\n// Reflected Properties\n// HTMLLabelElement.htmlFor => string, reflected attribute 'for'\nreflectProperties([{ htmlFor: ['', 'for'] }], HTMLLabelElement);\n//# sourceMappingURL=HTMLLabelElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nexport class HTMLLinkElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n}\nregisterSubclass('link', HTMLLinkElement);\ndefinePropertyBackedAttributes(HTMLLinkElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLLinkElement, 'relList', 'rel');\n// Reflected Properties\n// HTMLLinkElement.as => string, reflected attribute\n// HTMLLinkElement.crossOrigin => string, reflected attribute\n// HTMLLinkElement.disabled => boolean, reflected attribute\n// HTMLLinkElement.href => string, reflected attribute\n// HTMLLinkElement.hreflang => string, reflected attribute\n// HTMLLinkElement.media => string, reflected attribute\n// HTMLLinkElement.referrerPolicy => string, reflected attribute\n// HTMLLinkElement.sizes => string, reflected attribute\n// HTMLLinkElement.type => string, reflected attribute\nreflectProperties([\n    { as: [''] },\n    { crossOrigin: [''] },\n    { disabled: [false] },\n    { href: [''] },\n    { hreflang: [''] },\n    { media: [''] },\n    { referrerPolicy: [''] },\n    { sizes: [''] },\n    { type: [''] },\n], HTMLLinkElement);\n// Unimplemented Properties\n// LinkStyle.sheet Read only\n// Returns the StyleSheet object associated with the given element, or null if there is none.\n//# sourceMappingURL=HTMLLinkElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildrenElements } from './matchElements';\nexport class HTMLMapElement extends HTMLElement {\n    /**\n     * Getter returning area elements associated to this map.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement\n     * @return area elements associated to this map.\n     */\n    get areas() {\n        return matchChildrenElements(this, (element) => element.tagName === 'AREA');\n    }\n}\nregisterSubclass('map', HTMLMapElement);\n// Reflected Properties\n// HTMLMapElement.name => string, reflected attribute\nreflectProperties([{ name: [''] }], HTMLMapElement);\n//# sourceMappingURL=HTMLMapElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLMeterElement extends HTMLElement {\n}\nregisterSubclass('meter', HTMLMeterElement);\nHTMLInputLabelsMixin(HTMLMeterElement);\n// Reflected Properties\n// HTMLMeterElement.high => number, reflected attribute\n// HTMLMeterElement.low => number, reflected attribute\n// HTMLMeterElement.max => number, reflected attribute\n// HTMLMeterElement.min => number, reflected attribute\n// HTMLMeterElement.optimum => number, reflected attribute\n// HTMLMeterElement.value => number, reflected attribute\nreflectProperties([{ high: [0] }, { low: [0] }, { max: [1] }, { min: [0] }, { optimum: [0] }, { value: [0] }], HTMLMeterElement);\n//# sourceMappingURL=HTMLMeterElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLModElement extends HTMLElement {\n}\nregisterSubclass('del', HTMLModElement);\nregisterSubclass('ins', HTMLModElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\n// HTMLModElement.datetime => string, reflected attribute\nreflectProperties([{ cite: [''] }, { datetime: [''] }], HTMLModElement);\n//# sourceMappingURL=HTMLModElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLOListElement extends HTMLElement {\n}\nregisterSubclass('ol', HTMLOListElement);\n// Reflected Properties\n// HTMLModElement.reversed => boolean, reflected attribute\n// HTMLModElement.start => number, reflected attribute\n// HTMLOListElement.type => string, reflected attribute\nreflectProperties([{ reversed: [false] }, { start: [1] }, { type: [''] }], HTMLOListElement);\n//# sourceMappingURL=HTMLOListElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { transfer } from '../MutationTransfer';\nimport { store as storeString } from '../strings';\nexport class HTMLOptionElement extends HTMLElement {\n    [52 /* selected */] = false;\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return position of the option within the list of options it's within, or zero if there is no valid parent.\n     */\n    get index() {\n        return (this.parentNode && this.parentNode.children.indexOf(this)) || 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return label attribute value or text content if there is no attribute.\n     */\n    get label() {\n        return this.getAttribute('label') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param label new label value to store as an attribute.\n     */\n    set label(label) {\n        this.setAttribute('label', label);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return boolean based on if the option element is selected.\n     */\n    get selected() {\n        return this[52 /* selected */];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new selected boolean value.\n     */\n    set selected(value) {\n        this[52 /* selected */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('selected'),\n            1 /* TRUE */,\n            this[52 /* selected */] ? 1 /* TRUE */ : 0 /* FALSE */,\n        ]);\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value attribute value or text content if there is no attribute.\n     */\n    get value() {\n        return this.getAttribute('value') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new value for an option element.\n     */\n    set value(value) {\n        this.setAttribute('value', value);\n    }\n}\nregisterSubclass('option', HTMLOptionElement);\ndefinePropertyBackedAttributes(HTMLOptionElement, {\n    selected: [(el) => String(el[52 /* selected */]), (el, value) => (el.selected = value === 'true')],\n});\n// Reflected Properties\n// HTMLOptionElement.defaultSelected => boolean, reflected attribute\n// HTMLOptionElement.disabled => boolean, reflected attribute\n// HTMLOptionElement.type => string, reflected attribute\nreflectProperties([{ defaultSelected: [false, /* attr */ 'selected'] }, { disabled: [false] }, { type: [''] }], HTMLOptionElement);\n// Implemented at HTMLElement\n// HTMLOptionElement.form, Read only\t=> HTMLFormElement\n//# sourceMappingURL=HTMLOptionElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLProgressElement extends HTMLElement {\n    [48 /* indeterminate */] = true;\n    [21 /* value */] = 0;\n    dirtyValue = false;\n    get position() {\n        return this[48 /* indeterminate */] ? -1 : this.value / this.max;\n    }\n    get value() {\n        return !this.dirtyValue ? Number(this.getAttribute('value')) || 0 : this[21 /* value */];\n    }\n    set value(value) {\n        this[48 /* indeterminate */] = false;\n        this[21 /* value */] = value;\n        this.dirtyValue = true;\n        // TODO(KB) This is a property mutation needing tracked.\n    }\n}\nregisterSubclass('progress', HTMLProgressElement);\nHTMLInputLabelsMixin(HTMLProgressElement);\n// Reflected Properties\n// HTMLModElement.max => number, reflected attribute\nreflectProperties([{ max: [1] }], HTMLProgressElement);\n//# sourceMappingURL=HTMLProgressElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLQuoteElement extends HTMLElement {\n}\nregisterSubclass('blockquote', HTMLQuoteElement);\nregisterSubclass('q', HTMLQuoteElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\nreflectProperties([{ cite: [''] }], HTMLQuoteElement);\n//# sourceMappingURL=HTMLQuoteElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLScriptElement extends HTMLElement {\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('script', HTMLScriptElement);\n// Reflected Properties\n// HTMLScriptElement.type => string, reflected attribute\n// HTMLScriptElement.src => string, reflected attribute\n// HTMLScriptElement.charset => string, reflected attribute\n// HTMLScriptElement.async => boolean, reflected attribute\n// HTMLScriptElement.defer => boolean, reflected attribute\n// HTMLScriptElement.crossOrigin => string, reflected attribute\n// HTMLScriptElement.noModule => boolean, reflected attribute\nreflectProperties([{ type: [''] }, { src: [''] }, { charset: [''] }, { async: [false] }, { defer: [false] }, { crossOrigin: [''] }, { noModule: [false] }], HTMLScriptElement);\n//# sourceMappingURL=HTMLScriptElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { matchChildrenElements, matchChildElement, tagNameConditionPredicate } from './matchElements';\nconst isOptionPredicate = tagNameConditionPredicate(['OPTION']);\nconst isSelectedOptionPredicate = (element) => isOptionPredicate(element) && element.selected === true;\nexport class HTMLSelectElement extends HTMLElement {\n    [49 /* size */] = -1 /* UNMODIFIED */;\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [56 /* insertedNode */](child) {\n        super[56 /* insertedNode */](child);\n        // When this singular value select is appending a child, set the value property for two cases.\n        // 1. The inserted child is already selected.\n        // 2. The current value of the select is the default ('').\n        if ((!this.multiple && isOptionPredicate(child) && child.selected) || this.value === '') {\n            this.value = child.value;\n        }\n    }\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [57 /* removedNode */](child) {\n        super[57 /* removedNode */](child);\n        // When this singular value select is removing a selected child\n        // ... set the value property to the first valid option.\n        if (!this.multiple && child.selected) {\n            const options = this.options;\n            if (options.length > 0) {\n                this.value = options[0].value;\n            }\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.options.length;\n    }\n    /**\n     * Getter returning option elements that are direct children of a HTMLSelectElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.children.filter(isOptionPredicate);\n    }\n    /**\n     * Getter returning the index of the first selected <option> element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @return the index of the first selected option element, or -1 if no element is selected.\n     */\n    get selectedIndex() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? this.children.indexOf(firstSelectedChild) : -1;\n    }\n    /**\n     * Setter making the <option> element at the passed index selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @param selectedIndex index number to make selected.\n     */\n    set selectedIndex(selectedIndex) {\n        this.children.forEach((element, index) => (element.selected = index === selectedIndex));\n    }\n    /**\n     * Getter returning the <option> elements selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedOptions\n     * @return array of Elements currently selected.\n     */\n    get selectedOptions() {\n        return matchChildrenElements(this, isSelectedOptionPredicate);\n    }\n    /**\n     * Getter returning the size of the select element (by default 1 for single and 4 for multiple)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return size of the select element.\n     */\n    get size() {\n        return this[49 /* size */] === -1 /* UNMODIFIED */\n            ? this.multiple\n                ? 4 /* MULTIPLE */\n                : 1 /* SINGLE */\n            : this[49 /* size */];\n    }\n    /**\n     * Override the size of this element (each positive unit is the height of a single option)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @param size number to set the size to.\n     */\n    set size(size) {\n        this[49 /* size */] = size > 0 ? size : this.multiple ? 4 /* MULTIPLE */ : 1 /* SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return string representing the select element type.\n     */\n    get type() {\n        return this.multiple ? \"select-one\" /* MULTIPLE */ : \"select-multiple\" /* SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return the value of the first selected option\n     */\n    get value() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? firstSelectedChild.value : '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @set value\n     */\n    set value(value) {\n        const stringValue = String(value);\n        this.children.forEach((element) => isOptionPredicate(element) && (element.selected = element.value === stringValue));\n    }\n}\nregisterSubclass('select', HTMLSelectElement);\nHTMLInputLabelsMixin(HTMLSelectElement);\n// Reflected Properties\n// HTMLSelectElement.multiple => boolean, reflected attribute\n// HTMLSelectElement.name => string, reflected attribute\n// HTMLSelectElement.required => boolean, reflected attribute\nreflectProperties([{ multiple: [false] }, { name: [''] }, { required: [false] }], HTMLSelectElement);\n// Implemented on HTMLElement\n// HTMLSelectElement.form => HTMLFormElement, readonly\n// Unimplemented Properties\n// HTMLSelectElement.validation => string\n// HTMLSelectElement.validity => ValidityState\n// HTMLSelectElement.willValidate => boolean\n//# sourceMappingURL=HTMLSelectElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLSourceElement extends HTMLElement {\n}\nregisterSubclass('source', HTMLSourceElement);\n// Reflected Properties\n// HTMLSourceElement.media => string, reflected attribute\n// HTMLSourceElement.sizes => string, reflected attribute\n// HTMLSourceElement.src => string, reflected attribute\n// HTMLSourceElement.srcset => string, reflected attribute\n// HTMLSourceElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { sizes: [''] }, { src: [''] }, { srcset: [''] }, { type: [''] }], HTMLSourceElement);\n// Unimplemented Properties\n// HTMLSourceElement.keySystem => string\n//# sourceMappingURL=HTMLSourceElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLStyleElement extends HTMLElement {\n}\nregisterSubclass('style', HTMLStyleElement);\n// Reflected Properties\n// HTMLStyleElement.media => string, reflected attribute\n// HTMLStyleElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { type: [''] }], HTMLStyleElement);\n// Unimplemented Properties\n// HTMLStyleElement.disabled => boolean\n// HTMLStyleElement.scoped => boolean, reflected attribute\n// HTMLStyleElement.sheet => StyleSheet, read only\n//# sourceMappingURL=HTMLStyleElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableCellElement extends HTMLElement {\n    _headers;\n    get headers() {\n        return this._headers || (this._headers = new DOMTokenList(this, 'headers'));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement\n     * @return position of the cell within the parent tr, if not nested in a tr the value is -1.\n     */\n    get cellIndex() {\n        const parent = matchNearestParent(this, tagNameConditionPredicate(['TR']));\n        return parent !== null ? matchChildrenElements(parent, tagNameConditionPredicate(['TH', 'TD'])).indexOf(this) : -1;\n    }\n}\nregisterSubclass('th', HTMLTableCellElement);\nregisterSubclass('td', HTMLTableCellElement);\ndefinePropertyBackedAttributes(HTMLTableCellElement, {\n    headers: [(el) => el.headers.value, (el, value) => (el.headers.value = value)],\n});\n// Reflected Properties\n// HTMLTableCellElement.abbr => string, reflected attribute\n// HTMLTableCellElement.colSpan => number, reflected attribute\n// HTMLTableCellElement.rowSpan => number, reflected attribute\n// HTMLTableCellElement.scope => string, reflected attribute\nreflectProperties([{ abbr: [''] }, { colSpan: [1] }, { rowSpan: [1] }, { scope: [''] }], HTMLTableCellElement);\n//# sourceMappingURL=HTMLTableCellElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTableColElement extends HTMLElement {\n}\nregisterSubclass('col', HTMLTableColElement);\n// Reflected Properties\n// HTMLTableColElement.span => number, reflected attribute\nreflectProperties([{ span: [1] }], HTMLTableColElement);\n//# sourceMappingURL=HTMLTableColElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchChildElement, matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nimport { toUpper } from '../../utils';\nconst removeElement = (element) => element && element.remove();\nconst insertBeforeElementsWithTagName = (parent, element, tagNames) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    const insertBeforeElement = matchChildElement(parent, (element) => !tagNames.includes(element.tagName));\n    if (insertBeforeElement) {\n        parent.insertBefore(element, insertBeforeElement);\n    }\n    else {\n        parent.appendChild(element);\n    }\n};\nexport class HTMLTableElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @return first matching caption Element or null if none exists.\n     */\n    get caption() {\n        return matchChildElement(this, tagNameConditionPredicate(['CAPTION']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @param element new caption element to replace the existing, or become the first element child.\n     */\n    set caption(newElement) {\n        if (newElement && newElement.tagName === 'CAPTION') {\n            // If a correct object is given,\n            // it is inserted in the tree as the first child of this element and the first <caption>\n            // that is a child of this element is removed from the tree, if any.\n            removeElement(this.caption);\n            this.insertBefore(newElement, this.firstElementChild);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tHead() {\n        return matchChildElement(this, tagNameConditionPredicate(['THEAD']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new thead element to insert in this table.\n     */\n    set tHead(newElement) {\n        if (newElement && newElement.tagName === 'THEAD') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is\n            // neither a <caption>, nor a <colgroup>, or as the last child if there is no such element.\n            // Additionally, the first <thead> that is a child of this element is removed from the tree, if any.\n            removeElement(this.tHead);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tFoot() {\n        return matchChildElement(this, tagNameConditionPredicate(['TFOOT']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new tfoot element to insert in this table.\n     */\n    set tFoot(newElement) {\n        if (newElement && newElement.tagName === 'TFOOT') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is neither a <caption>,\n            // a <colgroup>, nor a <thead>, or as the last child if there is no such element, and the first <tfoot> that is a child of\n            // this element is removed from the tree, if any.\n            removeElement(this.tFoot);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP', 'THEAD']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tr' tagname elements\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tbody' tagname elements\n     */\n    get tBodies() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TBODY']));\n    }\n}\nregisterSubclass('table', HTMLTableElement);\n// Unimplemented Properties\n// HTMLTableElement.sortable => boolean\n// Unimplemented Methods\n// HTMLTableElement.createTHead()\n// HTMLTableElement.deleteTHead()\n// HTMLTableElement.createTFoot()\n// HTMLTableElement.deleteTFoot()\n// HTMLTableElement.createCaption()\n// HTMLTableElement.deleteCaption()\n// HTMLTableElement.insertRow()\n// HTMLTableElement.deleteRow()\n//# sourceMappingURL=HTMLTableElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nconst TABLE_SECTION_TAGNAMES = 'TABLE TBODY THEAD TFOOT'.split(' ');\nconst indexInAncestor = (element, isValidAncestor) => {\n    const parent = matchNearestParent(element, isValidAncestor);\n    // TODO(KB): This is either a HTMLTableElement or HTMLTableSectionElement.\n    return parent === null ? -1 : parent.rows.indexOf(element);\n};\nexport class HTMLTableRowElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return td and th elements that are children of this row.\n     */\n    get cells() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TD', 'TH']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a table, if not nested within in a table the value is -1.\n     */\n    get rowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(['TABLE']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a parent section, if not nested directly in a section the value is -1.\n     */\n    get sectionRowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(TABLE_SECTION_TAGNAMES));\n    }\n    /**\n     * Removes the cell in provided position of this row.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @param index position of the cell in the row to remove.\n     */\n    deleteCell(index) {\n        const cell = this.cells[index];\n        if (cell) {\n            cell.remove();\n        }\n    }\n    /**\n     * Insert a new cell ('td') in the row at a specified position.\n     * @param index position in the children to insert before.\n     * @return newly inserted td element.\n     */\n    insertCell(index) {\n        const cells = this.cells;\n        const td = this.ownerDocument.createElement('td');\n        if (index < 0 || index >= cells.length) {\n            this.appendChild(td);\n        }\n        else {\n            this.insertBefore(td, this.children[index]);\n        }\n        return td;\n    }\n}\nregisterSubclass('tr', HTMLTableRowElement);\n//# sourceMappingURL=HTMLTableRowElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableSectionElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @return All rows (tr elements) within the table section.\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * Remove a node in a specified position from the section.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the section to remove the node of.\n     */\n    deleteRow(index) {\n        const rows = this.rows;\n        if (index >= 0 || index <= rows.length) {\n            rows[index].remove();\n        }\n    }\n    /**\n     * Insert a new row ('tr') in the row at a specified position.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the children to insert before.\n     * @return newly inserted tr element.\n     */\n    insertRow(index) {\n        const rows = this.rows;\n        const tr = this.ownerDocument.createElement('tr');\n        if (index < 0 || index >= rows.length) {\n            this.appendChild(tr);\n        }\n        else {\n            this.insertBefore(tr, this.children[index]);\n        }\n        return tr;\n    }\n}\nregisterSubclass('thead', HTMLTableSectionElement);\nregisterSubclass('tfoot', HTMLTableSectionElement);\nregisterSubclass('tbody', HTMLTableSectionElement);\n//# sourceMappingURL=HTMLTableSectionElement.js.map","// <blockquote> and <q>\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTimeElement extends HTMLElement {\n}\nregisterSubclass('time', HTMLTimeElement);\n// Reflected Properties\n// HTMLTimeElement.dateTime => string, reflected attribute\nreflectProperties([{ dateTime: [''] }], HTMLTimeElement);\n//# sourceMappingURL=HTMLTimeElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Node } from './Node';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/CharacterData\nexport class CharacterData extends Node {\n    [38 /* data */];\n    constructor(data, nodeType, nodeName, ownerDocument, overrideIndex) {\n        super(nodeType, nodeName, ownerDocument, overrideIndex);\n        this[38 /* data */] = data;\n        this[8 /* creationFormat */] = [this[7 /* index */], nodeType, storeString(nodeName), storeString(data), 0];\n    }\n    // Unimplemented Methods\n    // NonDocumentTypeChildNode.nextElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling\n    // NonDocumentTypeChildNode.previousElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling\n    // CharacterData.appendData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/appendData\n    // CharacterData.deleteData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/deleteData\n    // CharacterData.insertData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/insertData\n    // CharacterData.replaceData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/replaceData\n    // CharacterData.substringData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/substringData\n    /**\n     * @return Returns the string contained in private CharacterData.data\n     */\n    get data() {\n        return this[38 /* data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set data(value) {\n        const oldValue = this.data;\n        this[38 /* data */] = value;\n        mutate(this.ownerDocument, {\n            target: this,\n            type: 1 /* CHARACTER_DATA */,\n            value,\n            oldValue,\n        }, [1 /* CHARACTER_DATA */, this[7 /* index */], storeString(value)]);\n    }\n    /**\n     * @return Returns the size of the string contained in CharacterData.data\n     */\n    get length() {\n        return this[38 /* data */].length;\n    }\n    /**\n     * @return Returns the string contained in CharacterData.data\n     */\n    get nodeValue() {\n        return this[38 /* data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set nodeValue(value) {\n        this.data = value;\n    }\n}\n//# sourceMappingURL=CharacterData.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Text\nexport class Text extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 3 /* TEXT_NODE */, '#text', ownerDocument, overrideIndex);\n    }\n    // Unimplemented Properties\n    // Text.isElementContentWhitespace – https://developer.mozilla.org/en-US/docs/Web/API/Text/isElementContentWhitespace\n    // Text.wholeText – https://developer.mozilla.org/en-US/docs/Web/API/Text/wholeText\n    // Text.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Text/assignedSlot\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Text Node with the same data as the Text to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createTextNode(this.data);\n    }\n    /**\n     * Breaks Text node into two nodes at the specified offset, keeping both nodes in the tree as siblings.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Text/splitText\n     * @param offset number position to split text at.\n     * @return Text Node after the offset.\n     */\n    splitText(offset) {\n        const remainderTextNode = new Text(this.data.slice(offset, this.data.length), this.ownerDocument);\n        const parentNode = this.parentNode;\n        this.nodeValue = this.data.slice(0, offset);\n        if (parentNode !== null) {\n            // When this node is attached to the DOM, the remainder text needs to be inserted directly after.\n            const parentChildNodes = parentNode.childNodes;\n            const insertBeforePosition = parentChildNodes.indexOf(this) + 1;\n            const insertBeforeNode = parentChildNodes.length >= insertBeforePosition ? parentChildNodes[insertBeforePosition] : null;\n            return parentNode.insertBefore(remainderTextNode, insertBeforeNode);\n        }\n        return remainderTextNode;\n    }\n}\n//# sourceMappingURL=Text.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Comment\nexport class Comment extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 8 /* COMMENT_NODE */, '#comment', ownerDocument, overrideIndex);\n    }\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Comment Node with the same data as the Comment to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createComment(this.data);\n    }\n}\n//# sourceMappingURL=Comment.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ParentNode } from './ParentNode';\nimport { store as storeString } from '../strings';\nexport class DocumentFragment extends ParentNode {\n    constructor(ownerDocument, overrideIndex) {\n        super(11 /* DOCUMENT_FRAGMENT_NODE */, '#document-fragment', ownerDocument, overrideIndex);\n        this[8 /* creationFormat */] = [this[7 /* index */], 11 /* DOCUMENT_FRAGMENT_NODE */, storeString(this.nodeName), 0, 0];\n    }\n    /**\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return DocumentFragment containing childNode clones of the DocumentFragment requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createDocumentFragment();\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n}\n//# sourceMappingURL=DocumentFragment.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Element, NS_NAME_TO_CLASS } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport './HTMLAnchorElement';\nimport './HTMLButtonElement';\nimport './HTMLCanvasElement';\nimport './HTMLDataElement';\nimport './HTMLDataListElement';\nimport './HTMLEmbedElement';\nimport './HTMLFieldSetElement';\nimport './HTMLFormElement';\nimport './HTMLIFrameElement';\nimport './HTMLImageElement';\nimport './HTMLInputElement';\nimport './HTMLLabelElement';\nimport './HTMLLinkElement';\nimport './HTMLMapElement';\nimport './HTMLMeterElement';\nimport './HTMLModElement';\nimport './HTMLOListElement';\nimport './HTMLOptionElement';\nimport './HTMLProgressElement';\nimport './HTMLQuoteElement';\nimport './HTMLScriptElement';\nimport './HTMLSelectElement';\nimport './HTMLSourceElement';\nimport './HTMLStyleElement';\nimport './HTMLTableCellElement';\nimport './HTMLTableColElement';\nimport './HTMLTableElement';\nimport './HTMLTableRowElement';\nimport './HTMLTableSectionElement';\nimport './HTMLTimeElement';\nimport { matchChildElement } from './matchElements';\nimport { Text } from './Text';\nimport { Comment } from './Comment';\nimport { toLower } from '../../utils';\nimport { DocumentFragment } from './DocumentFragment';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { propagate as propagateEvents } from '../Event';\nimport { propagate as propagateSyncValues } from '../SyncValuePropagation';\nimport { propagate as propagateResize } from '../ResizePropagation';\nimport { set as setPhase } from '../phase';\nconst DOCUMENT_NAME = '#document';\nexport class Document extends Element {\n    defaultView;\n    documentElement;\n    body;\n    // Internal variables.\n    postMessage;\n    addGlobalEventListener;\n    removeGlobalEventListener;\n    [58 /* allowTransfer */] = true;\n    constructor(global) {\n        super(9 /* DOCUMENT_NODE */, DOCUMENT_NAME, HTML_NAMESPACE, null);\n        // Element uppercases its nodeName, but Document doesn't.\n        this.nodeName = DOCUMENT_NAME;\n        this.documentElement = this; // TODO(choumx): Should be the <html> element.\n        this.defaultView = Object.assign(global, {\n            document: this,\n            addEventListener: this.addEventListener.bind(this),\n            removeEventListener: this.removeEventListener.bind(this),\n        });\n    }\n    /**\n     * Observing the Document indicates it's attached to a main thread\n     * version of the document.\n     *\n     * Each mutation needs to be transferred, synced values need to propagate.\n     */\n    [59 /* observe */]() {\n        setPhase(1 /* Hydrating */);\n        propagateEvents(this.defaultView);\n        propagateSyncValues(this.defaultView);\n        propagateResize(this.defaultView);\n    }\n    /**\n     * Hydrate\n     * @param strings\n     * @param skeleton\n     */\n    [64 /* hydrateNode */](strings, skeleton) {\n        switch (skeleton[0 /* nodeType */]) {\n            case 3 /* TEXT_NODE */:\n                return new Text(strings[skeleton[5 /* textContent */]], this, skeleton[7 /* index */]);\n            case 8 /* COMMENT_NODE */:\n                return new Comment(strings[skeleton[5 /* textContent */]], this, skeleton[7 /* index */]);\n            default:\n                const namespaceURI = strings[skeleton[6 /* namespaceURI */]] || HTML_NAMESPACE;\n                const localName = strings[skeleton[1 /* localOrNodeName */]];\n                const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n                const node = new constructor(1 /* ELEMENT_NODE */, localName, namespaceURI, this, skeleton[7 /* index */]);\n                (skeleton[2 /* attributes */] || []).forEach((attribute) => \n                // AttributeNamespaceURI = strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE\n                node.setAttributeNS(strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE, strings[attribute[1]], strings[attribute[2]]));\n                (skeleton[4 /* childNodes */] || []).forEach((child) => node.appendChild(this[64 /* hydrateNode */](strings, child)));\n                return node;\n        }\n    }\n    createElement(name) {\n        return this.createElementNS(HTML_NAMESPACE, toLower(name));\n    }\n    createElementNS(namespaceURI, localName) {\n        const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n        return new constructor(1 /* ELEMENT_NODE */, localName, namespaceURI, this);\n    }\n    /**\n     * Note: Unlike DOM, Event subclasses (e.g. MouseEvent) are not instantiated based on `type`.\n     * @param type\n     */\n    createEvent(type) {\n        return new Event(type, { bubbles: false, cancelable: false });\n    }\n    createTextNode(text) {\n        return new Text(text, this);\n    }\n    createComment(text) {\n        return new Comment(text, this);\n    }\n    createDocumentFragment() {\n        return new DocumentFragment(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById\n     * @return Element with matching id attribute.\n     */\n    getElementById(id) {\n        return matchChildElement(this.body, (element) => element.id === id);\n    }\n}\n//# sourceMappingURL=Document.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { get } from './nodes';\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* type */] !== 4 /* SYNC */) {\n            return;\n        }\n        const sync = data[40 /* sync */];\n        const node = get(sync[7 /* index */]);\n        if (node) {\n            node.ownerDocument[58 /* allowTransfer */] = false;\n            // Modify the private backing ivar of `value` property to avoid mutation/sync cycle.\n            node.value = sync[21 /* value */];\n            node.ownerDocument[58 /* allowTransfer */] = true;\n        }\n    });\n}\n//# sourceMappingURL=SyncValuePropagation.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* type */] !== 5 /* RESIZE */) {\n            return;\n        }\n        const sync = data[40 /* sync */];\n        if (sync) {\n            global.innerWidth = sync[0];\n            global.innerHeight = sync[1];\n        }\n    });\n}\n//# sourceMappingURL=ResizePropagation.js.map","import { Document } from './dom/Document';\nexport function createDocument() {\n    const win = {};\n    return new Document(win);\n}\n//# sourceMappingURL=server-lib.js.map"],"names":["tagNames","tagName","nodeType","conditionPredicate","forEach","child","c","d","push","l","returnValue","some","m","parentNode","indexOf","length","selectorLength","charAt","equalSuffix","equalPos","includes","attrSelector","substring","endPos","rawAttrValue","element","getAttribute","attrString","casedValue","caseInsensitive","rawValue","casedAttrValue","split","startsWith","endsWith","hasAttribute","phase","count","transfer","index","mapping","get","value","has","set","consume","pending","pendingMutations","document","mutation","concat","Promise","resolve","then","buffer","consume$1","acc","node","postMessage","r","consumeStrings","mutations","fa","record","observer","pushRecord","callback","takeRecords","transferable","t","target","observerTarget","pushMutation","property","childNodes","propagate","constructor","nodeName","ownerDocument","overrideIndex","isConnected","this","storeOverrideNodeMapping","Math","max","undefined","storeNodeMapping","a","getTextContent","textContent","childNode","parentChildNodes","hasChildNodes","contains","otherNode","insertBefore","referenceNode","slice","appendChild","remove","splice","mutate","addedNodes","nextSibling","type","previousSibling","removeChild","removedNodes","replaceChild","newChild","oldChild","replaceWith","nodes","currentNode","nodeIterator","parent","createTextNode","addEventListener","handler","options","lowerType","handlers","storedType","Number","capture","once","passive","workerDOMPreventDefault","removeEventListener","storeString","dispatchEvent","event","iterator","currentTarget","call","cancelable","bubbles","defaultPrevented","filter","elementPredicate","children","find","querySelector","selector","matches","querySelectorAll","selectorBracketIndexes","matchAttrReference","elementSelector","selectorHasAttr","id","substr","classList","localName","matchChildrenElements","matcher","defineOn","accessorKey","propertyName","Object","defineProperty","prototype","enumerable","configurable","attributeName","bind","join","collection","newValue","oldValue","item","token","add","tokens","Set","replace","newToken","delete","toggle","force","WHITESPACE_REGEX","test","TypeError","namespaceURI","attr","name","getPropertyValue","key","removeProperty","mutated","cssText","setProperty","trim","values","properties","pair","defaultValue","keywords","isBooleanAttribute","attributeValue","castableValue","String","setAttribute","removeAttribute","AREA","BASE","BR","COL","HR","IMG","INPUT","LINK","META","PARAM","SOURCE","TRACK","WBR","LI","DT","DD","P","ADDRESS","ARTICLE","ASIDE","BLOCKQUOTE","DETAILS","DIV","DL","FIELDSET","FIGCAPTION","FIGURE","FOOTER","FORM","H1","H2","H3","H4","H5","H6","HEADER","MAIN","NAV","OL","PRE","SECTION","TABLE","UL","RT","RP","OPTGROUP","OPTION","THEAD","TBODY","TFOOT","TR","TD","TH","A","B","I","SCRIPT","NOSCRIPT","STYLE","__proto__","amp","lt","gt","quot","html","s","numericEntity","namedEntity","code","toLowerCase","parseInt","isNaN","fromCodePoint","RESERVED_CHARACTERS","opts","scoped","timeStamp","isTrusted","eventPhase","cancelBubble","changedTouches","touches","offsetY","offsetX","pageY","pageX","stopPropagation","stopImmediatePropagation","preventDefault","initEvent","touchListKeys","keys","list","touchListKey","numericKey","transferredTouch","identifier","screenX","screenY","clientX","clientY","subclass","namespace","attributes","assign","sub","ElementKind","Q","NORMAL","VOID","_classList","style","CSSStyleDeclaration","kind","VOID_ELEMENTS","toString","start","contents","tag","map","outerHTML","data","rootElement","currentParent","currentNamespace","root","match","lastTextPos","kMarkupPattern","exec","decodeEntities","text","lastIndex","commentContents","createComment","beginningSlash","endSlash","kElementsClosedByOpening","normalizedTagName","stack","pop","attMatch","kAttributePattern","matchAttributes","childToAppend","kBlockTextElements","kSelfClosingElements","kElementsClosedByClosing","tagsClosed","wrapper","n","setAttributeNS","getAttributeNS","removeAttributeNS","hasAttributeNS","hasAttributes","propertyBacked","matchAttrPredicate","valueAsString","attributeNamespace","getElementsByClassName","names","inputClassList","inputClassName","getElementsByTagName","lowerTagName","getElementsByName","stringName","cloneNode","deep","clone","getBoundingClientRectAsync","left","top","right","bottom","x","y","width","height","removeGlobalEventListener","messageHandler","transferredBoundingClientRect","addGlobalEventListener","setTimeout","click","scrollIntoView","DOMTokenList","Element","class","el","tagNameConditionPredicate","reflectProperties","accessKey","contentEditable","dir","lang","title","draggable","hidden","noModule","spellcheck","translate","HTMLElement","_relList","href","registerSubclass","HTMLAnchorElement","rel","relList","hreflang","media","HTMLButtonElement","formAction","formEnctype","formMethod","formTarget","autofocus","disabled","args","i","arg","num","serialized","f32","u16","store","Array","isArray","_i","serializedArray","_i2","serializedObject","addColorStop","offset","color","serializeTransferrableObject","arguments","setTransform","canvas","context","getContext","contextType","OffscreenCanvasRenderingContext2DPolyfill","objectIndex","canvasElement","lineDash","fnName","createObjectReference","objectId","creationMethod","creationArgs","clearRect","w","h","fillRect","strokeRect","fillText","maxWidth","moveTo","lineTo","closePath","stroke","restore","save","resetTransform","rotate","angle","transform","b","e","f","scale","beginPath","strokeText","arc","radius","startAngle","endAngle","anticlockwise","arcTo","x1","y1","x2","y2","ellipse","radiusX","radiusY","rotation","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","rect","quadraticCurveTo","cpx","cpy","setLineDash","getLineDash","clip","pathOrFillRule","fillRule","fill","transformOrA","bOrC","cOrD","dOrE","eOrF","createLinearGradient","x0","y0","gradientId","CanvasGradient","createRadialGradient","r0","r1","createPattern","image","repetition","patternId","CanvasPattern","drawImage","dx","dy","createImageData","getImageData","putImageData","isPointInPath","isPointInStroke","measureText","indexTracker","callIndex","retrieveImageBitmap","instance","pattern","queue","implementation","upgraded","polyfillUsed","unresolvedCalls","goodImplementation","OffscreenCanvasPolyfill","OffscreenCanvas","getOffscreenCanvasAsync","isTestMode","deferred","maybeUpgradeImplementation","upgradePromise","deferredUpgrades","degradeImplementation","flushQueue","isSetter","delegateFunc","delegateSetter","delegateGetter","segments","antiClockwise","path","pathOrX","xOrY","yOrFillRule","imagedataOrWidth","sx","sy","sw","sh","imageData","dirtyX","dirtyY","dirtyWidth","dirtyHeight","CanvasRenderingContext2DShim","HTMLCanvasElement","HTMLDataElement","HTMLEmbedElement","src","MATCHING_CHILD_ELEMENT_TAGNAMES","HTMLFieldSetElement","elements","HTMLFormElement","method","action","enctype","acceptCharset","autocomplete","autocapitalize","_sandbox","HTMLIFrameElement","sandbox","allow","allowFullscreen","csp","referrerPolicy","srcdoc","HTMLImageElement","alt","crossOrigin","isMap","sizes","srcset","useMap","for","dirtyValue","date","dateToString","NaN","stringToDate","str","Date","HTMLInputElement","accept","defaultChecked","dirName","formEncType","maxLength","min","multiple","placeholder","readOnly","required","size","step","htmlFor","getElementById","matchChildElement","HTMLLabelElement","HTMLLinkElement","as","HTMLMapElement","HTMLMeterElement","high","low","optimum","HTMLModElement","cite","datetime","HTMLOListElement","reversed","label","HTMLOptionElement","selected","defaultSelected","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","charset","async","defer","isOptionPredicate","isSelectedOptionPredicate","firstSelectedChild","selectedIndex","stringValue","HTMLSelectElement","HTMLSourceElement","HTMLStyleElement","_headers","HTMLTableCellElement","headers","abbr","colSpan","rowSpan","scope","HTMLTableColElement","span","insertBeforeElement","newElement","caption","firstElementChild","tHead","tFoot","isValidAncestor","matchNearestParent","rows","TABLE_SECTION_TAGNAMES","deleteCell","cell","insertCell","cells","td","deleteRow","insertRow","tr","HTMLTableSectionElement","HTMLTimeElement","dateTime","nodeValue","splitText","remainderTextNode","global","body","documentElement","defaultView","propagate$1","newPhase","Event","q","u","C","z","keyCode","touchListFromTransfer","sync","innerWidth","innerHeight","strings","skeleton","Text","Comment","attribute","createElement","createElementNS","createEvent","createDocumentFragment","DocumentFragment","Document"],"mappings":"yBA6BSA,WAA0BC,SAL5BC,2BAU8BC,oCAEnBC,iBACOC,aACfF,GAAAG,UACoBD,EAExBE,EAAiBC,QAAQF,GALKG,qBAoB9BC,4BAPaC,MAKS,uBAJpBJ,GAAA,QAD0BK,+BAiBNC,iBACpB,gDAeGC,aAE6BA,QAAQC,SACxCC,oBAC+BC,QAAOD,EAAiBT,YAC9C,IAAAD,EAAA,CAAwDC,aAE/DW,GAAmCD,QAAOE,CAApB,YACuB,IAAK,KACZC,SAASF,GAAeG,EAAaC,UAAU,EAAGH,EAAW,GAAKE,EAAaC,UAAU,EAAGH,QAC/GE,EAAaC,UAAUH,EAAW,EAAGI,GACxDC,EAA8BC,EAAQC,aAAaC,UAEjDC,EAAqBC,EAA0BC,gBAAYA,EAC3DC,EAAyBF,EAA0BL,gBAAgBA,EACjEN,OACD,WACuD,IAAnDa,EAAeC,MAAM,KAAKlB,QAAQc,OACtC,eACuBA,GAAcG,IAAmB,GAAGH,SAC3D,aACmBK,WAAWL,OAC9B,aACmBM,SAASN,OAC5B,WAC4C,IAAxCG,EAAejB,QAAQc,sBAEJA,SAGzB,WAEQO,aAAad,EAAaC,UAAU,EAAGC,KChG/Ca,EAAK,ECGZC,EAAgB,EAChBC,EAAwB,wBAyCRC,WAERA,GAASC,EAAQC,IAAIF,IAAW,KCjD5C,IAAIF,EAAgB,EAChBC,EAA0B,wBAQRI,UAChBF,EAAQG,IAAID,KAECD,IAAIC,MAGbE,IAAIF,EAAOL,KACV7B,KAAKkC,QAwBVG,8BAEO,KChCb,IAAIC,GAAU,EACVC,EAAkC,cAGbC,EAAmCC,GACjD,EAALb,GAA8BY,EAAQ,MACxCF,GAAU,EACVC,EAAmBA,EAAiBG,OAAOD,GAE3CE,QAAQC,UAAUC,MAAM,QAClBP,EAAS,OAGTQ,gBFiCJC,4BAEO,iBEpCHC,EAAsBC,oBAAwF,KAC9GH,SACgBA,mBAAAA,SAETI,YACP,MAC6BtB,GAC3B,IAA+BuB,IAALvB,EAA0B,GAFtD9B,EAGE,UAC6BsD,IAJ/BtD,EAKEC,IAA+BsD,EANnC,GAQEC,GARF,EAWAf,SC/BR,SAEIA,GAAmB,OAcFgB,KACnBC,EAASC,WAAWF,OAGlBhB,GAAmB,EACnBI,QAAQC,UAAUC,MAAK,KACrBN,GAAmB,IACT3C,SAAS4D,GAAaA,EAASE,SAASF,EAASG,iCAU1CnB,EAAoBe,EAAwBK,GAEjE9B,EAASU,EAAUoB,KAGThE,SAAS4D,QACZ,IAAIK,EAAiBN,EAAOO,OAAQD,EAAGA,EAAIA,EAAExD,WAAY,CAClCyD,IAAAA,EAATN,EAASM,UA/BrBC,GAAkBA,EAAc,KA+BHF,EA/BuC,GA+BnC,CACpCG,EAAaR,EAAUD,cC1BxB,SAAkBU,EAAA/B,KACvBe,EAAKgB,GAAY/B,IACZgC,WAAWtE,SAASC,GAAUsE,EAAUtE,EAAOoE,EAAU/B,cA2B9DkC,YAAY1E,EAAoB2E,EAAoBC,EAA4BC,QAhBzED,0BAIAD,cADA3E,cADA,gBAGAwE,WAAqB,QACrB7D,WAA0B,UAC1BmE,aAAuB,OACvB,eACA,eACA,eAEC,IAEJ,QAGG9E,SAAWA,OACX2E,SAAWA,OAEXC,cAAgBA,GAAiBG,UAClC,IAAkCA,QJtC/B,IAAL7C,IACFI,EAAQI,IIuCwCsC,KJvC/B,GIuC+BA,EAAAA,MJtChD7C,EAAQ8C,KAAKC,IAAI/C,EIsC+B6C,MAAAA,QJ3BZG,II2B4DC,KJ3B1F,KI2B0FA,KJ1BrF,IAGb9C,EAAQI,IIuB0F0C,KJvBjF,KAA8BjD,EIuBmDiD,MJtBzF,EAALlD,GAEFE,EAAS9B,KIoBuF8E,QJlB3FjD,QIkBD,GAA4BkD,OAC5B,GAAwC,CAACN,KAAI,kCA0BrCO,iBAMJA,qBACJC,EAAc,8BAGH1E,QACb2D,EAAWtE,SAASsF,GAAeD,GAAeC,EAAUD,cACrDA,GAEF,gCAQKf,WAAW,IAAM,iCAQjBA,WAAWO,KAAKP,WAAW3D,OAAS,IAAM,0BAQ9B,OAApBkE,KAAKpE,iEAKe8E,EAAiB7E,QAAQmE,MAAQ,IAAM,8BAQvC,OAApBA,KAAKpE,iEAKe8E,EAAiB7E,QAAQmE,MAAQ,IAAM,KAO1DW,yBACEX,KAAKP,WAAW3D,OAQlB8E,SAASC,cACIb,MAIW,EAAzBA,KAAKP,WAAW3D,WACdkE,KAAKP,WAAWtD,SAAS6D,OAGtBA,KAAKP,WAAW/D,MAAMN,GAAUA,EAAMwF,SAASC,MAWnDC,aAAa1F,EAAoB2F,MACxB,OAAV3F,GAAkBA,IAAU4E,iBAKd,KAAd5E,EAAMH,SACRG,EAAMqE,WAAWuB,QAAQ7F,SAASqD,GAAewB,KAAKc,aAAatC,EAAMuC,SACpE,CAAA,GAAqB,MAAjBA,cAEGE,YAAY7F,MAC2B,GAA1C4E,KAAKP,WAAW5D,QAAQkF,YAE3BG,cAGDzB,WAAW0B,OAAOnB,KAAKP,WAAW5D,QAAQkF,GAAgB,EAAG3F,QAC9D,IAAiCA,GAErCgG,EACEpB,KAAKH,cACL,CACEwB,WAAY,CAACjG,GACbkG,YAAaP,EACbQ,KAAI,EACJlC,OAAQW,MAEV,GAEEA,KAAI,GACJe,EAAa,GACb,EACA,EACA,EACA3F,EAAK,KAIFA,iBAUgCA,GACzCA,EAAMQ,WAAaoE,OACT5E,EAAO,cAAe4E,KAAKD,eAC3B3E,EAAK,GAAiC4E,KAAI,QAOZ5E,GACxCA,EAAMQ,WAAa,OACTR,EAAO,eAAe,KACtBA,EAAK,GAAiCA,GAS3C6F,YAAY7F,MACC,KAAdA,EAAMH,SACRG,EAAMqE,WAAWuB,QAAQ7F,QAAQ6E,KAAKiB,YAAajB,UAC9C,CACL5E,EAAM8F,cACDzB,WAAWlE,KAAKH,QACjB,IAAiCA,qDAInC4E,KAAKH,cACL,CACEwB,WAAY,CAACjG,GACboG,gBAAAA,EACAD,KAAI,EACJlC,OAAQW,MAEV,GAEEA,KAAI,GACJ,EACAwB,EAAkBA,EAAe,GAA4B,EAC7D,EACA,EACApG,EAAK,cAaNqG,YAAYrG,sDAKVqE,WAAW0B,OAAO7D,EAAO,QAC1B,IAAgClC,GAEpCgG,EACEpB,KAAKH,cACL,CACE6B,aAAc,CAACtG,GACfmG,KAAI,EACJlC,OAAQW,MAEV,CAAA,EAAuCA,KAAI,GAA2B,EAAG,EAAG,EAAG,EAAG5E,EAAK,KAGlFA,GAGF,KAUFuG,aAAaC,EAAgBC,MAEhCD,IAAaC,GAEbA,EAASjG,aAAeoE,MAExB4B,EAAShB,SAASZ,iBAOXkB,sDAGJzB,WAAW0B,OAAO7D,EAAO,EAAGsE,QAC7B,IAAgCC,QAChC,IAAiCD,KAGnC5B,KAAKH,cACL,CACEwB,WAAY,CAACO,GACbF,aAAc,CAACG,GACfN,KAAI,EACJD,YAAatB,KAAKP,WAAWnC,EAAQ,GACrC+B,OAAQW,MAEV,GAEEA,KAAI,GACJA,KAAKP,WAAWnC,EAAQ,GAAK0C,KAAKP,WAAWnC,EAAQ,GAAE,GAA4B,EACnF,EACA,EACA,EACAsE,EAAQ,GACRC,EAAQ,OAYPC,eAAeC,OAGhBC,oBADAC,EAAuBF,EAAMjG,UAE5BoG,MAGAD,GACHC,EAAOT,YAAYzB,MAEdiC,KACLD,EAAcD,EAAME,GAEO,qBACzBD,EAAchC,KAAKH,cAAcsC,eAAeH,IAI7CC,EAIHC,EAAOpB,aAAakB,EAAqBhC,KAAKsB,aAF9CY,EAAOP,aAAaK,EAAqBhC,MAWxCkB,SACDlB,KAAKpE,iBACFA,WAAW6F,YAAYzB,MAUzBoC,iBAAiBb,EAAcc,EAAuBC,EAA+C,0CAGxCC,GAC9DjF,EAAgB,IAElBA,EAAQkF,EAASjH,KAAK8G,QAElB,IAA6BE,GAAa,CAACF,KAGxCrC,KAAKH,cAA2B,GAEvCG,KAAI,GACJ,EACA,EACAyC,EACAnF,EACAoF,SAAeJ,EAAQK,SACvBD,SAAeJ,EAAQM,MACvBF,SAAeJ,EAAQO,SACvBH,SAAeJ,EAAQQ,2BAUpBC,oBAAoBxB,EAAcc,oCAEWE,SACpCC,qBAGZA,EAASrB,OAAO7D,EAAO,GACvBD,EAAS2C,KAAKH,cAA2B,GAEvCG,KAAI,GACJ,EACA,EACAgD,EAAYT,GACZjF,KAUC2F,cAAcC,OAEfV,EACAW,EAFA9D,EAAuB6D,EAAME,cAAgBpD,WAK/CwC,EAAWnD,GAAUA,EAAM,KAAgCA,EAAM,IAAqC6D,EAAM3B,wBAErG4B,EAAWX,EAAS1G,OAAQqH,OACiB,IAA3CX,EAASW,GAAUE,KAAKhE,EAAQ6D,KAAoBA,EAAK,MAA4BA,EAAMI,qBAK7FJ,EAAMK,WAAaL,EAAMI,aAAcJ,EAAK,OAA8B7D,EAASA,GAAUA,EAAOzD,oBACrGsH,EAAMM,kBCvcZ,6CAOU/D,WAAWgE,OAAOC,uCASlBC,SAAS7H,2CASR2D,WAAWmE,KAAKF,IAAiC,yDAU9CC,EAAS7H,OAAS,IAAM,KAQ1C+H,cAAcC,mBACsCA,IACjCC,EAAQ,GAAK,KAQhCC,iBAAiBF,YACS9D,KAAM8D,IAUlCE,WAA0BxF,EAAYsF,yBAGLA,6DAEWG,6BACHA,sBAKnB,MAAhBH,EAAS,GACAtH,GAAY0H,EAAmBJ,EAAUtH,GACpB,MAAvB2H,EAAgB,GACfC,EACL5H,GAAYA,EAAQ6H,KAAOF,EAAgBG,OAAO,IAAMJ,EAAmB9H,EAAcI,GACzFA,GAAYA,EAAQ6H,KAAOF,EAAgBG,OAAO,GACvB,MAAvBH,EAAgB,GACfC,EACL5H,GAAYA,EAAQ+H,UAAU3D,SAASuD,EAAgBG,OAAO,KAAOJ,EAAmB9H,EAAcI,GACtGA,GAAYA,EAAQ+H,UAAU3D,SAASuD,EAAgBG,OAAO,IAEzDF,EACL5H,GAAYA,EAAQgI,YAAsBL,iBAAoBD,EAAmB9H,EAAcI,GAC/FA,GAAYA,EAAQgI,YAAsBL,gBAK7CM,EAAsBjG,EAAI,IAAiCkG,GAASjB,QAAQjH,GAAYgC,IAAShC,GAAWgC,EAAKoC,SAASpE,KCxGhI,sBAQqCmI,EAA0BC,EAAqBC,GAClFC,OAAOC,eAAeJ,EAASK,UAAWH,EAAc,CACtDI,YAAY,EACZC,cAAc,EACd1H,kBAC2BoH,GAAanH,OAExCE,IAAIF,QACgBmH,GAAanH,MAAQA,KAKvC,QAaJkC,YAAYN,EAAiB8F,QAZrB,IAA4C,QAC5C,gBACA,gBACA,gBAUF,IAA6B9F,OAC7B,IAAoC8F,OACpC,IAAqC9F,EAAM,IAAmC+F,KAAK/F,2BAQ5E,IAA2BgG,KAAK,8BAQhC,IAA2BvJ,iBAO9BwJ,oCAKJ,IAA2BnE,OAAO,EAAGnB,KAAI,IAA2BlE,UAAyB,KAAbyJ,EAAkBA,EAASxI,MAAM,OAAS,SAC1H,IAA4ByI,EAAUD,GAQrCE,KAAKnI,eACC,IAA2BA,GAQjCsD,SAAS8E,eACH,IAA2BvJ,SAASuJ,GAU1CC,OAAOC,yBAER,IAA2BzE,OAAO,EAAGnB,KAAI,IAA2BlE,cAAe+J,IAAI7F,KAAI,IAA2B/B,OAAO2H,UAC7H,IAA4BJ,EAAUxF,KAAKvC,OAU1CyD,UAAU0E,yBAEX,IAA2BzE,OAC7B,EACAnB,KAAI,IAA2BlE,cACxB+J,IAAI7F,KAAI,IAA2ByD,QAAQiC,IAAWE,EAAOzJ,SAASuJ,YAE3E,IAA4BF,EAAUxF,KAAKvC,OAQ1CqI,QAAQJ,EAAeK,MACvB/F,KAAI,IAA2B7D,SAASuJ,6CAM/BK,IACZpI,EAAIqI,OAAON,GACM,KAAbK,GACFpI,EAAIgI,IAAII,SAGR,IAA2B5E,OAAO,EAAGnB,KAAI,IAA2BlE,UAAW6B,QAC/E,IAA4B6H,EAAUxF,KAAKvC,QAW1CwI,OAAOP,EAAeQ,MACvBC,EAAiBC,KAAKV,aACdW,UAAU,4BAGjBrG,KAAI,IAA2B7D,SAASuJ,QAMjCQ,cAELhF,OAAOwE,IACL,YAROtF,IAAV8F,GAAyBA,SAEtBP,IAAID,UASN,KAS2BF,EAAkB/H,QAChD,IAAmCuC,KAAI,IAA2BsG,aAActG,KAAI,IAAmCvC,KAEzHuC,KAAI,IAA2BH,cAC/B,CACE0B,KAAI,EACJlC,OAAQW,KAAI,IACZmF,cAAenF,KAAI,IACnBvC,MAAAA,EACA+H,SAAAA,GAEF,GAEExF,KAAI,IAA0B,GAC9BgD,EAAYhD,KAAI,KAChB,EACU,OAAVvC,EAAiBuF,EAAYvF,GAAS,EAAI,KC5L3C,iCAA8F8I,aAA7ClB,eAC1BmB,8CCkE5B7G,YAAYN,QAJJ,GAAkD,QAClD,gBACA,gBAGF,IAAqCA,EAAM,IAAmC+F,KAAK/F,QACnF,IAA6BA,EAS5BoH,iBAAiBC,eACX,GAA+BA,IAAQ,GAS7CC,eAAeD,8CAGhB,GAA+BA,GAAO,UACrCE,QAAQ5G,KAAK6G,WAUbC,YAAYJ,EAAajJ,QAC1B,GAA+BiJ,GAAOjJ,OACrCmJ,QAAQ5G,KAAK6G,2BAQdpJ,EACAhC,EAAsB,OACrB,iBAC0C,MAAxCgC,EAAQuC,KAAKyG,iBAAiBC,MACjCjL,GAAe,GAAGiL,MAAQjJ,gBAGXsJ,mBAQTtJ,QAKN,GAAiC,gEAIhC,IAAIH,EAAQ,EAAGA,EAAQ,EAAIxB,EAAQwB,GAAS,OAC3C,GAAuC0J,EAAO1J,GAAOyJ,sBAAWC,EAAO1J,EAAQ,GAAGyJ,YAEnFH,QAAQ5G,KAAK6G,SASZD,QAAQnJ,kBAC0CuC,KAAI,IAA2BsG,aAAc,QAAS7I,KAE5GuC,KAAI,IAA2BH,cAC/B,CACE0B,KAAI,EACJlC,OAAQW,KAAI,IACZmF,cAAe,QACf1H,MAAAA,EACA+H,SAAAA,GAEF,GAEExF,KAAI,IAA0B,GAC9BgD,EAAY,SACZ,EACU,OAAVvF,EAAiBuF,EAAYvF,GAAS,EAAI,KCxJ3C,SAA0BkH,KAC/BsC,EAAW9L,SAAS+L,QACb,MAAM1H,OAAkB,SAChB2H,IAAiBhC,EAAwB3F,kBAAc4H,GAAaF,EAAK1H,GAG9E6H,EAA6C,2BAE5CtC,eAAeJ,EAASK,UAAWxF,EAAU,CAClDyF,YAAY,EACZzH,UAEQ8J,EADU9K,KACeC,aAAa0I,UACxCiC,OACalK,aAAaiI,GAAiBmC,IAAmBF,EAAS,GAAKD,EAE5EE,OACanK,aAAaiI,MAERmC,GAAkBH,EACT,mBAAWzE,OAAO6E,GAAiBC,OAAOD,KAE3E5J,IAAIF,GAEE2J,EADY5K,KAENiL,aAAatC,EAAe1H,EAAQ2J,EAAS,GAAKA,EAAS,IAC1DC,EACT5J,EAJcjB,KAIEiL,aAAatC,EAAe,IAJ9B3I,KAI4CkL,gBAAgBvC,GAJ5D3I,KAMNiL,aAAatC,EAAeqC,OAAO/J,8IC5CrDkK,MAAM,EACNC,MAAM,EACNC,IAAI,EACJC,KAAK,EACLC,IAAI,EACJC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,MAAM,EACNC,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,KAAK,MAGLC,GAAI,CAAEA,IAAI,GACVC,GAAI,CAAEA,IAAI,EAAMC,IAAI,GACpBA,GAAI,CAAEA,IAAI,EAAMD,IAAI,GACpBE,EAAG,CACDC,SAAS,EACTC,SAAS,EACTC,OAAO,EACPC,YAAY,EACZC,SAAS,EACTC,KAAK,EACLC,IAAI,EACJC,UAAU,EACVC,YAAY,EACZC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,QAAQ,EACR/B,IAAI,EACJgC,MAAM,EACNC,KAAK,EACLC,IAAI,EACJtB,GAAG,EACHuB,KAAK,EACLC,SAAS,EACTC,OAAO,EACPC,IAAI,GAENC,GAAI,CAAEA,IAAI,EAAMC,IAAI,GACpBA,GAAI,CAAED,IAAI,EAAMC,IAAI,GACpBC,SAAU,CAAEA,UAAU,GACtBC,OAAQ,CAAEA,QAAQ,EAAMD,UAAU,GAClCE,MAAO,CAAEC,OAAO,EAAMC,OAAO,GAC7BD,MAAO,CAAEA,OAAO,EAAMC,OAAO,GAC7BC,GAAI,CAAEA,IAAI,GACVC,GAAI,CAAEA,IAAI,EAAMC,IAAI,GACpBA,GAAI,CAAED,IAAI,EAAMC,IAAI,OAGpBvC,GAAI,CAAE6B,IAAI,EAAMJ,IAAI,GACpBe,EAAG,CAAE/B,KAAK,GACVgC,EAAG,CAAEhC,KAAK,GACViC,EAAG,CAAEjC,KAAK,GACVN,EAAG,CAAEM,KAAK,GACV6B,GAAI,CAAED,IAAI,EAAMT,OAAO,GACvBW,GAAI,CAAEF,IAAI,EAAMT,OAAO,OAGvBe,QAAQ,EACRC,UAAU,EACVC,OAAO,EACPnB,KAAK,GAqJP,OACEoB,UAAW,KACXC,IAAK,IACLC,GAAI,IACJC,GAAI,IACJC,KAAM,gBAEgBC,YACV7F,QAAQ,kCAAkC,SAAU8F,EAAGC,EAAeC,aAG1EC,EAAiD,MAA1CF,EAAc7P,OAAO,GAAGgQ,cAAwBC,SAASJ,EAAcvH,OAAO,GAAI,IAAM2H,SAASJ,EAAcvH,OAAO,GAAI,IAGjI4H,MAAMH,IAAgB,QAAPA,EACVH,EAGFpE,OAAO2E,cAAcJ,IAASH,GAInCE,GACKM,EAAoBN,EAAYE,gBAGlCJ,KCjNL,QAwBJjM,YAAY4B,EAAc8K,QAVnBC,YADA/K,UADAgL,eADAlN,YAHA5D,iBADA+Q,eADAC,gBADAjJ,sBADAJ,mBADAsJ,kBADApJ,gBADAC,oBAcA,KAAoC,OACpC,KAAmC,OAMnCoJ,oBADAC,aADAC,aADAC,aADAC,WADAC,kBAQAzL,KAAOA,OACPgC,UAAY8I,EAAK9I,aACjBD,aAAe+I,EAAK/I,WAEpB2J,uBACD,KAA2B,EAE1BC,gCACD,IAA0BlN,KAAI,KAA2B,EAExDmN,sBACA3J,kBAAmB,EAGnB4J,UAAU7L,EAAcgC,EAAkBD,QAC1C/B,KAAOA,OACPgC,QAAUA,OACVD,WAAaA,GAuBtB,SAA8BJ,EAAAwD,aAKTtG,IAAf8C,EAAMwD,GAAoB,OACtB2G,EAAgBvI,OAAOwI,KAAKpK,EAAMwD,IAClC6G,EAAkB,CACtBzR,OAAQuR,EAAcvR,OACtB2J,KAAKnI,eACSA,IAAU,gBAIZnC,SAASqS,IACfC,EAAa/K,OAAO8K,SACpBE,EAAoBxK,EAAMwD,GAAgC+G,KAC3DA,GAAc,CACjBE,WAAYD,EAAiB,GAC7BE,QAASF,EAAiB,GAC1BG,QAASH,EAAiB,GAC1BI,QAASJ,EAAiB,GAC1BK,QAASL,EAAiB,GAC1BV,MAAOU,EAAiB,GACxBX,MAAOW,EAAiB,GACxBrO,OAAQ7B,EAA4B,IAAxBkQ,EAAiB,GAAWA,EAAiB,GAAK3P,EAAQ,YChHvE,cACyBiQ,EAAAC,+DAOetJ,EAA0BuJ,gCAE/D,IAA+CpJ,OAAOqJ,OAAOC,EAAKF,GAkB5E,IAAKG,EAAAC,EAAAD,IAAAA,EAAW,MACdA,EAAAE,OAAA,GAAA,WACAF,EAAAG,KAAA,GAAA,iHAmCA7O,YAAY1E,EAAoBuJ,EAAqB8B,EAA4BzG,EAA4BC,SACrG7E,EAAkBuJ,gBAAY3E,EAAeC,QAZ9C0E,eAPCiK,uBAQDP,WAAqB,QACrBQ,MAA6B,IAAIC,EAAoB3O,WAOpD4O,UANDtI,yBAUAA,aAAeA,uCACf9B,UAAYA,OACZoK,KAAOC,EAAc1S,SAAS6D,KAAKhF,SAAWqT,EAAYG,KAAOH,EAAYE,YAE9E,GAAqC,CACvCvO,KAAI,GACJA,KAAK/E,SACL+H,EAAYhD,KAAKwE,WACjB,EACsB,OAAtBxE,KAAKsG,aAAwB,EAAItD,EAAYhD,KAAKsG,2EA+DlCwI,oBAAAzJ,UAAA0B,qCAIZ/G,KAAK4O,OAASP,EAAYG,KAMzBO,EAAQC,EAAW,KAAKC,KAHpBF,iDAaIjT,OACN2D,EACJyP,KAAK9T,WACIA,EAAMH,eACZ,WACeuF,iBACf,QACS,UAAOpF,EAAMoF,qCAEP2O,cAGlB9J,KAAK,IAEH,iBAOKsG,cFlHMyD,EAAcC,yBAI9BC,qCAFSD,aAGTE,EAAmBC,EAAKlJ,uBAGxBmJ,EADAC,EAAc,IAEX,MAAQN,EAAO,kDAGlBG,oCAAsCA,cACxB,4BAA8BA,QAGxCE,EAAQE,EAAeC,KAAKR,IAAQ,yDAOxBK,EAAMnS,oBAETmS,SACbH,EAAcrO,YAAYpB,EAAcsC,eAAe0N,EAAeC,QAE1DH,EAAeI,eACL3P,IAApB4P,EAEFV,EAAcrO,YAAYpB,EAAcoQ,cAAcD,0CAOtDT,EAAmBW,gEAGhBA,EAAgB,EAEdC,GAAYC,EAAyBd,EAActU,UAClDoV,EAAyBd,EAActU,SAASqV,KAClDC,EAAMC,MACNjB,EAAyBgB,EAAAA,EAxIlBxU,OAAS,2DA4IEyT,yBAEjB,IAAIiB,EAAWA,EAAWC,EAAkBb,KAAKc,IAGpDC,EAAclJ,yCAGA6H,EAAcrO,YAAY0P,KAEpCpV,KAAK+T,GACPsB,EAAmBP,GAAoB,gCAI3B,kBADAV,0BAEI,2BAEhBA,EAAeI,UAAYzS,MAKjB,kBAAZtC,IACFuU,EAAmBW,+DAGjBA,GAAkBC,GAAYU,EAAqBR,UAG/B,GAAhBC,EAAMxU,SADC,IAKCwT,EAAc1P,wBAAayQ,EACrCC,EAAMC,MACNjB,EAAyBgB,EAAAA,EAhLlBxU,OAAS,WAoLZgV,EAAyBxB,EAActU,UACrC8V,EAAyBxB,EAActU,SAASqV,GAAoB,CACtEC,EAAMC,QACmBD,EAAAA,EAvLtBxU,OAAS,wBAkMnB,eACCiV,EAAWA,EAAWjV,OAAS,IAAM0C,EAAKoB,eAC5C0Q,EAAMC,MACNQ,EAAWR,MACXjB,EAAyBgB,EAAAA,EAtMdxU,OAAS,+BA6MN,wEAMRF,WAAa,KACrBoV,EAAQvR,WAAWtE,SAASqD,IAC1BA,EAAK5C,WAAa,QAEboV,cAGO,wCEbIhR,WAGbP,WAAWtE,SAAS8V,IACvBvR,EAAUuR,EAAG,eAAe,KAClBA,EAAC,GAAiCA,QAI5CjR,KAAKH,cACL,CACE6B,aAAc1B,KAAKP,WACnB8B,KAAI,EACJlC,OAAQW,MAEV,GAEEA,KAAI,GACJ,EACA,EACA,EACAA,KAAKP,WAAW3D,UACbkE,KAAKP,WAAWyP,KAAK1Q,GAASA,EAAI,YAIpCiB,WAAa,KAGbA,WAAWtE,SAASC,GAAgB4E,KAAKiB,YAAY7F,qBAO5C0U,QAETrQ,WAAWuB,QAAQ7F,SAASC,GAAgBA,EAAM8F,gBAClDD,YAAYjB,KAAKH,cAAcsC,eAAe2N,kCASvCvP,2CAQAX,SASP6H,aAAajB,EAAc/I,QAC3ByT,8CAA+B1K,EAAM/I,GAUrChB,aAAa+J,eACN2K,8CAA+B3K,GAUtCkB,gBAAgBlB,QAChB4K,iDAAkC5K,GAQlCtJ,aAAasJ,eACN6K,8CAA+B7K,GAOtC8K,yBACEtR,KAAKkO,WAAWpS,OAYlBoV,eAAe5K,EAA4BE,EAAc/I,8CAE0C+I,YACpG+K,GACGvR,KAAKkO,WAAWtK,KAAK4N,EAAmBlL,EAAcE,UACpD0H,WAAW3S,KAAK,CACnB+K,aAAAA,EACAE,KAAAA,EACA/I,MAAOgU,IAGXF,EAAe,GAAGvR,KAAMyR,gBAI8BnL,EAAcE,EAAMiL,GAC5ErQ,EACEpB,KAAKH,cACL,CACE0B,KAAI,EACJlC,OAAQW,KACRmF,cAAeqB,EACfkL,mBAAoBpL,EACpB7I,MAAOgU,EACPjM,SAAAA,GAEF,GAEExF,KAAI,GACJgD,EAAYwD,GACZxD,EAAYsD,GACF,OAAV7I,EAAiBuF,EAAYyO,GAAiB,EAAI,QAKdnL,EAA4BE,EAAc/I,kCAC9B+I,8BAIlDD,EAAK9I,MAAQA,OAERyQ,WAAW3S,KAAK,CACnB+K,aAAAA,EACAE,KAAAA,EACA/I,MAAAA,MAcC0T,eAAe7K,EAA4BE,qCACIA,UAGxBpG,4BAD8EoG,IAClE+K,EAAe,GAAGvR,MAAQuG,EAAK9I,MAEhE,KAWF2T,kBAAkB9K,EAA4BE,uCACOA,OAE7C,GAATlJ,EAAY,0BACGG,WACZyQ,WAAW/M,OAAO7D,EAAO,KAG5B0C,KAAKH,cACL,CACE0B,KAAI,EACJlC,OAAQW,KACRmF,cAAeqB,EACfkL,mBAAoBpL,EACpBd,SAAAA,GAEF,GAEExF,KAAI,GACJgD,EAAYwD,GACZxD,EAAYsD,GACZ,KAYD+K,eAAe/K,EAA4BE,eACpC0H,WAAWxS,KAAK8V,EAAmBlL,EAAcE,IAQxDmL,uBAAuBC,+BAKC5R,MAAOxD,GAAYqV,EAAenW,MAAMoW,GAAmBtV,EAAQ+H,UAAU3D,SAASkR,OAQ9GC,qBAAqB/W,kCAGxBgF,KACY,MAAZhF,EACK,KAAM,EACNwB,oCAAaA,EAAQ8J,aAAkC9J,EAAQgI,YAAcwN,EAAexV,EAAQxB,UAAYA,GASlHiX,kBAAkBzL,uBAEMxG,MAAOxD,GAAYA,EAAQC,aAAa,UAAYyV,IAQ5EC,UAAUC,GAAgB,+FACRpS,uEAIlBkO,WAAW/S,SAASoL,GAAS8L,EAAM5K,aAAalB,EAAKC,KAAMD,EAAK9I,iBAE9DgC,WAAWtE,SAASC,GAAgBiX,EAAMpR,YAAY7F,EAAM+W,UAAUC,QAYxEE,oCAEHC,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,EAAG,EACHC,EAAG,EACHC,MAAO,EACPC,OAAQ,cAGC5U,SAASC,YACQiR,KAAAA,MAEM,IAA5BA,EAAI,KACHA,EAAmC,IAA2B,KAAOpP,KAAI,UAErEH,cAAckT,0BAA0B,UAAWC,GAClDC,EAAkE7D,EAAmC,IAC3GjR,EAAQ,CACNqU,IAAKS,EAA8B,GACnCR,MAAOQ,EAA8B,GACrCP,OAAQO,EAA8B,GACtCV,KAAMU,EAA8B,GACpCJ,MAAOI,EAA8B,GACrCH,OAAQG,EAA8B,GACtCN,EAAGM,EAA8B,GACjCL,EAAGK,EAA8B,YAK7BpT,cAAcqT,wBAA2BlT,KAAKD,kBAKjDF,cAAcqT,uBAAuB,UAAWF,GACrD3V,EAAS2C,KAAKH,cAA2B,CAAA,EAAqDG,KAAI,KAClGmT,WAAWhV,EAAS,IAAKgJ,IAJzBhJ,EAAQgJ,MAUdiM,4BACgB,MACR/T,OAASW,UACViD,cAAcC,GAIrBmQ,iBACMrT,KAAKD,aACP1C,EAAS2C,KAAKH,cAA2B,CAAA,GAA6CG,KAAI,iCAKhFyO,aAAezO,KAAKyO,WAAa,IAAI6E,EAAatT,KAAM,WAxe3DuT,EAGG,IAAyE,CACrFC,MAAO,CAAEC,GAAsBA,EAAGlP,UAAU9G,MAAO,CAACgW,EAAIhW,IAAmBgW,EAAGlP,UAAU9G,MAAQA,GAChGiR,MAAO,CAAE+E,GAAsBA,EAAG5M,QAAS,CAAC4M,EAAIhW,IAAmBgW,EAAG5M,QAAUpJ,MAse/D8V,EAAS,YAAa,eACzB,CAAC,CAAElP,GAAI,CAAC,MAAQkP,wDChhBzB,IAEH,uBAQwBvT,KAAM0T,EAA0B,CAAC,qBAIpD,CAAA,EAAsC1T,KAAI,KAerD2T,EACE,CACE,CAAEC,UAAW,CAAC,KACd,CAAEC,gBAAiB,CAAC,YACpB,CAAEC,IAAK,CAAC,KACR,CAAEC,KAAM,CAAC,KACT,CAAEC,MAAO,CAAC,KACV,CACEC,UAAW,EAAC,OAAkB7T,GAA2B,OAAQ,WAEnE,CAAE8T,OAAQ,EAAC,OAAkB9T,IAC7B,CAAE+T,SAAU,EAAC,IACb,CACEC,WAAY,EAAC,OAAiBhU,GAA2B,OAAQ,WAEnE,CAAEiU,UAAW,EAAC,OAAiBjU,GAA2B,MAAO,SAEnEkU,wDCxEQC,0CAGMA,WAAavU,KAAKuU,SAAW,IAAIjB,EAAatT,KAAM,QAQ3D8O,uBACO0F,4BASAhU,qBAQLsP,QACFtP,YAAcsP,GAGvB2E,EAAiB,IAAKC,KACSA,EAAmB,CAChDC,IAAK,CAAElB,GAAsBA,EAAGmB,QAAQnX,MAAO,CAACgW,EAAIhW,IAAmBgW,EAAGmB,QAAQnX,MAAQA,OAEvEiX,EAAmB,UAAW,SAQjC,CAAC,CAAEF,KAAM,CAAC,KAAO,CAAEK,SAAU,CAAC,KAAO,CAAEC,MAAO,CAAC,KAAO,CAAEzV,OAAQ,CAAC,KAAO,CAAEkC,KAAM,CAAC,MAAQmT,sBC9C3GD,EAAiB,SAAUM,KAazB,CACE,CAAEC,WAAY,CAAC,KACf,CAAEC,YAAa,CAAC,KAChB,CAAEC,WAAY,CAAC,KACf,CAAEC,WAAY,CAAC,KACf,CAAE3O,KAAM,CAAC,KACT,CAAEjF,KAAM,CAAC,WACT,CAAE9D,MAAO,CAAC,KACV,CAAE2X,UAAW,EAAC,IACd,CAAEC,SAAU,EAAC,KAEfN,wECN2CO,gBAEtC,IAAIC,EAAI,EAAGA,EAAID,EAAKxZ,OAAQyZ,IAAK,eAGjB,mBAAU,CACZC,IAAAA,EAAAA,KApBf,GAAKC,KAGE,KAAOA,EAkBZC,EAAWna,KAAI,EAAmCia,IAElDG,GAAI,GAAKH,EACTE,EAAWna,KAAI,EAAgCqa,GAAI,GAAIA,GAAI,aAK5C,mBACjBF,EAAWna,KAAI,EAAiCsa,EAAML,YAIpDM,MAAMC,QAAQP,OAChBE,EAAWna,KAAI,EAAgCia,EAAI1Z,gBAG1Cka,EAAI,EAAGA,EAAIC,EAAgBna,OAAQka,IAC1CN,EAAWna,KAAK0a,EAAgBD,YAMjB,+BAUH,4CAPLE,EAAI,EAAGA,EAAIC,EAAiBra,OAAQoa,IAC3CR,EAAWna,KAAK4a,EAAiBD,cC9CnC,SAIJvW,YAAY0E,EAAYtG,QAHhBsG,eAIDtG,SAAWA,OACXsG,GAAKA,EAGZ+R,aAAaC,EAAgBC,GAC3BjZ,EAAS2C,KAAKjC,SAAU,GAEtB8X,EAAM,gBACN,KACG7V,KAAI,SACJuW,GAA6B,IAAIC,yBAK/B,CAAA,EAAyCxW,KAAKqE,KCxBnD,SAGJ1E,YAAY0E,QACLA,GAAKA,EAMZoS,2BAGS,CAAA,EAAyCzW,KAAKqE,KCSnD,SAIJ1E,YAAY+W,QAFZC,aADAD,mBAIOA,OAASA,EAGhBE,WAAWC,OACJ7W,KAAK2W,YACqB,OAAjBE,4BAGM,oCAFXF,QAAU,IAAIG,GAAuD9W,KAAK0W,oBAKvEC,SAIhB,SAKEhX,YAAY+W,QAFJK,YAAc,OAGfC,cAAgBN,OAChBO,SAAW,MAGkBC,EAAgB5B,GAClDjY,EAAS2C,KAAKgX,cAAcnX,cAA2B,GAErDgW,EAAMqB,GACN5B,EAAKxZ,UACFkE,KAAI,SACJuW,GAA6BjB,gBAK3B,CAAA,EAAmDtV,KAAKgX,cAAa,IAStEG,sBAAsBC,EAAkBC,EAAwBC,GACtEja,EAAS2C,KAAKgX,cAAcnX,cAA2B,IAErDgW,EAAMwB,GACND,EACAE,EAAaxb,UACVkE,KAAI,SACJuW,GAA6Be,8BAKtBN,cAGdO,UAAU5E,EAAWC,EAAW4E,EAAWC,QACrC,IAA4B,YAAa,IAAIjB,YAGnDkB,SAAS/E,EAAWC,EAAW4E,EAAWC,QACpC,IAA4B,WAAY,IAAIjB,YAGlDmB,WAAWhF,EAAWC,EAAW4E,EAAWC,QACtC,IAA4B,aAAc,IAAIjB,0BAGtC/Y,QACR,IAA4B,YAAa,IAAI+Y,YAGnDoB,SAAS9H,EAAc6C,EAAWC,EAAWiF,QACvC,IAA4B,WAAY,IAAIrB,YAGlDsB,OAAOnF,EAAWC,QACZ,IAA4B,SAAU,IAAI4D,YAGhDuB,OAAOpF,EAAWC,QACZ,IAA4B,SAAU,IAAI4D,YAGhDwB,iBACM,IAA4B,YAAa,IAG/CC,cACM,IAA4B,SAAU,IAG5CC,eACM,IAA4B,UAAW,IAG7CC,YACM,IAA4B,OAAQ,IAG1CC,sBACM,IAA4B,iBAAkB,IAGpDC,OAAOC,QACD,IAA4B,SAAU,IAAI9B,YAGhD+B,UAAUjY,EAAWkY,EAAWnd,EAAWC,EAAWmd,EAAWC,QAC3D,IAA4B,YAAa,IAAIlC,YAGnDnC,UAAU1B,EAAWC,QACf,IAA4B,YAAa,IAAI4D,YAGnDmC,MAAMhG,EAAWC,QACX,IAA4B,QAAS,IAAI4D,4BAG/B/Y,QACV,IAA4B,cAAe,IAAI+Y,yCAGxB/Y,QACvB,IAA4B,2BAA4B,IAAI+Y,sCAGxC/Y,QACpB,IAA4B,wBAAyB,IAAI+Y,0BAGjD/Y,QACR,IAA4B,YAAa,IAAI+Y,4BAGnC/Y,QACV,IAA4B,cAAe,IAAI+Y,2BAGtC/Y,QACT,IAA4B,aAAc,IAAI+Y,4BAGpC/Y,QACV,IAA4B,cAAe,IAAI+Y,8BAGnC/Y,QACZ,IAA4B,gBAAiB,IAAI+Y,8BAGrC/Y,QACZ,IAA4B,gBAAiB,IAAI+Y,uBAG5C/Y,QACL,IAA4B,SAAU,IAAI+Y,YAGhDoC,iBACM,IAA4B,YAAa,IAG/CC,WAAW/I,EAAc6C,EAAWC,EAAWiF,QACzC,IAA4B,aAAc,IAAIrB,0BAGtC/Y,QACR,IAA4B,YAAa,IAAI+Y,6BAGlC/Y,QACX,IAA4B,eAAgB,IAAI+Y,wBAG1C/Y,QACN,IAA4B,UAAW,IAAI+Y,+BAG9B/Y,QACb,IAA4B,iBAAkB,IAAI+Y,yBAG3C/Y,QACP,IAA4B,WAAY,IAAI+Y,2BAGnC/Y,QACT,IAA4B,aAAc,IAAI+Y,YAGpDsC,IAAInG,EAAWC,EAAWmG,EAAgBC,EAAoBC,EAAkBC,QAC1E,IAA4B,MAAO,IAAI1C,YAG7C2C,MAAMC,EAAYC,EAAYC,EAAYC,EAAYR,QAChD,IAA4B,QAAS,IAAIvC,0BAGjC/Y,QACR,IAA4B,YAAa,IAAI+Y,qBAG1C/Y,QACH,IAA4B,OAAQ,IAAI+Y,YAG9CgD,QAAQ7G,EAAWC,EAAW6G,EAAiBC,EAAiBC,EAAkBX,EAAoBC,EAAkBC,QAClH,IAA4B,UAAW,IAAI1C,YAGjDoD,cAAcC,EAAcC,EAAcC,EAAcC,EAAcrH,EAAWC,QAC3E,IAA4B,gBAAiB,IAAI4D,YAGvDyD,KAAKtH,EAAWC,EAAWC,EAAeC,QACpC,IAA4B,OAAQ,IAAI0D,YAG9C0D,iBAAiBC,EAAaC,EAAazH,EAAWC,QAChD,IAA4B,mBAAoB,IAAI4D,sCAGhC/Y,QACpB,IAA4B,wBAAyB,IAAI+Y,YAG/D6D,YAAYpD,OACVA,EAAW,IAAIA,IACFnb,OAAS,IACpBmb,EAAWA,EAAShZ,OAAOgZ,SAExBA,SAAWA,OACZ,IAA4B,cAAe,IAAIT,YAGrD8D,oBACS,IAAIta,KAAKiX,UAGlBsD,KAAKC,EAA0CC,MACf,+BACZ,iDAEd,IAA4B,OAAQ,IAAIjE,YAG9CkE,KAAKF,EAA0CC,MACf,+BACZ,iDAEd,IAA4B,OAAQ,IAAIjE,YAI9CC,aAAakE,EAAyCC,EAAeC,EAAeC,EAAeC,EAAerC,MACpF,+BACV,kEAEd,IAA4B,eAAgB,IAAIlC,YAGtDwE,qBAAqBC,EAAYC,EAAY9B,EAAYC,wCAElDlC,sBAAsBgE,EAAY,uBAAwB,IAAI3E,gBACxD4E,GAAeD,EAAYnb,KAAKgX,cAAcnX,eAG3Dwb,qBAAqBJ,EAAYC,EAAYI,EAAYlC,EAAYC,EAAYkC,wCAE1EpE,sBAAsBgE,EAAY,uBAAwB,IAAI3E,gBACxD4E,GAAeD,EAAYnb,KAAKgX,cAAcnX,eAG3D2b,cAAcC,EAA6CC,wCAEpDvE,sBAAsBwE,EAAW,gBAAiB,IAAInF,gBAChDoF,GAAcD,GAG3BE,UAAUJ,EAA0BK,EAAYC,QAC1C,IAA4B,YAAa,IAAIvF,YAGnDwF,wBACS,GAGTC,qBACS,GAGTC,gBAEAC,4BACkB,qCAGlBC,8BACkB,uCAGlBC,0BACkB,oCC/UpB,IAAIC,GAAe,cAEiBb,EAA6C/E,2CAIpExY,SAASC,YACQiR,KAAAA,MACQ,KAA5BA,EAAI,KAAkEA,EAAI,MAAkCmN,IAC9Gxe,EAASgV,0BAA0B,UAAWC,GAE9C7U,EADgCiR,EAA4B,WAK3DrR,EAASmV,mCACI,0CAEhBnV,EAASmV,uBAAuB,UAAWF,GAC3C3V,EAASqZ,EAAO7W,cAA2B,CAAA,GAAkD4b,EAAK,GAA2Bc,OClB7H,4BACG,IAA4C,QAC5C,KAAsC,OACtC,cASmC7F,EAAqB+E,EAA0BC,eACnF,IAA4Cc,GAAoBf,EAAe/E,GAEhFtY,MAAMqe,8BACWjB,gBAAAE,gBAGE,yBAGd,IAA4CgB,OAC5C,KAAsC,UAGnC,IAKbjG,iBChBK,4BAkBL9W,YAAY+W,QAXJiG,MAAQ,QACRC,2BACAC,UAAW,OAEXC,yBAIAC,gBAAkB,OAClBC,+BAGDhG,cAAgBN,qEAKdkG,eAAkEhG,IAA7CqG,GAAqCvG,GAAQE,WAAW,WAE7EkG,kBADAD,UAAW,SAUXD,eAA2ChG,IAAtBsG,EAAgB,EAAG,GAAGtG,WAAW,WACtDuG,wBAAwBnd,KAAKgX,oBAC7B8F,cAAe,GAQhBK,wBAAwBzG,QACzBqG,4FAmCF3e,uBAzBK4U,EAAiB,EAAG5D,KAAAA,MAEM,IAA5BA,EAAI,KACJA,EAAI,IAA2B,KAAOsH,EAAM,KAE5C3Y,EAASgV,0BAA0B,UAAWC,GAE9C7U,EADoCiR,EAAgC,UASnErR,EAASmV,uBAOZnV,EAASmV,uBAAuB,UAAWF,GAC3C3V,EAASqZ,EAAO7W,cAA2B,CAAA,EAAsD6W,EAAM,cAPnG0G,cAGc,0CAFhBC,EAASlf,QAAUA,MAQtBC,MAAMqe,SACFO,mBAAqBP,EAAS7F,WAAW,WACzC0G,2CAILD,EAASE,eAAiBA,EAC1BC,GAAiB7f,IAAI+Y,EAAQ2G,MASzBI,6BACDZ,UAAW,OAEXD,eAA2ChG,iEAAN,EAAG,GAAGA,WAAW,WACtDmG,kBAMCO,kCACDP,sBACD/c,KAAK+c,uBACFH,eAAiB5c,KAAKgd,wBACtBH,UAAW,OACXa,cAIDA,iBACD,oBACCra,EAAKsa,cACOta,EAAK6T,QAAU7T,EAAKiS,KAAK,QAEzBjS,EAAK6T,WAAW7T,EAAKiS,WAGlCqH,MAAM7gB,OAAS,EAGd8hB,aAAapX,EAAc8O,kDAEvBuH,eACHF,MAAMphB,KAAK,CAAE2b,OAAQ1Q,EAAM8O,KAAAA,EAAMqI,UAAU,MAK5CE,eAAerX,EAAc8O,QAC7BsH,eAAuBpW,GAAQ8O,EAAK,QAChCuH,eACHF,MAAMphB,KAAK,CAAE2b,OAAQ1Q,EAAM8O,KAAAA,EAAMqI,UAAU,IAI5CG,eAAetX,eACRoW,eAAuBpW,GAItC+Q,UAAU5E,EAAWC,EAAWC,EAAeC,QACxC8K,aAAa,YAAa,IAAIpH,YAGrCkB,SAAS/E,EAAWC,EAAWC,EAAeC,QACvC8K,aAAa,WAAY,IAAIpH,YAGpCmB,WAAWhF,EAAWC,EAAWC,EAAeC,QACzC8K,aAAa,aAAc,IAAIpH,YAItCoB,SAAS9H,EAAc6C,EAAWC,EAAWiF,QACtC+F,aAAa,WAAY,IAAIpH,YAGpCqC,WAAW/I,EAAc6C,EAAWC,EAAWiF,QACxC+F,aAAa,aAAc,IAAIpH,YAGtC6F,YAAYvM,eACE8N,aAAa,cAAe,IAAIpH,0BAIhC/Y,QACPogB,eAAe,YAAa,IAAIrH,wCAIzBsH,eAAe,yBAGjBrgB,QACLogB,eAAe,UAAW,IAAIrH,sCAIvBsH,eAAe,wBAGhBrgB,QACNogB,eAAe,WAAY,IAAIrH,uCAIxBsH,eAAe,2BAGdrgB,QACRogB,eAAe,aAAc,IAAIrH,yCAI1BsH,eAAe,cAG7BxD,0BACcsD,aAAa,cAAe,IAAIpH,YAG9C6D,YAAY0D,QACLH,aAAa,cAAe,IAAIpH,+BAGpB/Y,QACZogB,eAAe,iBAAkB,IAAIrH,6CAI9BsH,eAAe,2BAIpBrgB,QACFogB,eAAe,OAAQ,IAAIrH,mCAIpBsH,eAAe,sBAGfrgB,QACPogB,eAAe,YAAa,IAAIrH,wCAIzBsH,eAAe,8BAGZrgB,QACVogB,eAAe,eAAgB,IAAIrH,2CAI5BsH,eAAe,8BAGfrgB,QACPogB,eAAe,YAAa,IAAIrH,wCAIzBsH,eAAe,2BAIfrgB,GAGRA,iBAA4CuC,KAAK6c,SAG9Cpf,EAAK,SAQHogB,eAAe,YAAa,CAACpgB,EAAK,YAPlCkf,MAAMphB,KAAK,CAAE2b,OAAQ,YAAa5B,KAAM,CAAC7X,GAAQkgB,UAAU,SAE3DF,wBACLhgB,EAAK,IAA0CW,MAAK,UAC7Ckf,sCAOJO,eAAe,YAAa,IAAIrH,wCAK3BsH,eAAe,6BAGbrgB,GAGVA,iBAA4CuC,KAAK6c,SAG9Cpf,EAAK,SAYHogB,eAAe,cAAe,CAACpgB,EAAK,YAXpCkf,MAAMphB,KAAK,CACd2b,OAAQ,cACR5B,KAAM,CAAC7X,GACPkgB,UAAU,SAGPF,wBACLhgB,EAAK,IAA0CW,MAAK,UAC7Ckf,sCAQJO,eAAe,cAAe,IAAIrH,0CAK7BsH,eAAe,eAI7B9C,qBAAqBC,EAAYC,EAAY9B,EAAYC,eAC3CuE,aAAa,uBAAwB,IAAIpH,YAGvD6E,qBAAqBJ,EAAYC,EAAYI,EAAYlC,EAAYC,EAAYkC,eACnEqC,aAAa,uBAAwB,IAAIpH,YAGvDgF,cAAcC,EAA0BC,yEAIlC1b,KAAK8c,cAAgBrB,oBACXmC,aAAa,gBAAiB,IAAIpH,kBAIzCiH,mCAGM,IAA0Czd,KAAK0W,OAAQ+E,EAAOC,GAAYtd,MAAK,UACnFkf,mCAQXzB,UAAUJ,EAA0BK,EAAYC,qEAI1C/b,KAAK8c,cAAgBrB,oBAClBmC,aAAa,YAAa,IAAIpH,gBAC9B,eAGAmG,MAAMphB,KAAK,CAAE2b,OAAQ,YAAa5B,KAAAA,EAAMqI,UAAU,SAIlDF,2BAGehC,EAAezb,KAAK0W,QAErCtY,MAAMqe,IACLnH,EAAK/Z,KAAKkhB,EAAUX,EAAIC,QACnBuB,gDAME7f,QACRogB,eAAe,aAAc,IAAIrH,yCAI1BsH,eAAe,8BAGbrgB,QACTogB,eAAe,cAAe,IAAIrH,0CAI3BsH,eAAe,iCAGXrgB,QACXogB,eAAe,gBAAiB,IAAIrH,4CAI7BsH,eAAe,mCAGXrgB,QACXogB,eAAe,gBAAiB,IAAIrH,4CAI7BsH,eAAe,iBAI7BlF,iBACOgF,aAAa,YAAa,IAAIpH,YAGrCwB,iBACO4F,aAAa,YAAa,IAAIpH,YAGrCsB,OAAOnF,EAAWC,QACXgL,aAAa,SAAU,IAAIpH,YAGlCuB,OAAOpF,EAAWC,QACXgL,aAAa,SAAU,IAAIpH,YAGlCoD,cAAcC,EAAcC,EAAcC,EAAcC,EAAcrH,EAAWC,QAC1EgL,aAAa,gBAAiB,IAAIpH,YAGzC0D,iBAAiBC,EAAaC,EAAazH,EAAWC,QAC/CgL,aAAa,mBAAoB,IAAIpH,YAG5CsC,IAAInG,EAAWC,EAAWmG,EAAgBC,EAAoBC,EAAkB+E,QACzEJ,aAAa,MAAO,IAAIpH,YAG/B2C,MAAMC,EAAYC,EAAYC,EAAYC,EAAYR,QAC/C6E,aAAa,QAAS,IAAIpH,YAGjCgD,QACE7G,EACAC,EACA6G,EACAC,EACAC,EACAX,EACAC,EACA+E,QAEKJ,aAAa,UAAW,IAAIpH,YAGnCyD,KAAKtH,EAAWC,EAAWC,EAAeC,QACnC8K,aAAa,OAAQ,IAAIpH,YAIhCkE,KAAKF,EAA0CC,6BAExCmD,aAAa,OAAQtI,GAG5B2C,OAAOgG,6BAEAL,aAAa,SAAUtI,GAG9BiF,KAAKC,EAA0CC,6BAExCmD,aAAa,OAAQtI,GAG5B6G,cAAc+B,EAA0BC,EAAcC,EAAuC3D,oCAG/EmD,aAAa,gBAAiBtI,GAG5C8G,gBAAgB8B,EAA0BC,EAAcvL,oCAE1CgL,aAAa,kBAAmBtI,GAI9C+C,OAAOC,QACAsF,aAAa,SAAU,IAAIpH,YAGlCmC,MAAMhG,EAAWC,QACVgL,aAAa,QAAS,IAAIpH,YAGjCnC,UAAU1B,EAAWC,QACdgL,aAAa,YAAa,IAAIpH,YAGrC+B,UAAUjY,EAAWkY,EAAWnd,EAAWC,EAAWmd,EAAWC,QAC1DkF,aAAa,YAAa,IAAIpH,YAGrCC,aAAakE,EAAyCC,EAAeC,EAAeC,EAAeC,EAAerC,6BAE3GkF,aAAa,eAAgBtI,GAGjB8C,sBACZwF,aAAa,iBAAkB,IAAIpH,4BAI1B/Y,QACTogB,eAAe,cAAe,IAAIrH,0CAI3BsH,eAAe,4CAGArgB,QACtBogB,eAAe,2BAA4B,IAAIrH,uDAIxCsH,eAAe,4BAI7B9B,gBAAgBqC,EAAsCvL,oCAExC8K,aAAa,kBAAmBtI,GAG9C2G,aAAaqC,EAAYC,EAAYC,EAAYC,eACnCb,aAAa,eAAgB,IAAIpH,YAG/C0F,aAAawC,EAAsB5C,EAAYC,EAAY4C,EAAiBC,EAAiBC,EAAqBC,QAC3GlB,aAAa,eAAgB,IAAIpH,sCAIK/Y,QACtCogB,eAAe,wBAAyB,IAAIrH,oDAIrCsH,eAAe,mDAGgBrgB,QACtCogB,eAAe,wBAAyB,IAAIrH,oDAIrCsH,eAAe,yBAI7B3F,YACOyF,aAAa,OAAQ,IAAIpH,YAGhC0B,eACO0F,aAAa,UAAW,IAAIpH,qCAMrBQ,yBAIgBvZ,QACvBogB,eAAe,SAAU,IAAIrH,qCAItBsH,eAAe,WC/kBzB,sDACInH,eAERC,WAAWC,OACJ7W,KAAK2W,YACY,OAAhBE,GAAwC,OAAhBA,cAGV,oCAFXF,QAAU,IAAIoI,GAAgD/e,kBAK3D2W,SAGhBlC,EAAiB,SAAUuK,MAKT,CAAC,CAAElM,OAAQ,CAAC,IAAM,CAAED,MAAO,CAAC,KAAOmM,wBCnBrDvK,EAAiB,OAAQwK,MAIP,CAAC,CAAExhB,MAAO,CAAC,MAAQwhB,ICKrCxK,EAAiB,qDAHDhV,WAAWgE,QAAQjF,GAA0C,WAAlBA,EAAKoB,kCCNhE6U,EAAiB,QAASyK,MAOR,CAAC,CAAEpM,OAAQ,CAAC,KAAO,CAAEqM,IAAK,CAAC,KAAO,CAAE5d,KAAM,CAAC,KAAO,CAAEsR,MAAO,CAAC,MAAQqM,mFCFpFpa,OAAOC,eAAeJ,EAASK,UAAW,WAAY,CAKpDxH,eAC+BwC,KAAiB0T,EAA0B0L,mDCJtDpkB,uBAGxByZ,EAAiB,WAAY4K,OACGA,MAKd,CAAC,CAAE7Y,KAAM,CAAC,KAAO,CAAE6O,SAAU,EAAC,KAAWgK,gDCV1CC,SAA4BxjB,QAG7C2Y,EAAiB,OAAQ8K,OACOA,MAY9B,CACE,CAAE/Y,KAAM,CAAC,KACT,CAAEgZ,OAAQ,CAAC,QACX,CAAEngB,OAAQ,CAAC,KACX,CAAEogB,OAAQ,CAAC,KACX,CAAEC,QAAS,CAAC,sCACZ,CAAEC,cAAe,CAAC,sBAClB,CAAEC,aAAc,CAAC,OACjB,CAAEC,eAAgB,CAAC,eAErBN,0DC/BQO,0CAIMA,WAAa9f,KAAK8f,SAAW,IAAIxM,EAAatT,KAAM,aAGpEyU,EAAiB,SAAUsL,MACIA,GAAmB,CAChDC,QAAS,CAAEvM,GAAsBA,EAAGuM,QAAQviB,MAAO,CAACgW,EAAIhW,IAAmBgW,EAAGuM,QAAQviB,MAAQA,OAa9F,CACE,CAAEwiB,MAAO,CAAC,KACV,CAAEC,gBAAiB,EAAC,IACpB,CAAEC,IAAK,CAAC,KACR,CAAErN,OAAQ,CAAC,KACX,CAAEtM,KAAM,CAAC,KACT,CAAE4Z,eAAgB,CAAC,KACnB,CAAEjB,IAAK,CAAC,KACR,CAAEkB,OAAQ,CAAC,KACX,CAAExN,MAAO,CAAC,MAEZkN,wBClCFtL,EAAiB,MAAO6L,MActB,CACE,CAAEC,IAAK,CAAC,KACR,CAAEC,YAAa,CAAC,KAChB,CAAE1N,OAAQ,CAAC,IACX,CAAE2N,MAAO,EAAC,IACV,CAAEL,eAAgB,CAAC,KACnB,CAAEjB,IAAK,CAAC,KACR,CAAEuB,MAAO,CAAC,KACV,CAAEC,OAAQ,CAAC,KACX,CAAEC,OAAQ,CAAC,KACX,CAAE/N,MAAO,CAAC,KAEZyN,eCvBAxb,OAAOC,eAAeJ,EAASK,UAAW,SAAU,CAMlDxH,eAEMwC,KAAiBH,eAA6BG,MAC/CxD,GAAgC,UAApBA,EAAQxB,SAAuBwB,EAAQqkB,KAAOrkB,EAAQqkB,MAAS7gB,KAAiBqE,+DCC3F,IAAoC,QACpCyc,YAAsB,OACtB,KAAuC,0BAQhCA,WAAgD9gB,KAAI,IAAvCA,KAAKvD,aAAa,UAAY,aAGhDgB,QAGJ,IAA4B+J,OAAO/J,QAClCqjB,YAAa,IACT9gB,KAAKH,cAA2B,GAEvCG,KAAI,GACJgD,EAAY,WAEZA,EAAYvF,wFAQG,KAAOsjB,kBAIVtjB,QACRA,6BACM4I,UAAU,0CAEjB5I,MAAQuC,KAAKghB,aAAavjB,kCAI3BuC,KAAKvC,MAAM3B,OACNmlB,IAEFve,OAAO1C,KAAKvC,yBAIHA,QAETA,MADc,mBACN+J,OAAO/J,GAEP,6BAKJ,gBAGDA,GACNuC,KAAI,MAAgCvC,SAGpC,MAAgCA,EACpCJ,EAAS2C,KAAKH,cAA2B,GAEvCG,KAAI,GACJgD,EAAY,cAEF,IAAVvF,EAAgB,EAAsB,KAQlCujB,aAAaD,gDAIZ,GAAGnO,KAAS,EAAJjX,EAAQ,GAAK,MAAMA,KAAS,kBAAI,GAAK,MAAML,IAOpD4lB,aAAaC,MAEO,qBAAXrlB,yBAGTH,EAAAL,gBAEK8lB,KAAKnV,SAAS2G,EAAG,IAAK3G,SAAStQ,EAAG,IAAM,EAAGsQ,SAAS3Q,EAAG,MAGtEmZ,EAAiB,QAAS4M,OACLA,MAgCnB,CACE,CAAEC,OAAQ,CAAC,KACX,CAAEf,IAAK,CAAC,KACR,CAAEV,eAAgB,CAAC,KACnB,CAAED,aAAc,CAAC,KACjB,CAAExK,UAAW,EAAC,IACd,CAAEmM,eAAgB,EAAC,cACnB,CAAEpa,aAAc,CAAC,aACjB,CAAEqa,QAAS,CAAC,KACZ,CAAEnM,SAAU,EAAC,IACb,CAAEL,WAAY,CAAC,KACf,CAAEyM,YAAa,CAAC,KAChB,CAAEvM,WAAY,CAAC,KACf,CAAEC,WAAY,CAAC,KACf,CAAErC,OAAQ,CAAC,IACX,CAAE3S,IAAK,CAAC,KACR,CAAEuhB,UAAW,CAAC,IACd,CAAEC,IAAK,CAAC,KACR,CAAEC,SAAU,EAAC,IACb,CAAEpb,KAAM,CAAC,KACT,CAAEkW,QAAS,CAAC,KACZ,CAAEmF,YAAa,CAAC,KAChB,CAAEC,SAAU,EAAC,IACb,CAAEC,SAAU,EAAC,IACb,CAAEC,KAAM,CAAC,IACT,CAAE7C,IAAK,CAAC,KACR,CAAE8C,KAAM,CAAC,KACT,CAAE1gB,KAAM,CAAC,SACT,CAAEsR,MAAO,CAAC,KAEZwO,kFCzKMa,EACKliB,KAAKH,eAAkBG,KAAKH,cAA2BsiB,eAAeD,GAExEE,EAAkBpiB,KAAiB0T,EAA0B,CAAC,YAGzEe,EAAiB,QAAS4N,MAIR,CAAC,CAAEH,QAAS,CAAC,GAAI,SAAWG,0DCjBpC9N,0CAGMA,WAAavU,KAAKuU,SAAW,IAAIjB,EAAatT,KAAM,SAGpEyU,EAAiB,OAAQ6N,MACMA,GAAiB,CAC9C3N,IAAK,CAAElB,GAAsBA,EAAGmB,QAAQnX,MAAO,CAACgW,EAAIhW,IAAmBgW,EAAGmB,QAAQnX,MAAQA,OAEvE6kB,GAAiB,UAAW,SAa/C,CACE,CAAEC,GAAI,CAAC,KACP,CAAE/B,YAAa,CAAC,KAChB,CAAEnL,SAAU,EAAC,IACb,CAAEb,KAAM,CAAC,KACT,CAAEK,SAAU,CAAC,KACb,CAAEC,MAAO,CAAC,KACV,CAAEsL,eAAgB,CAAC,KACnB,CAAEM,MAAO,CAAC,KACV,CAAEnf,KAAM,CAAC,MAEX+gB,4CC5B+BtiB,MAAkBxD,GAAgC,SAApBA,EAAQxB,WAGvEyZ,EAAiB,MAAO+N,MAIN,CAAC,CAAEhc,KAAM,CAAC,MAAQgc,wBCbpC/N,EAAiB,QAASgO,OACLA,MASH,CAAC,CAAEC,KAAM,CAAC,IAAM,CAAEC,IAAK,CAAC,IAAM,CAAExiB,IAAK,CAAC,IAAM,CAAEwhB,IAAK,CAAC,IAAM,CAAEiB,QAAS,CAAC,IAAM,CAAEnlB,MAAO,CAAC,KAAOglB,wBCX/GhO,EAAiB,MAAOoO,MACP,MAAOA,MAKN,CAAC,CAAEC,KAAM,CAAC,KAAO,CAAEC,SAAU,CAAC,MAAQF,wBCNxDpO,EAAiB,KAAMuO,MAML,CAAC,CAAEC,SAAU,EAAC,IAAU,CAAElU,MAAO,CAAC,IAAM,CAAExN,KAAM,CAAC,MAAQyhB,0DCAjE,KAAwC,0BAMjCpnB,YAAcoE,KAAKpE,WAAW+H,SAAS9H,QAAQmE,OAAU,0BAQ1DvD,aAAa,UAAYuD,KAAKQ,sBAOlC0iB,QACHzb,aAAa,QAASyb,8BAQhB,iBAOAzlB,QACP,MAAiCA,IAC5BuC,KAAKH,cAA2B,GAEvCG,KAAI,GACJgD,EAAY,cAEZhD,KAAI,IAA8B,EAAsB,2BAU9CQ,qBAOLsP,QACFtP,YAAcsP,0BAQPrT,aAAa,UAAYuD,KAAKQ,sBAOlC/C,QACHgK,aAAa,QAAShK,IAG/BgX,EAAiB,SAAU0O,MACIA,GAAmB,CAChDC,SAAU,CAAE3P,GAAejM,OAAOiM,EAAE,KAA+B,CAACA,EAAIhW,IAA4BgW,EAAG2P,SAAqB,SAAV3lB,OAMlG,CAAC,CAAE4lB,gBAAiB,EAAC,eAAiC,CAAEhO,SAAU,EAAC,IAAU,CAAE9T,KAAM,CAAC,MAAQ4hB,0DC7FtG,KAA6C,OAC7C,IAAoC,OACpCrC,YAAsB,6BAGjB,KAAqC,EAAI9gB,KAAKvC,MAAQuC,KAAKG,4BAIzD2gB,WAAuD9gB,KAAI,IAA9C0C,OAAO1C,KAAKvD,aAAa,WAAa,YAGxDgB,QACJ,KAAoC,OACpC,IAA4BA,OAC3BqjB,YAAa,GAItBrM,EAAiB,WAAY6O,OACRA,MAIH,CAAC,CAAEnjB,IAAK,CAAC,KAAOmjB,wBC1BlC7O,EAAiB,aAAc8O,MACd,IAAKA,MAIJ,CAAC,CAAET,KAAM,CAAC,MAAQS,8CCCpB/iB,qBAOLsP,QACFtP,YAAcsP,GAGvB2E,EAAiB,SAAU+O,MAWzB,CAAC,CAAEjiB,KAAM,CAAC,KAAO,CAAE4d,IAAK,CAAC,KAAO,CAAEsE,QAAS,CAAC,KAAO,CAAEC,MAAO,EAAC,IAAU,CAAEC,MAAO,EAAC,IAAU,CAAEnD,YAAa,CAAC,KAAO,CAAErM,SAAU,EAAC,KAC/HqP,cCzBiD,8FAezC,KAAwB,KAMWpoB,SACpC,IAAiCA,KAKhC4E,KAAK4hB,UAAYgC,GAAkBxoB,IAAqBA,EAAMgoB,UAA4B,KAAfpjB,KAAKvC,cAC/EA,MAAQrC,EAAMqC,UAQmBrC,SACnC,IAAgCA,IAIhC4E,KAAK4hB,UAAYxmB,EAAMgoB,WAEL,mBAATtnB,cACL2B,MAAQ6E,EAAQ,GAAG7E,iCAUhB6E,QAAQxG,iCASR6H,SAASF,OAAOmgB,qCASgBC,aAChB7jB,KAAK2D,SAAS9H,QAAQioB,IAAuB,oBAQzDC,QACXpgB,SAASxI,SAAQ,CAACqB,EAAkBc,IAAmBd,EAAQ4mB,SAAW9lB,IAAUymB,mCAS5D/jB,KAAM6jB,sBASA,IAA5B7jB,KAAI,IACPA,KAAK4hB,SACJ,EACA,EACD5hB,KAAI,aAQDgiB,QACH,IAAkC,EAAPA,EAAWA,EAAOhiB,KAAK4hB,SAAU,EAAwB,yBAQ5EA,SAAU,aAAwB,2CAQFiC,aACfC,EAAyCrmB,MAAQ,aAOtEA,wBAEHkG,SAASxI,SAASqB,GAAqBonB,GAAkBpnB,KAAaA,EAAQ4mB,SAAW5mB,EAAQiB,QAAUumB,MAGpHvP,EAAiB,SAAUwP,OACNA,MAMH,CAAC,CAAErC,SAAU,EAAC,IAAU,CAAEpb,KAAM,CAAC,KAAO,CAAEub,SAAU,EAAC,KAAWkC,wBCzJlFxP,EAAiB,SAAUyP,MAQT,CAAC,CAAEpP,MAAO,CAAC,KAAO,CAAE4L,MAAO,CAAC,KAAO,CAAEvB,IAAK,CAAC,KAAO,CAAEwB,OAAQ,CAAC,KAAO,CAAEpf,KAAM,CAAC,MAAQ2iB,wBCRvGzP,EAAiB,QAAS0P,MAKR,CAAC,CAAErP,MAAO,CAAC,KAAO,CAAEvT,KAAM,CAAC,MAAQ4iB,0DCH3CC,0CAGMA,WAAapkB,KAAKokB,SAAW,IAAI9Q,EAAatT,KAAM,yCAQ/B0T,GAAgC,sBAC1DxR,EAAkBuC,EAAsBvC,EAAQwR,EAA0B,CAAC,KAAM,QAAQ7X,QAAQmE,OAAS,GAGrHyU,EAAiB,KAAM4P,MACN,KAAMA,MACQA,GAAsB,CACnDC,QAAS,CAAE7Q,GAAsBA,EAAG6Q,QAAQ7mB,MAAO,CAACgW,EAAIhW,IAAmBgW,EAAG6Q,QAAQ7mB,MAAQA,OAQ9E,CAAC,CAAE8mB,KAAM,CAAC,KAAO,CAAEC,QAAS,CAAC,IAAM,CAAEC,QAAS,CAAC,IAAM,CAAEC,MAAO,CAAC,MAAQL,wBC5BzF5P,EAAiB,MAAOkQ,MAIN,CAAC,CAAEC,KAAM,CAAC,KAAOD,cCCKnoB,EAAAzB,WAKhC8pB,EAAsBzC,EAAkBlgB,GAAS1F,IAA+BzB,EAASoB,SAASK,EAAQxB,aAE9GkH,EAAOpB,aAAatE,EAASqoB,GAE7B3iB,EAAOjB,YAAYzE,IA4FvBiY,EAAiB,+CAlFYzU,KAAM0T,EAA0B,CAAC,yBAOhDoR,MACNA,GAAqC,YAAvBA,EAAW9pB,QAAuB,CAK/B+pB,IAAAA,EAALA,KAAKA,2BACdjkB,aAAagkB,EAAY9kB,KAAKglB,yCASZhlB,KAAM0T,EAA0B,CAAC,qBAOlDoR,MACJA,GAAqC,UAAvBA,EAAW9pB,QAAqB,CAM7BiqB,IAAAA,EAALA,KAAKA,uBACajlB,KAAM8kB,EAAY,CAAC,UAAW,mCASvC9kB,KAAM0T,EAA0B,CAAC,qBAOlDoR,MACJA,GAAqC,UAAvBA,EAAW9pB,QAAqB,CAM7BkqB,IAAAA,EAALA,KAAKA,uBACallB,KAAM8kB,EAAY,CAAC,UAAW,WAAY,+BAS/C9kB,KAAM0T,EAA0B,CAAC,+BAQjC1T,KAAM0T,EAA0B,CAAC,6DCnG1CyR,YAChBjjB,EAAyBkjB,EAAmB5oB,EAAS2oB,KAEjC,EAAKjjB,EAA4BmjB,KAAKxpB,QAAQW,GAwD1EiY,EAAiB,0CA/CgBzU,KAAM0T,EAA0B,CAAC,KAAM,iCAQ7C1T,KAAM0T,EAA0B,CAAC,2CAQjC1T,KAAM0T,EAA0B4R,KAQlDC,WAAWjoB,sBAGdkoB,EAAKtkB,SASFukB,WAAWnoB,sEAGZA,GAAaA,GAASooB,EAAM5pB,YACzBmF,YAAY0kB,QAEZ7kB,aAAa6kB,EAAI3lB,KAAK2D,SAASrG,gDCnDT0C,KAAM0T,EAA0B,CAAC,QAQzDkS,UAAUtoB,oBAEF,GAATA,GAAcA,GAAS+nB,EAAKvpB,SAC9BupB,EAAK/nB,GAAO4D,SAUT2kB,UAAUvoB,qEAGXA,GAAaA,GAAS+nB,EAAKvpB,YACxBmF,YAAY6kB,QAEZhlB,aAAaglB,EAAI9lB,KAAK2D,SAASrG,OAK1CmX,EAAiB,QAASsR,MACT,QAASA,MACT,QAASA,wBCxC1BtR,EAAiB,OAAQuR,MAIP,CAAC,CAAEC,SAAU,CAAC,MAAQD,uBCGtCrmB,YAAYyP,EAAcnU,EAAoB2E,EAAoBC,EAAqBC,SAC/E7E,EAAU2E,EAAUC,EAAeC,QAHnC,gBAIF,IAA2BsP,OAE3B,GAAqC,CAACpP,KAAI,GAA2B/E,EAAU+H,EAAYpD,GAAWoD,EAAYoM,GAAO,0BAgBlH,aAMJ3R,wBAEH,IAA2BA,IAG7BuC,KAAKH,cACL,CACER,OAAQW,KACRuB,KAAI,EACJ9D,MAAAA,EACA+H,SAAAA,GAEF,CAAA,EAA2CxF,KAAI,GAA2BgD,EAAYvF,8BAQ7E,IAAyB3B,mCAOzB,kBAMC2B,QACP2R,KAAO3R,GCpEV,oBACJkC,YAAYyP,EAAcvP,EAAqBC,SACvCsP,EAAI,EAAsB,QAASvP,EAAeC,iCAa5CsP,qBAQE3R,QAETyoB,UAAYzoB,EAOZ0U,wBACOtS,cAAcsC,eAAenC,KAAKoP,MASzC+W,UAAU9P,kCACoBrW,kBAATA,8CAGrBkmB,UAAYlmB,KAAKoP,KAAKpO,MAAM,EAAGqV,GACjB,OAAfza,EAAqB,iDAMLkF,aAAaslB,mCCrD/B,oBACJzmB,YAAYyP,EAAcvP,EAAqBC,SACvCsP,EAAI,EAAyB,WAAYvP,EAAeC,iCAQlDsP,qBAQE3R,QAETyoB,UAAYzoB,EAOZ0U,wBACOtS,cAAcoQ,cAAcjQ,KAAKoP,OC3B3C,mBACJzP,YAAYE,EAAqBC,SAC1B,GAAkC,qBAAsBD,EAAeC,QAExE,GAAqC,CAACE,KAAI,GAAyB,GAAmCgD,EAAYhD,KAAKJ,UAAW,EAAG,GAOpIuS,UAAUC,GAAgB,oEAGxB3S,WAAWtE,SAASC,GAAUiX,EAAMpR,YAAY7F,EAAM+W,UAAUC,SC8BrE,mBAWJzS,YAAY0mB,SACL,6CAAwD,WAJxDtT,+BADAG,4BADAzU,iBAHA6nB,UADAC,qBADAC,wBAQA,KAA6C,OAK7C5mB,0BACA2mB,gBAAkBvmB,UAElBwmB,YAAc1hB,OAAOqJ,OAAOkY,EAAQ,CACvCtoB,SAAUiC,KACVoC,iBAAkBpC,KAAKoC,iBAAiBgD,KAAKpF,MAC7C+C,oBAAqB/C,KAAK+C,oBAAoBqC,KAAKpF,aC3DnDymB,IAAoBJ,IDsEdK,W9CmEcL,sBAEVnT,wBAGdnV,EAASmV,uBAAuB,WAAW,EAAG9D,KAAAA,SACZ,IAA5BA,EAAI,8BAKK,OAAT5Q,EAAe,CACZyE,IAAAA,EAALzE,EAAKyE,cACH6B,EAAAA,OAAOqJ,EAAPrJ,EAAOqJ,OACL8C,EAAA,IAAI0V,EAAMzjB,EAAK,IAA0B,CACvCK,QAASL,EAAK,IACdI,WAAYJ,EAAK,MAGH0jB,EAAA1jB,EAAK,IACD2jB,EAAA3jB,EAAK,IACX0P,EAAA1P,EAAK,IACNsU,EAAAtU,EAAK,IACH4jB,EAAA5jB,EAAK,OA3EY,OA4EcA,EA5E7C,IAAqC,CACtC5F,IAAAA,EA2E8C4F,EA3EhC,IAA+C,KAE5D1F,EAAc,IAAVF,EAAcA,EAyEU+oB,EAAOtoB,SAzED,WAEpC,OA2DHsF,KAAA7E,EACS2P,EAAP9K,KAAAyB,EACEmM,EAIA,CACEvE,aAAcka,EACdpjB,iBAAkBqjB,EAClBpa,WAAYmG,EACZpG,UAAWgL,EACX/b,YAAaqrB,EACbznB,OAAQ0nB,EACRxa,UAAWrJ,EAAK,IAChBoJ,OAAQpJ,EAAK,IACb8jB,QAAS9jB,EAAK,IACd8J,MAAO9J,EAAK,IACZ6J,MAAO7J,EAAK,IACZ4J,QAAS5J,EAAK,IACd2J,QAAS3J,EAAK,IACd0J,QAASqa,EAAsBZ,EAAOtoB,SAAUmF,EAAK,IACrDyJ,eAAgBsa,EAAsBZ,EAAOtoB,SAAUmF,EAAK,a8CnGpDlD,KAAKwmB,iBCvECH,EDwEFrmB,KAAKwmB,uBCtEbtT,wBAGdnV,EAASmV,uBAAuB,WAAW,EAAG9D,KAAAA,SACZ,IAA5BA,EAAI,+BAML5Q,EAAKqB,cAA0B,KAAoC,EAEpErB,EAAKf,MAAQypB,EAAI,IAChB1oB,EAAKqB,cAA0B,KAAoC,OCtBpEH,SAAoB2mB,sBAEVnT,wBAGdnV,EAASmV,uBAAuB,WAAW,EAAG9D,KAAAA,MACZ,IAA5BA,EAAI,iBAKNiX,EAAOc,WAAaD,EAAK,GACzBb,EAAOe,YAAcF,EAAK,QFoEZlnB,KAAKwmB,gBAQgBa,EAAwBC,UACrDA,EAAQ,SACd,aACaC,GAAKF,EAAQC,EAAQ,IAA4CtnB,KAAMsnB,EAAQ,SAC5F,aACaE,GAAQH,EAAQC,EAAQ,IAA4CtnB,KAAMsnB,EAAQ,+FAKzC9iB,EAAW8B,EAActG,KAAMsnB,EAAQ,WAE1FA,EAAQ,IAAkC,IAAInsB,SAASssB,GAEtDjpB,EAAK0S,eACuB,SAA1BmW,EAAQI,EAAU,IAAiBJ,EAAQI,EAAU,mCACrDJ,EAAQI,EAAU,IAClBJ,EAAQI,EAAU,QAGrBH,EAAQ,IAAkC,IAAInsB,SAASC,GAAUoD,EAAKyC,YAAYjB,KAAI,IAAgCqnB,EAASjsB,SAK/HssB,cAAclhB,eACPmhB,+CAAwCnhB,iBAG/CmhB,gBAAgBrhB,EAA4B9B,iCAE3B,EAAwBA,EAAW8B,EAActG,MAOlE4nB,YAAYrmB,cACNolB,MAAMplB,EAAM,CAAEgC,SAAS,EAAOD,YAAY,IAGhDnB,eAAe2N,cACTyX,GAAKzX,EAAM9P,MAGjBiQ,cAAcH,cACR0X,GAAQ1X,EAAM9P,MAGpB6nB,oCACMC,GAAiB9nB,MAOvBmiB,eAAe9d,YACKrE,KAAKsmB,MAAO9pB,GAAYA,EAAQ6H,KAAOA,iDGlKvD0jB"}